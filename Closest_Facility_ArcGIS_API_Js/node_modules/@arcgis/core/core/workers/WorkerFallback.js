/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import e from"../global.js";import t from"./RemoteClient.js";import{MessageType as s,receiveMessage as r}from"./utils.js";class n{constructor(){const e=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach((t=>{this[t]=(...s)=>e[t](...s)}))}}const o=e.MutationObserver||e.WebKitMutationObserver,a=function(){let t;if(e.process&&e.process.nextTick)t=t=>{e.process.nextTick(t)};else if(e.Promise)t=t=>{e.Promise.resolve().then(t)};else if(o){const e=[],s=document.createElement("div");new o((()=>{for(;e.length>0;)e.shift()()})).observe(s,{attributes:!0}),t=t=>{e.push(t),s.setAttribute("queueStatus","1")}}return t}(),i=(()=>{const t=e.MessageEvent;try{new t("message",{data:null})}catch{return(e,t={})=>{const{data:s,bubbles:r=!1,cancelable:n=!1}=t,o=document.createEvent("Event");return o.initEvent(e,r,n),o.data=s,o}}return(e,s)=>new t(e,s)})();class d{constructor(){this._dispatcher=new n,this._workerPostMessage({type:s.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(e){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler),this._onmessageHandler=e,e&&this.addEventListener("message",e)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(e){this._onmessageerrorHandler&&this.removeEventListener("messageerror",this._onmessageerrorHandler),this._onmessageerrorHandler=e,e&&this.addEventListener("messageerror",e)}get onerror(){return this._onerrorHandler}set onerror(e){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler),this._onerrorHandler=e,e&&this.addEventListener("error",e)}postMessage(e){a((()=>{this._workerMessageHandler(i("message",{data:e}))}))}dispatchEvent(e){return this._dispatcher.dispatchEvent(e)}addEventListener(e,t,s){this._dispatcher.addEventListener(e,t,s)}removeEventListener(e,t,s){this._dispatcher.removeEventListener(e,t,s)}_workerPostMessage(e){a((()=>{this.dispatchEvent(i("message",{data:e}))}))}async _workerMessageHandler(e){const n=r(e);if(n&&n.type===s.OPEN){const{modulePath:e,jobId:r}=n;let o=await t.loadWorker(e);o||(o=await import(
/* @vite-ignore */
/* webpackIgnore: true */
e));const a=t.connect(o);this._workerPostMessage({type:s.OPENED,jobId:r,data:a})}}}export{d as default};
