/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{clone as e}from"../../core/lang.js";import t from"./RasterFunction.js";import{convertColorRampToColormap as n,getColorRampName as r}from"../../renderers/support/colorRampUtils.js";import{stretchTypeJSONDict as a}from"../../renderers/support/stretchRendererUtils.js";import o from"../../renderers/visualVariables/SizeVariable.js";const i={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},u={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},s=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function l(e){return s.has(e.type)}function m(t,n){if(!t||!n)return e(t||n);const r=e(t);if("none"!==n.functionName.toLowerCase()){p(r.functionArguments).Raster=n}return r}function c(e,t){switch(t=t||{},e.type){case"raster-stretch":return h(e,t);case"class-breaks":return b(e,t);case"unique-value":return v(e,t);case"raster-colormap":return R(e,t);case"vector-field":return d(e,t);case"raster-shaded-relief":return g(e,t)}}function p(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?p(t.functionArguments):e}const f={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function d(e,n){const r=new t;r.functionName="VectorFieldRenderer";const{dataType:a,bandProperties:i}=n,s="vector-uv"===a;let l,m;i&&2===i.length&&(l=i.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),m=i.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==l&&null!==l||(l=0,m=1);const c="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new o,d={magnitudeBandID:l,directionBandID:m,isUVComponents:s,referenceSystem:c,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:u[e.style.toLowerCase().replace("-","_")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=d,r}function g(e,r){if("elevation"!==r.dataType)return new t;const a=new t;a.functionName="Hillshade";const o="traditional"===e.hillshadeType?0:1,i="none"===e.scalingType?1:3,u={HillshadeType:o,SlopeType:i,ZFactor:e.zFactor};return 0===o&&(u.Azimuth=e.azimuth,u.Altitude=e.altitude),3===i&&(u.PSPower=e.pixelSizePower,u.PSZFactor=e.pixelSizeFactor),a.functionArguments=u,a.variableName="Raster",e.colorRamp&&(a.functionName="ShadedRelief",u.Colormap=n(e.colorRamp,256)),a}function h(e,o){const i=new t;i.functionName="Stretch";const u=f[a.toJSON(e.stretchType)],s="u8",l={StretchType:u,Statistics:A(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),u===f.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):u===f.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,i.outputPixelType=s):u===f.minMax?i.outputPixelType=s:u===f.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=l,i.variableName="Raster",e.colorRamp){const a=e.colorRamp,u=new t,s=r(a);return s?u.functionArguments={colorRamp:s}:!o.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type?u.functionArguments={colorRamp:e.colorRamp.toJSON()}:u.functionArguments={Colormap:n(a,256)},u.variableName="Raster",u.functionName="Colormap",u.functionArguments.Raster=i,u}return i}function b(e,n){const r=[],a=[],o=[],i=[],u=1e-6,{pixelType:s,rasterAttributeTable:l}=n,m=l&&l.features,c=S(l);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let a;r.a&&m.forEach((o=>{a=o.attributes[e.field],(a>=t.minValue&&a<t.maxValue||n===e.classBreakInfos.length-1&&a>=t.minValue)&&i.push([o.attributes[c],r.r,r.g,r.b])}))}));const n=s?y(i,s):i,r=new t;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=n,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?r.push(e.minValue,e.maxValue+u):r.push(e.minValue+u,e.maxValue+u),a.push(t),i.push([t,n.r,n.g,n.b])):o.push(e.minValue,e.maxValue)}));const p=s?y(i,s):i,f=new t;f.functionName="Remap",f.functionArguments={InputRanges:r,OutputValues:a,NoDataRanges:o},f.variableName="Raster";const d=new t;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:f},d}function y(e,t){const n=i[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function S(e){if(!e)return;const{fields:t}=e,n=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return n&&n.name}function v(e,n){var r;const a=[],{pixelType:o,rasterAttributeTable:i}=n,u=i&&i.features,s=S(i),l=null==(r=e.defaultSymbol)?void 0:r.color;let m=!1;if(e.uniqueValueInfos&&(u?u.forEach((t=>{var n;const r=null==(n=e.uniqueValueInfos.find((n=>String(t.attributes[e.field])===String(n.value))))?void 0:n.symbol.color;r?a.push([t.attributes[s],r.r,r.g,r.b]):l&&a.push([t.attributes[s],l.r,l.g,l.b])})):e.uniqueValueInfos.forEach((e=>{var t;if(null==(t=e.symbol.color)||!t.a)return;const n=e.symbol.color;isNaN(+e.value)?m=!0:a.push([+e.value,n.r,n.g,n.b])}))),m)return null;const c=o&&a.length>0?y(a,o):a,p=new t;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=c,p.variableName="Raster",p}function R(e,n){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:a}=n,o=a?y(r,a):r,i=new t;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=o,i}function A(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else{if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e)}})),t}export{m as combineRenderingRules,c as convertRendererToRenderingRule,l as isSupportedRendererType,i as pixelTypeRanges};
