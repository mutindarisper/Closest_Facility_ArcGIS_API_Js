/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e}from"../../../core/maybe.js";import n from"../PixelBlock.js";function i(e){return t(e)&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function l(t,e){if(null==e||!e.length||!i(t))return t;const l=t.pixels.length;return e&&e.some((t=>t>=l))||1===l&&1===e.length&&0===e[0]?t:l!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function r(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),r=new Uint8Array(4*l),o=[];let s,a=0,f=0;const h=5===n[0].length;if(l>65536)return n.forEach((t=>{o[t[0]-i]=h?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:o,offset:i,alphaSpecified:h};if(t.fillUnspecified)for(s=n[f],a=s[0]-i;a<l;a++)r[4*a]=s[1],r[4*a+1]=s[2],r[4*a+2]=s[3],r[4*a+3]=h?s[4]:255,a===s[0]-i&&(s=f===n.length-1?s:n[++f]);else for(a=0;a<n.length;a++)s=n[a],f=4*(s[0]-i),r[f]=s[1],r[f+1]=s[2],r[f+2]=s[3],r[f+3]=h?s[4]:255;return{indexedColormap:r,offset:i,alphaSpecified:h}}function o(t,e){if(!i(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const n=t.clone(),l=n.pixels;let r=n.mask;const o=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:f,alphaSpecified:h}=e,u=s.length-1;let c=0;const x=l[0],m=new Uint8Array(x.length),p=new Uint8Array(x.length),d=new Uint8Array(x.length);let g,y=0;if(s)if(r)for(c=0;c<o;c++)r[c]&&(y=4*(x[c]-f),y<f||y>u?r[c]=0:(m[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],r[c]=s[y+3]));else{for(r=new Uint8Array(o),c=0;c<o;c++)y=4*(x[c]-f),y<f||y>u?r[c]=0:(m[c]=s[y],p[c]=s[y+1],d[c]=s[y+2],r[c]=s[y+3]);n.mask=r}else if(r)for(c=0;c<o;c++)r[c]&&(g=a[x[c]],m[c]=g[0],p[c]=g[1],d[c]=g[2],r[c]=g[3]);else{for(r=new Uint8Array(o),c=0;c<o;c++)g=a[x[c]],m[c]=g[0],p[c]=g[1],d[c]=g[2],r[c]=g[3];n.mask=r}return n.pixels=[m,p,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function s(t){if(!i(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:n,pixelType:l,statistics:r}=t,o=t.width*t.height,s=e.length;let a,f,h,u,c;const x=[],m=[];let p,d,g,y,w,M,k,A,U,C;const T=256;for(u=0;u<s;u++){if(p=new Uint32Array(T),g=e[u],"u8"===l)if(a=-.5,f=255.5,n)for(c=0;c<o;c++)n[c]&&p[g[c]]++;else for(c=0;c<o;c++)p[g[c]]++;else{if(a=r[u].minValue,f=r[u].maxValue,h=(f-a)/T,d=new Uint32Array(T+1),n)for(c=0;c<o;c++)n[c]&&d[Math.floor((g[c]-a)/h)]++;else for(c=0;c<o;c++)d[Math.floor((g[c]-a)/h)]++;for(c=0;c<255;c++)p[c]=d[c];p[255]=d[255]+d[256]}for(x.push({min:a,max:f,size:T,counts:p}),y=0,w=0,A=0,c=0;c<T;c++)y+=p[c],w+=c*p[c];for(U=w/y,c=0;c<T;c++)A+=p[c]*(c-U)**2;C=Math.sqrt(A/(y-1)),h=(f-a)/T,M=(U+.5)*h+a,k=C*h,m.push({min:a,max:f,avg:M,stddev:k})}return{statistics:m,histograms:x}}function a(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:r,counts:o}=t[n];let s=0,a=0;for(let t=0;t<r;t++)s+=o[t],a+=t*o[t];const f=a/s;let h=0;for(let t=0;t<r;t++)h+=o[t]*(t-f)**2;const u=(l-i)/r,c=(f+.5)*u+i,x=Math.sqrt(h/(s-1))*u;e.push({min:i,max:l,avg:c,stddev:x})}return e}function f(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,r=t.outMin||0,o=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const s=e.length;let a,f,u=0;"s8"===l?u=-127:"s16"===l&&(u=-32767);let c=256;["u16","s16"].indexOf(l)>-1&&(c=65536);const x=[],m=[],p=o-r;for(a=0;a<s;a++)m[a]=n[a]-e[a],x[a]=p/(n[a]-e[a]);const d=i&&i.length>=s,g=[];if(d)for(a=0;a<s;a++)i[a]>1?i[a]>2?g[a]=6.5+(i[a]-2)**2.5:g[a]=6.5+100*(2-i[a])**4:g[a]=1;let y;const w=[];let M,k,A;if(d)for(a=0;a<s;a++){for(A=[],f=0;f<c;f++)M=f+u,y=(M-e[a])/m[a],k=1,i[a]>1&&(k-=(1/p)**(y*g[a])),M<n[a]&&M>e[a]?A[f]=Math.floor(k*p*y**(1/i[a]))+r:M>=n[a]?A[f]=o:A[f]=r;w[a]=A}else for(a=0;a<s;a++){for(A=[],f=0;f<c;f++)M=f+u,M<=e[a]?A[f]=r:M>=n[a]?A[f]=o:A[f]=Math.floor((M-e[a])/m[a]*p)+r;w[a]=A}if(null!=t.contrastOffset){const e=h(t.contrastOffset,t.brightnessOffset);for(a=0;a<s;a++)for(A=w[a],f=0;f<c;f++)A[f]=e[A[f]]}return{lut:w,offset:u}}function h(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,r=128;let o,s;const a=new Uint8Array(256);for(o=0;o<256;o++)n>0&&n<100?s=(200*o-100*l+2*l*i)/(2*(100-n))+r:n<=0&&n>-100?s=(200*o-100*l+2*l*i)*(100+n)/2e4+r:100===n?(s=200*o-100*l+(l+1)*(100-n)+2*l*i,s=s>0?l:0):-100===n&&(s=r),a[o]=s>l?l:s<0?0:s;return a}function u(t,e=256){e=Math.min(e,256);const{size:n,counts:i}=t,l=new Uint8Array(n),r=i.reduce(((t,n)=>t+n/e),0);let o=0,s=0,a=0,f=r;for(let h=0;h<n;h++)if(a+=i[h],!(h<n-1&&a+i[h+1]<f)){for(;o<e-1&&f<a;)o++,f+=r;for(let t=s;t<=h;t++)l[t]=o;s=h+1}for(let h=s;h<n;h++)l[h]=e-1;return l}function c(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l,mask:r}=n,{minCutOff:o,maxCutOff:s,gamma:a}=e,f=e.outMin||0,h=e.outMax||255,u=n.width*n.height,c=l.length;let x,m,p,d,g;const y=h-f,w=[],M=[];for(x=0;x<c;x++)M[x]=s[x]-o[x],w[x]=y/(s[x]-o[x]);const k=a&&a.length>=c,A=[];if(k)for(x=0;x<c;x++)a[x]>1?a[x]>2?A[x]=6.5+(a[x]-2)**2.5:A[x]=6.5+100*(2-a[x])**4:A[x]=1;if(k)if(null!=r){for(m=0;m<u;m++)if(r[m])for(x=0;x<c;x++)p=l[x][m],g=(p-o[x])/M[x],d=1,a[x]>1&&(d-=(1/y)**(g*A[x])),p<s[x]&&p>o[x]?l[x][m]=Math.floor(d*y*g**(1/a[x]))+f:p>=s[x]?l[x][m]=h:l[x][m]=f}else for(m=0;m<u;m++)for(x=0;x<c;x++)p=l[x][m],g=(p-o[x])/M[x],d=1,a[x]>1&&(d-=(1/y)**(g*A[x])),p<s[x]&&p>o[x]?l[x][m]=Math.floor(d*y*g**(1/a[x]))+f:p>=s[x]?l[x][m]=h:l[x][m]=f;else if(null!=r){for(m=0;m<u;m++)if(r[m])for(x=0;x<c;x++)p=l[x][m],p<s[x]&&p>o[x]?l[x][m]=Math.floor((p-o[x])/M[x]*y)+f:p>=s[x]?l[x][m]=h:l[x][m]=f}else for(m=0;m<u;m++)for(x=0;x<c;x++)p=l[x][m],p<s[x]&&p>o[x]?l[x][m]=Math.floor((p-o[x])/M[x]*y)+f:p>=s[x]?l[x][m]=h:l[x][m]=f;return n.pixelType="u8",n.updateStatistics(),n}function x(t,e){if(!i(t))return null;const{pixels:l,mask:r}=t,o=t.width*t.height,s=l.length;let a=e.lut;const{offset:f}=e;let h,u;a&&1===a[0].length&&(a=l.map((()=>a)));const c=[];let x,m,p;if(f)if(null==r)for(h=0;h<s;h++){for(x=l[h],m=a[h],p=new Uint8Array(o),u=0;u<o;u++)p[u]=m[x[u]-f];c.push(p)}else for(h=0;h<s;h++){for(x=l[h],m=a[h],p=new Uint8Array(o),u=0;u<o;u++)r[u]&&(p[u]=m[x[u]-f]);c.push(p)}else if(null==r)for(h=0;h<s;h++){for(x=l[h],m=a[h],p=new Uint8Array(o),u=0;u<o;u++)p[u]=m[x[u]];c.push(p)}else for(h=0;h<s;h++){for(x=l[h],m=a[h],p=new Uint8Array(o),u=0;u<o;u++)r[u]&&(p[u]=m[x[u]]);c.push(p)}const d=new n({width:t.width,height:t.height,pixels:c,mask:r,pixelType:"u8"});return d.updateStatistics(),d}function m(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l}=n,r=n.width*n.height,o=e.length,s=Math.floor(o/2),a=e[Math.floor(s)],f=l[0];let h,u,c,x,m,p,d=!1;const g=new Uint8Array(r),y=new Uint8Array(r),w=new Uint8Array(r);let M=n.mask;const k=4===e[0].mappedColor.length;for(M||(M=new Uint8Array(r),M.fill(k?255:1),n.mask=M),m=0;m<r;m++)if(M[m]){for(h=f[m],d=!1,p=s,u=a,c=0,x=o-1;x-c>1;){if(h===u.value){d=!0;break}h>u.value?c=p:x=p,p=Math.floor((c+x)/2),u=e[Math.floor(p)]}d||(h===e[c].value?(u=e[c],d=!0):h===e[x].value?(u=e[x],d=!0):h<e[c].value?(d=!1,u=null):h>e[c].value&&(h<e[x].value?(u=e[c],d=!0):x===o-1?(d=!1,u=null):(u=e[x],d=!0))),d?(g[m]=u.mappedColor[0],y[m]=u.mappedColor[1],w[m]=u.mappedColor[2],M[m]=u.mappedColor[3]):g[m]=y[m]=w[m]=M[m]=0}return n.pixels=[g,y,w],n.mask=M,n.pixelType="u8",n.maskIsAlpha=k,n}function p(t,e,n,i,l,r,o,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:r<=i*e?0:r<i*e+e?r-i*e:e,xmax:l+o<=n*t?0:l+o<n*t+t?l+o-n*t:t,ymax:r+s<=i*e?0:r+s<i*e+e?r+s-i*e:e}}function d(t,n){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i||e(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,r=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,o=.01*Math.min(l,r),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>o?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>o?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,s.map((t=>t.extent.xmin))),f=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),u=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((n.xmin-a)/l),y:Math.round((u-n.ymax)/r)},x={width:Math.round((h-a)/l),height:Math.round((u-f)/r)},m={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/r)};if(Math.round(x.width/i.pixelBlock.width)*Math.round(x.height/i.pixelBlock.height)!==s.length||c.x<0||c.y<0||x.width<m.width||x.height<m.height)return null;return{extent:n,pixelBlock:y(s.map((t=>t.pixelBlock)),x,c,m)}}function g(t,e,n,i,l,r){const{width:o,height:s}=n.block,{x:a,y:f}=n.offset,{width:h,height:u}=n.mosaic,c=p(o,s,i,l,a,f,h,u);let x=0,m=0;if(r){const t=r.hasGCSSShiftTransform?360:r.halfWorldWidth,e=o*r.resolutionX,n=r.startX+i*e,l=n+e;n<t&&l>t?m=r.rightPadding:n>=t&&(x=r.leftMargin-r.rightPadding,m=0)}if(c.xmax-=m,"number"!=typeof e)for(let p=c.ymin;p<c.ymax;p++){const n=(l*s+p-f)*h+(i*o-a)+x,r=p*o;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e[r+i]}else for(let p=c.ymin;p<c.ymax;p++){const n=(l*s+p-f)*h+(i*o-a)+x;for(let i=c.xmin;i<c.xmax;i++)t[n+i]=e}}function y(l,r,o,s,a){const f=l.filter((t=>i(t)))[0];if(e(f))return null;const h=s?s.width:r.width,u=s?s.height:r.height,c=f.width,x=f.height,m=r.width/c,p=r.height/x,d={offset:o||{x:0,y:0},mosaic:s||r,block:{width:c,height:x}},y=f.pixelType,w=n.getPixelArrayConstructor(y),M=f.pixels.length,k=[];let A,U;for(let t=0;t<M;t++){U=new w(h*u);for(let e=0;e<p;e++)for(let n=0;n<m;n++){const r=l[e*m+n];i(r)&&(A=r.pixels[t],g(U,A,d,n,e,a))}k.push(U)}let C;if(l.some((t=>e(t)||t.mask&&t.mask.length>0))){C=new Uint8Array(h*u);for(let e=0;e<p;e++)for(let n=0;n<m;n++){const i=l[e*m+n],r=t(i)?i.mask:null;g(C,r||(i?1:0),d,n,e,a)}}const T=new n({width:h,height:u,pixels:k,pixelType:y,mask:C});return T.updateStatistics(),T}function w(t,e,n){if(!i(t))return null;const{width:l,height:r}=t,o=e.x,s=e.y,a=n.width+o,f=n.height+s;if(o<0||s<0||a>l||f>r)return t;if(0===o&&0===s&&a===l&&f===r)return t;t.mask||(t.mask=new Uint8Array(l*r));const h=t.mask;for(let i=0;i<r;i++){const t=i*l;for(let e=0;e<l;e++)h[t+e]=i<s||i>=f||e<o||e>=a?0:1}return t.updateStatistics(),t}function M(t){if(!i(t))return null;const e=t.clone(),{width:n,height:l,pixels:r,mask:o}=t,s=r[0],a=e.pixels[0];for(let i=2;i<l-1;i++){const t=new Map;for(let l=i-2;l<i+2;l++)for(let e=0;e<4;e++){const i=l*n+e;U(t,s[i],o?o[i]:1)}a[i*n]=k(t),a[i*n+1]=a[i*n+2]=a[i*n];let e=3;for(;e<n-1;e++){let l=(i-2)*n+e+1;U(t,s[l],o?o[l]:1),l=(i-1)*n+e+1,U(t,s[l],o?o[l]:1),l=i*n+e+1,U(t,s[l],o?o[l]:1),l=(i+1)*n+e+1,U(t,s[l],o?o[l]:1),l=(i-2)*n+e-3,A(t,s[l],o?o[l]:1),l=(i-1)*n+e-3,A(t,s[l],o?o[l]:1),l=i*n+e-3,A(t,s[l],o?o[l]:1),l=(i+1)*n+e-3,A(t,s[l],o?o[l]:1),a[i*n+e]=k(t)}a[i*n+e+1]=a[i*n+e]}for(let i=0;i<n;i++)a[i]=a[n+i]=a[2*n+i],a[(l-1)*n+i]=a[(l-2)*n+i];return e.updateStatistics(),e}function k(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let r=l.next();for(;!r.done;)i=t.get(r.value),i>e&&(n=r.value,e=i),r=l.next();return n}function A(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function U(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function C(t,e,l){let{x:r,y:o}=e;const{width:s,height:a}=l;if(0===r&&0===o&&a===t.height&&s===t.width)return t;const{width:f,height:h}=t,u=Math.max(0,o),c=Math.max(0,r),x=Math.min(r+s,f),m=Math.min(o+a,h);if(x<0||m<0||!i(t))return null;r=Math.max(0,-r),o=Math.max(0,-o);const{pixels:p,mask:d}=t,g=s*a,y=p.length,w=[];for(let i=0;i<y;i++){const e=p[i],l=n.createEmptyBand(t.pixelType,g);for(let t=u;t<m;t++){const n=t*f;let i=(t+o-u)*s+r;for(let t=c;t<x;t++)l[i++]=e[n+t]}w.push(l)}const M=new Uint8Array(g);for(let n=u;n<m;n++){const t=n*f;let e=(n+o-u)*s+r;for(let n=c;n<x;n++)M[e++]=d?d[t+n]:1}const k=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:M});return k.updateStatistics(),k}function T(t,e=!0){if(!i(t))return null;const{pixels:l,width:r,height:o,mask:s,pixelType:a}=t,f=[],h=Math.round(r/2),u=Math.round(o/2),c=o-1,x=r-1;for(let i=0;i<l.length;i++){const t=l[i],s=n.createEmptyBand(a,h*u);let m=0;for(let n=0;n<o;n+=2)for(let i=0;i<r;i+=2){const l=t[n*r+i];if(e){const e=i===x?l:t[n*r+i+1],o=n===c?l:t[n*r+i+r],a=i===x?o:n===c?e:t[n*r+i+r+1];s[m++]=(l+e+o+a)/4}else s[m++]=l}f.push(s)}let m=null;if(s){m=new Uint8Array(h*u);let t=0;for(let n=0;n<o;n+=2)for(let i=0;i<r;i+=2){const l=s[n*r+i];if(e){const e=i===x?l:s[n*r+i+1],o=n===c?l:s[n*r+i+r],a=i===x?o:n===c?e:s[n*r+i+r+1];m[t++]=l*e*o*a?1:0}else m[t++]=l}}return new n({width:h,height:u,pixelType:a,pixels:f,mask:m})}function v(t,e,n){if(!i(t))return null;const{width:l,height:r}=e;let{width:o,height:s}=t;const a=new Map,f={x:0,y:0},h=null==n?1:1+n;let u=t;for(let i=0;i<h;i++){const t=Math.ceil(o/l),n=Math.ceil(s/r);for(let o=0;o<n;o++){f.y=o*r;for(let n=0;n<t;n++){f.x=n*l;const t=C(u,f,e);a.set(`${i}/${o}/${n}`,t)}}i<h-1&&(u=T(u)),o=Math.round(o/2),s=Math.round(s/2)}return a}function S(t,e,l,r,o="nearest"){if(!i(t))return null;"majority"===o&&(t=M(t));const{pixels:s,mask:a,pixelType:f}=t,h=t.width,u=t.height,c=n.getPixelArrayConstructor(f),x=s.length,{width:m,height:p}=e,d=r.cols,g=r.rows,y=Math.ceil(m/d-.1/d),w=Math.ceil(p/g-.1/g);let k,A,U,C,T,v,S,B=!1;for(let n=0;n<l.length;n+=3)-1===l[n]&&-1===l[n+1]&&-1===l[n+2]&&(B=!0);const O=y*d,b=O*w*g,P=new Float32Array(b),j=new Float32Array(b);let z,I,D=0;const E="majority"===o?0:.5;for(let n=0;n<w;n++)for(let t=0;t<y;t++){k=12*(n*y+t),A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],v=l[k+4],S=l[k+5];for(let e=0;e<g;e++){D=(n*g+e)*O+t*d,I=(e+.5)/g;for(let t=0;t<e;t++)z=(t+.5)/d,P[D+t]=Math.round((A*z+U*I+C)*h-E),j[D+t]=Math.round((T*z+v*I+S)*u-E)}k+=6,A=l[k],U=l[k+1],C=l[k+2],T=l[k+3],v=l[k+4],S=l[k+5];for(let e=0;e<g;e++){D=(n*g+e)*O+t*d,I=(e+.5)/g;for(let t=e;t<d;t++)z=(t+.5)/d,P[D+t]=Math.round((A*z+U*I+C)*h-E),j[D+t]=Math.round((T*z+v*I+S)*u-E)}}const $=(t,e)=>{for(let n=0;n<p;n++){k=n*O;for(let i=0;i<m;i++)P[k]<0||j[k]<0?t[n*m+i]=0:t[n*m+i]=e[P[k]+j[k]*h],k++}},q=[];let F;for(let n=0;n<x;n++)F=new c(m*p),$(F,s[n]),q.push(F);const V=new n({width:m,height:p,pixelType:f,pixels:q});if(a)V.mask=new Uint8Array(m*p),$(V.mask,a);else if(B){V.mask=new Uint8Array(m*p);for(let t=0;t<m*p;t++)V.mask[t]=P[t]<0||j[t]<0?0:1}return V.updateStatistics(),V}export{S as approximateTransform,C as clip,o as colorize,r as createColormapLUT,h as createContrastBrightnessLUT,u as createHistogramEqualizationLUT,f as createStretchLUT,a as estimateStatisticsFromHistograms,s as estimateStatisticsHistograms,l as extractBands,p as getClipBounds,i as isValidPixelBlock,x as lookupPixels,y as mosaic,d as mosaicPixelData,m as remapColor,M as resampleByMajority,w as setValidBoundary,v as split,c as stretch};
