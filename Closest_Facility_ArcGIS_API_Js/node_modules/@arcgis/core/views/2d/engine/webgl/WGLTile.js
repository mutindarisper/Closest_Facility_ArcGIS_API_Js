/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{i as s,t as r,m as t}from"../../../../chunks/mat2d.js";import{s as e,m as a}from"../../../../chunks/mat3.js";import{c as i}from"../../../../chunks/mat3f32.js";import{t as o}from"../../../../chunks/vec2.js";import{c as n}from"../../../../chunks/vec2f32.js";import{TILE_SIZE as h}from"./definitions.js";import{TiledDisplayObject as m}from"./TiledDisplayObject.js";class c{acquire(s){return{refCount:1,version:-1,labelMat2d:i(),tileMat3:i(),dvs:i()}}release(s){}}class f extends m{constructor(s,r,t){super(s,r,t,h,h)}destroy(){super.destroy(),this._transforms&&f.TransformCache.release(this.key.hash)}setTransform(i,h){if(i.version===this.transforms.version)return;this.transforms.version=i.version;const m=h/(i.resolution*i.pixelRatio),c=this.transforms.tileMat3,[f,l]=i.toScreenNoRotation([0,0],[this.x,this.y]),u=this.width/this.rangeX*m,d=this.height/this.rangeY*m;e(c,u,0,0,0,d,0,f,l,1),a(this.transforms.dvs,i.displayViewMat3,c);const p=this.transforms.labelMat2d,v=i.getScreenTransform(p,h),j=n();o(j,[this.x,this.y],v),s(p),r(p,p,j),t(p,i.viewMat2d,p)}_createTransforms(){return f.TransformCache.acquire(this.key.hash)}}f.TransformCache=new c;export{f as WGLTile};
