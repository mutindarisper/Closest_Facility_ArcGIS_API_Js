/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../Graphic.js";import i from"../../../core/Logger.js";import{isNone as s,unwrap as r}from"../../../core/maybe.js";import{debounce as o,isAbortError as a,createAbortController as l,eachAlways as h}from"../../../core/promiseUtils.js";import{createScreenPoint as n}from"../../../core/screenUtils.js";import{watch as c,init as u}from"../../../core/watchUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import m from"../../../layers/support/TileInfo.js";import{update as y,unregister as g,register as f,getRasterId as _}from"../../../layers/support/rasterDatasets/RawBlockCache.js";import{extractBands as b}from"../../../layers/support/rasterFunctions/pixelUtils.js";import{computeProjectedScales as w}from"../../../layers/support/rasterFunctions/rasterProjectionHelper.js";import{LayerView2DMixin as v}from"./LayerView2D.js";import I from"./imagery/ImageryTileView2D.js";import C from"./imagery/VectorFieldTileView2D.js";import P from"../tiling/TileInfoView.js";import S from"../tiling/TileQueue.js";import R from"../tiling/TileStrategy.js";import{ImageryTileLayerView as U}from"../../layers/ImageryTileLayerView.js";import T from"../../layers/LayerView.js";import{RefreshableLayerView as z}from"../../layers/RefreshableLayerView.js";import{createQueryGeometry as j}from"../../support/drapedUtils.js";import k from"../../webgl/capabilities.js";import F from"../../../geometry/Extent.js";import x from"../../../geometry/Point.js";const L=i.getLogger("esri.views.2d.layers.ImageryTileLayerView2D"),V=[0,0];let q=class extends(U(z(v(T)))){constructor(){super(...arguments),this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this._previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._globalUpdateRequested=!1,this._isCustomTilingScheme=!1,this.subview=null,this._redrawOrRefetch=o(((e,t)=>e?this.doRefresh():this._redrawImage(t)))}initialize(){const e=this.updateFullExtent();this.addResolvingPromise(e)}get useWebGLForProcessing(){var e;return null==(e=this._get("useWebGLForProcessing"))||e}set useWebGLForProcessing(e){this.subview&&(this.subview.useWebGLForProcessing=e),this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return null==this._get("useProgressiveUpdate")||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){var t;this._tileStrategy.destroy(),null==(t=this.subview)||t.container.removeAllChildren();const i=this._getCacheSize(e);this._tileStrategy=new R({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:i,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.requestUpdate()}}hitTest(e,i){if(this.suspended)return Promise.resolve(null);const s=this.view.toMap(n(e,i));return Promise.resolve(new t({attributes:{},geometry:s}))}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:i,scale:s}=e.state,r=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){var o;if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[r.level],s=t.toJSON?t:F.fromJSON(t);y(this._blockCacheRegistryUrl,this._blockCacheRegistryId,s,i,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,(null==(o=this._previousLOD)?void 0:o.level)!==r.level&&(this._previousLOD=r,null==this._symbolizerParams||this.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}this.notifyChange("updating")}attach(){this.layer.increaseRasterJobHandlerUsage(),k().supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new P(this.tileInfo,this.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new S({tileInfoView:this._tileInfoView,concurrency:e,process:(e,t)=>this.fetchTile(e,t)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new R({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._updatesubview(),this.handles.add([c(this.layer,["bandIds","renderer","interpolation","multidimensionalDefinition"],((e,t,i)=>{const s="multidimensionalDefinition"===i,r="interpolation"===i&&("majority"===e||"majority"===t)&&this._canUseMajorityInterpolationOnDataSource(),o="renderer"===i&&"vector-field"===t.type!=("vector-field"===t.type);o&&this._updatesubview();const l=s||r||o;this._redrawOrRefetch(l).catch((e=>{a(e)||L.error(e)}))})),u(this,["layer.blendMode"],(e=>{this.subview&&(this.subview.container.blendMode=e)}),!0),u(this,["layer.effect"],(e=>{this.subview&&(this.subview.container.effect=e)}),!0)],"attach"),this._updateBlockCacheRegistry()}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),null==(e=this.subview)||e.uninstall(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,g(this._blockCacheRegistryUrl,this._blockCacheRegistryId)}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){!this.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=l(),0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return j(e,t,this.view)}async doRefresh(){if(this.suspended)return;await this.layer.updateRenderer(),this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._tileStrategy.tiles.forEach((t=>e.push(this._enqueueTileFetch(t)))),await h(e),this.notifyChange("updating")}isUpdating(){return this._fetchQueue.length>0||this._globalUpdateRequested}acquireTile(e){const t=this.subview.container.createTile(e);return this._enqueueTileFetch(t),this.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){var t;this._fetchQueue.abort(e.key.id),null==(t=this.subview)||t.container.removeChild(e),e.once("detach",(()=>{e.destroy(),this.requestUpdate()})),this.requestUpdate()}fetchTile(e,t){const i=!s(t)&&t.signal,o=this.subview.canUseWebGLForProcessing(),a={allowPartialFill:!0,tileInfo:this.tileInfo,signal:r(i),registryId:this._blockCacheRegistryId,requestRawData:o,srcResolution:this._srcResolutions[e.level],datumTransformation:this.datumTransformation,interpolation:o?"nearest":this.layer.interpolation};return this.subview.fetchTile(e,a)}_updatesubview(){const e=this._isVectorField()?"rasterVF":"raster";if(this.subview){if(this.subview.type===e)return;this.subview.uninstall()}const{layer:t}=this,i=new("rasterVF"===e?C:I)({layer:t,tileSize:this.tileInfo.size,useWebGLForProcessing:this.useWebGLForProcessing});i.install(this.container,{tileInfoView:this._tileInfoView,isCustomTilingScheme:this._isCustomTilingScheme}),i.container.blendMode=t.blendMode,i.container.effect=t.effect,this.subview=i}_isVectorField(){return"vector-field"===this.layer.renderer.type}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.view.spatialReference,t=new x({x:this.fullExtent.xmin,y:this.fullExtent.ymax,spatialReference:e}),{scales:i,srcResolutions:s,isCustomTilingScheme:r}=w(this.layer.rasterInfo,e),o=m.create({spatialReference:e,size:512,scales:i});(0===o.origin.x||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=r,this._set("tileInfo",o),this._srcResolutions=null!=s?s:[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),{bandIds:s}=this.layer;let r=!this.useProgressiveUpdate||this.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.moving&&0===this._fetchQueue.length){r=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(i){a(i)&&L.error(i)}this._globalUpdateRequested=!1}!this.subview.canUseWebGLForProcessing()&&!this._isVectorField()||this.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(V,e.key),l=this._tileInfoView.getTileResolution(e.key);await this.subview.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:s,coords:o,resolution:l}),e.once("attach",(()=>this.requestUpdate())),this.subview.container.addChild(e)}catch(i){a(i)||L.error(i)}this.requestUpdate()}}async _redrawImage(e){if(0===this.subview.container.children.length)return;await this.layer.updateRenderer(),this.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.subview.container.children.map((async e=>this.subview.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await h(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this._previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},i=await this.layer.fetchPixels(this.view.extent,this.view.width,this.view.height,t);if(!i||!i.pixelBlock)return;const s=this.layer.symbolizer.generateWebGLParameters({pixelBlock:b(i.pixelBlock,this.layer.bandIds),isGCS:this.view.spatialReference.isGeographic,resolution:{x:this._previousLOD.resolution,y:this._previousLOD.resolution},bandIds:this.layer.bandIds});!this.subview.canUseWebGLForProcessing()&&s&&"stretch"===s.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(s.factor=s.factor.map((e=>255*e)),s.outMin=Math.round(255*s.outMin),s.outMax=Math.round(255*s.outMax)),this._globalSymbolizerParams=s}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.view.spatialReference.isGeographic,resolution:{x:this._previousLOD.resolution,y:this._previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:i,multidimensionalDefinition:s,raster:r}=this.layer,o=null!=i&&i.multidimensionalInfo?r.getSliceIndex(s):null,a=_(t,o);if(a!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&g(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=f(a,this.layer.raster.rasterInfo),e){const e=this._tileInfoView.getClosestInfoForScale(this.view.scale),t=this._srcResolutions[e.level];y(a,this._blockCacheRegistryId,this.view.extent,this.view.resolution,t,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=a}}_canUseMajorityInterpolationOnDataSource(){const{bandCount:e,attributeTable:t,colormap:i,pixelType:s}=this.layer.rasterInfo;return 1===e&&(null!=t||null!=i||"u8"===s||"s8"===s)}};e([d()],q.prototype,"subview",void 0),e([d()],q.prototype,"useWebGLForProcessing",null),e([d()],q.prototype,"useProgressiveUpdate",null),q=e([p("esri.views.2d.layers.ImageryTileLayerView2D")],q);var G=q;export{G as default};
