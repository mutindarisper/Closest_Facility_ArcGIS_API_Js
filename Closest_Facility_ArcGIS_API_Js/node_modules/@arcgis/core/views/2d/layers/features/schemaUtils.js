/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import"../../../../renderers/ClassBreaksRenderer.js";import"../../../../renderers/DictionaryRenderer.js";import"../../../../renderers/DotDensityRenderer.js";import"../../../../renderers/HeatmapRenderer.js";import"../../../../renderers/Renderer.js";import e from"../../../../renderers/SimpleRenderer.js";import"../../../../renderers/UniqueValueRenderer.js";import"../../../../renderers/support/jsonUtils.js";import t from"../../../../core/Error.js";import r from"../../../../core/has.js";import{clone as i}from"../../../../core/lang.js";import n from"../../../../core/Logger.js";import{isSome as l,isNone as s,unwrapOr as a}from"../../../../core/maybe.js";import{pt2px as o}from"../../../../core/screenUtils.js";import{fromJSON as u}from"../../../../symbols/support/jsonUtils.js";import{WGLGeometryType as d}from"../../engine/webgl/enums.js";import{getVVType as f}from"../../engine/webgl/Utils.js";import{createMaterialKey as c,hydrateMaterialKey as p}from"../../engine/webgl/materialKey/MaterialKey.js";import{getVVFlags as m}from"../../engine/webgl/util/vvFlagUtils.js";import{getPtMaxVVSize as y}from"./support/pixelBuffering.js";import{simplifyVisualVariables as g}from"./support/rendererUtils.js";import{createClusterRenderer as b}from"../support/clusterUtils.js";import{toJSONGeometryType as h}from"../support/util.js";const x=n.getLogger("esri.views.2d.layers.features.schemaUtils"),v="ValidationError",w={esriGeometryPoint:["above-right","above-center","above-left","center-center","center-left","center-right","below-center","below-left","below-right"],esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};function E(e){return p(e)}function I(e){return e}function S(e){if("line-marker"===e.type){var t;return{type:"line-marker",color:null==(t=e.color)?void 0:t.toJSON(),placement:e.placement,style:e.style}}return u(e.toJSON()).toJSON()}function F(e,t,r){if(!e)return null;let i=0,n=!1,s=0;switch(l(t)&&(s=y(t),"visualVariables"in t&&(i=m(t.visualVariables||[]),n="dot-density"===t.type)),e.type){case"simple-fill":case"picture-fill":return V(e,i,n,r);case"simple-marker":case"picture-marker":return j(e,i,s,r);case"simple-line":return z(e,i,r);case"text":return T(e,i,s,r);case"label":return K(e,i,r);case"cim":return{type:"cim",rendererKey:i,data:e.data,maxVVSize:s};case"web-style":return{...S(e),type:"web-style",hash:e.hash(),rendererKey:i,maxVVSize:s};default:throw new Error(`symbol not supported ${e.type}`)}}function V(e,t,r,i){const n=c(d.FILL,t,!1,r),l=i?E(n):n,s=e.clone(),a=s.outline;s.outline=null;const o=[],u={materialKey:l,hash:s.hash(),...S(s)};if(o.push(u),a){const e=c(d.LINE,t,!0,!1),r={materialKey:i?E(e):e,hash:a.hash(),...S(a)};o.push(r)}return{type:"composite-symbol",layers:o,hash:o.reduce(((e,t)=>t.hash+e),"")}}function z(e,t,r){const i=c(d.LINE,t,!1,!1),n=r?E(i):i,l=e.clone(),s=l.marker;l.marker=null;const a=[];if(a.push({materialKey:n,hash:l.hash(),...S(l)}),s){var o;const e=c(d.MARKER,t,!1,!1),i=r?E(e):e;s.color=null!=(o=s.color)?o:l.color,a.push({materialKey:i,hash:s.hash(),lineWidth:l.width,...S(s)})}return{type:"composite-symbol",layers:a,hash:a.reduce(((e,t)=>t.hash+e),"")}}function j(e,t,r,i){const n=c(d.MARKER,t,!1,!1),l=i?E(n):n,s=S(e);return{materialKey:l,hash:e.hash(),...s,angle:e.angle,maxVVSize:r}}function T(e,t,r,i){const n=c(d.TEXT,t,!1,!1),l=i?E(n):n,s=S(e);return{materialKey:l,hash:e.hash(),...s,angle:e.angle,maxVVSize:r}}function N(e,r){const i=e.labelPlacement,n=w[r];if(!e.symbol)return x.warn("No ILabelClass symbol specified."),!0;if(!n)return x.error(new t("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${r} is not supported`)),!0;if(!n.some((e=>e===i))){const t=n[0];i&&x.warn(`Found invalid label placement type ${i} for ${r}. Defaulting to ${t}`),e.labelPlacement=t}return!1}function R(e,t){const r=i(e);return r.some((e=>N(e,t)))?[]:r}function K(e,t,r){const i=e.toJSON(),n=c(d.LABEL,t,!1,!1,i.labelPlacement);return{materialKey:r?E(n):n,hash:e.hash(),...i,labelPlacement:i.labelPlacement}}function M(e){return r("esri-2d-update-debug")&&console.debug("Created new schema",O(e,!0)),O(e)}function O(e,t=!1){try{var r,i;const n=C(e,t),l={};n.map((t=>k(l,e,t)));return{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(r=e.historicMoment)?void 0:r.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(i=e.timeExtent)?void 0:i.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:n,targets:l}}catch(n){if(n.fieldName===v)return x.error(n),null;throw n}}function k(e,r,i){switch(i.target){case"feature":return void P(e,L(r),i);case"aggregate":{if(!("featureReduction"in r))return;const n=r.featureReduction;if("selection"===n.type)throw new t(v,"Mapview does not support `selection` reduction type",n);return P(e,L(r),i),void J(e,n,i)}}}function B(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const n=e.attributes[r];n?(n.context.mesh=n.context.mesh||i.context.mesh,n.context.storage=n.context.storage||i.context.storage):e.attributes[r]=i}return e}function L(e){var t,r,i,n,l;return[null!=(t=null==(r=e.filter)?void 0:r.toJSON())?t:null,null!=(i=null==(n=e.effect)||null==(l=n.filter)?void 0:l.toJSON())?i:null]}function P(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),B(e.feature,r.attributes.fields),e}function J(e,t,r){return e.aggregate||(e.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:o(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(o(t.clusterMaxSize)/64),fields:r.aggregateFields}}),B(e.aggregate,r.attributes.fields),e}function D(e,t){return t.field?U(e,{...t,type:"field",field:t.field}):t.valueExpression?U(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function U(e,t){switch(t.type){case"expression":{const r=I(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=I(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function C(e,t=!1){const r=new Array;let i=0;return r.push(q(e,i++,t)),r}function $(e,t,r,i,n,l=!1){const s=U(t,{type:"label-expression",target:i,context:{mesh:!0},resultType:"string",label:{labelExpression:r.labelExpression,labelExpressionInfo:r.labelExpressionInfo?{expression:r.labelExpressionInfo.expression}:null,symbol:!!r.symbol,where:r.where}}),{fieldIndex:a}=s;return{...F(r,e,l),fieldIndex:a,target:i,index:n}}function q(r,i,n=!1){const s={indexCount:0,fields:{}},a="featureReduction"in r&&r.featureReduction,o=a?"aggregate":"feature";if("sublayers"in r){const e={type:"subtype",subtypeField:r.subtypeField,renderers:{}},i={type:"subtype",mapping:{},target:"feature"},a={type:"subtype",classes:{}},u={type:"symbol",target:"feature",aggregateFields:[],attributes:s,storage:i,mesh:{matcher:e,aggregateMatcher:null,labels:a,sortKey:null}},d=new Set;let f=0;for(const{renderer:c,subtypeCode:p,labelingInfo:m,labelsVisible:y}of r.sublayers){const r=Q(s,o,c,n),u=H(s,o,c),g=y&&m;if("visualVariables"in c&&c.visualVariables&&c.visualVariables.length)throw new t(v,"Visual variables are currently not supported for subtype layers");if("dictionary"===r.type)throw new t(v,"Dictionary renderer is not supported in subtype layers");if("subtype"===r.type)throw new t(v,"Nested subtype renderers is not supported");if(l(u)&&"subtype"===u.type)throw new t(v,"Nested subtype storage is not supported");if(l(u)&&"dot-density"===u.type)throw new t(v,"Dot density attributes are not supported in subtype layers");if(d.has(p))throw new t(v,"Subtype codes for sublayers must be unique");d.add(p),e.renderers[p]=r,i.mapping[p]=u,g&&(a.classes[p]=g.map((e=>$(c,s,e,"feature",f++,n))))}return u}if("heatmap"===r.renderer.type){const{blurRadius:e,fieldOffset:t,field:i}=r.renderer;return{type:"heatmap",aggregateFields:[],attributes:s,target:o,storage:null,mesh:{blurRadius:e,fieldOffset:t,field:D(s,{target:o,field:i,resultType:"numeric"}).field}}}{const i=[],l="aggregate"===o?b(i,r.renderer,a,null):r.renderer;G(s,i);const u=Q(s,o,l,n);let d=null;const f=H(s,o,l),c=h(r.geometryType);let p=r.labelsVisible&&r.labelingInfo||[],m=[];if(a){if("selection"===a.type)throw new t(v,"Mapview does not support `selection` reduction type",a);if(a.symbol){const t=new e({symbol:a.symbol,visualVariables:"visualVariables"in l?l.visualVariables:null});d=Q(s,o,t,n)}m=a&&a.labelsVisible&&a.labelingInfo||[]}p=R(p,c),m=R(m,c);let y=0;const g=[...p.map((e=>$(l,s,e,"feature",y++,n))),...m.map((e=>$(l,s,e,"aggregate",y++,n)))],x=A(s,r.orderBy);return{type:"symbol",target:o,attributes:s,aggregateFields:i,storage:f,mesh:{matcher:u,labels:{type:"simple",classes:g},aggregateMatcher:d,sortKey:x}}}}function A(e,r){if(s(r)||!r.length)return null;r.length>1&&x.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${r.length}. All but the first will be discarded`);const i=r[0],n="ascending"===i.order?"asc":"desc";if(i.field)return{field:i.field,order:n};if(i.valueExpression){return{fieldIndex:U(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:n}}return x.error(new t(v,"Expected to find a field or valueExpression for OrderByInfo",i)),null}function G(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,outStatistic:n}=i,{statisticType:l,onStatisticField:s}=n;let a=null,o=null,u=null;const d="numeric",f="feature";if("onStatisticValueExpression"in n){o=U(e,{type:"expression",target:f,valueExpression:n.onStatisticValueExpression,resultType:d}).fieldIndex}else if("onStatisticNormalizationField"in n){a=U(e,{type:"field",target:f,field:s,resultType:d}).field,u=n.onStatisticNormalizationField}else{a=U(e,{type:"field",target:f,field:s,resultType:d}).field}U(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:a,inNormalizationField:u,inFieldIndex:o,statisticType:l})}}function H(e,t,r){switch(r.type){case"dot-density":return W(e,t,r.attributes);case"simple":case"class-breaks":case"unique-value":case"dictionary":return X(e,t,r.visualVariables);case"heatmap":return null}}function W(e,t,r){if(!r||!r.length)return{type:"dot-density",mapping:[],target:t};return{type:"dot-density",mapping:r.map(((r,i)=>{const{field:n,fieldIndex:l}=D(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i,field:n,fieldIndex:l}})),target:t}}function X(e,t,r){if(!r||!r.length)return{type:"visual-variable",mapping:[],target:t};const i={storage:!0},n="numeric";return{type:"visual-variable",mapping:g(r).map((r=>{var l;const s=f(r.type),{field:a,fieldIndex:o}=D(e,{target:t,valueExpression:r.valueExpression,field:r.field,context:i,resultType:n});switch(r.type){case"size":return"$view.scale"===r.valueExpression?null:{type:"size",binding:s,field:a,fieldIndex:o,normalizationField:D(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field,valueRepresentation:null!=(l=r.valueRepresentation)?l:null};case"color":return{type:"color",binding:s,field:a,fieldIndex:o,normalizationField:D(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field};case"opacity":return{type:"opacity",binding:s,field:a,fieldIndex:o,normalizationField:D(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field};case"rotation":return{type:"rotation",binding:s,field:a,fieldIndex:o}}})).filter((e=>e)),target:t}}function Q(e,t,r,i=!1){const n=a(e,{indexCount:0,fields:{}});switch(r.type){case"simple":case"dot-density":return Y(n,r,"dot-density"===r.type,i);case"class-breaks":return Z(n,t,r,i);case"unique-value":return _(n,t,r,i);case"dictionary":return ee(n,r,i)}}function Y(e,t,r,i=!1){const n=t.getSymbols();return{type:"simple",symbol:F(n.length?n[0]:null,t,i),isDotDensity:r}}function Z(e,t,r,i=!1){const n={mesh:!0,use:"renderer.field"},l=r.backgroundFillSymbol,{field:s,fieldIndex:a}=D(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:n}),o=r.normalizationType,u="log"===o?"esriNormalizeByLog":"percent-of-total"===o?"esriNormalizeByPercentOfTotal":"field"===o?"esriNormalizeByField":null,d=r.classBreakInfos.map((e=>({symbol:F(e.symbol,r,i),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:s,fieldIndex:a,backgroundFillSymbol:F(l,r,i),defaultSymbol:F(r.defaultSymbol,r,i),intervals:d,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:u,isMaxInclusive:r.isMaxInclusive}}function _(e,r,i,n=!1){const l=[],s=i.backgroundFillSymbol,a={target:r,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new t(v,"Expected renderer.field to be a string",i);const{field:o,fieldIndex:u}=D(e,{...a,field:i.field,valueExpression:i.valueExpression});for(const t of i.uniqueValueInfos)l.push({value:""+t.value,symbol:F(t.symbol,i,n)});return{type:"map",attributes:e.fields,field:o,fieldIndex:u,field2:D(e,{...a,field:i.field2}).field,field3:D(e,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter,backgroundFillSymbol:F(s,i),defaultSymbol:F(i.defaultSymbol,i),map:l}}function ee(e,t,r=!1){return{type:"dictionary",renderer:t.toJSON()}}export{G as addAggregateFields,Q as createMatcherSchema,M as createSchema,F as createSymbolSchema};
