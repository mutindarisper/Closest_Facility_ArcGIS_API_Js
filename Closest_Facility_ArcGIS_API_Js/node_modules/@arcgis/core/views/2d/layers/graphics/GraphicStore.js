/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{pt2px as e}from"../../../../core/screenUtils.js";import{getMetersPerUnit as t}from"../../../../core/unitUtils.js";import{r as i}from"../../../../chunks/rbush.js";import{create as r,fromValues as s,intersects as o,clone as n}from"../../../../geometry/support/aaBoundingRect.js";import{polygonContainsPoint as a}from"../../../../geometry/support/contains.js";import{getPolygonExtent as l}from"../../../../geometry/support/extentUtils.js";import{getJsonType as h}from"../../../../geometry/support/jsonUtils.js";import{normalizeMapX as c}from"../../../../geometry/support/normalizeUtils.js";import{getSpatialReferenceMinMaxX as u}from"../../../../geometry/support/normalizeUtilsCommon.js";import{isValid as m}from"../../../../geometry/support/spatialReferenceUtils.js";import{evaluateValueOrFunction as p}from"../../../../symbols/cim/utils.js";import d from"./GraphicStoreItem.js";import{getTextSymbolBounds as f,getMarkerSymbolBounds as g,isPointOnPolyline as _,getCIMMarkerBounds as y,graphicGeometryToNumber as b,PIXEL_BUFFER as x}from"./graphicsUtils.js";const G={minX:0,minY:0,maxX:0,maxY:0},I=r(),z=1e-5;function w(e,t,i,r,s){return G.minX=t,G.minY=i,G.maxX=r,G.maxY=s,e.search(G)}function B(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class v{constructor(e,r,s,o,n,a){this._graphics=o,this._onAdd=n,this._onRemove=a,this._index=i(9,B),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const l=e.getClosestInfoForScale(r);l&&(this._currentLevel=l.level,this._resolution=this._tileInfoView.getTileResolution(l.level));const h=e.spatialReference;this._metersPerUnit=m(h)?t(e.spatialReference):1}hitTest(t,i,r,n,u){t=c(t,this._tileInfoView.spatialReference);const m=.5*n*r;I[0]=t-m,I[1]=i-m,I[2]=t+m,I[3]=i+m;const d=.5*n*(r+x),G=w(this._index,t-d,i-d,t+d,i+d);if(!G||0===G.length)return[];const z={x:t,y:i},B=[];let v;for(const c of G)if(c.graphic.visible)switch(h(c.geometry)){case"esriGeometryPoint":{const e=c.symbol;if(!e)continue;const t=c.geometry,{x:i,y:r}=t,s=n*this._metersPerUnit;let o;switch(e.type){case"esriTS":o=f(i,r,e,c.size,n,u);break;case"expanded-cim":o=y(i,r,e,n,s,u);break;case"esriSMS":case"esriPMS":o=g(i,r,e,n,s,u)}a(o,z)&&B.push(c)}break;case"esriGeometryPolyline":{const r=c.symbol;let s=0;if("expanded-cim"===r.type){const e=r.layers;if(!e||0===e.length)continue;const t=e.findIndex((e=>"line"===e.type));if(-1===t)continue;const i=e[t];s=p(i.width,null,null)}else{const e=r.layers;if(!e||0===e.length)continue;s=e[0].width}v=1.5*n*window.devicePixelRatio*e(s),_(c.geometry,t,i,v)&&B.push(c)}break;case"esriGeometryEnvelope":{const e=c.geometry,t=s(e.xmin,e.ymin,e.xmax,e.ymax);o(t,I)&&B.push(c);break}case"esriGeometryPolygon":{if(a(c.geometry,z)){B.push(c);break}const e=l(c.geometry);if(Math.abs(e.ymax-e.ymin)<5*n||Math.abs(e.xmax-e.xmin)<5*n){const t=s(e.xmin,e.ymin,e.xmax,e.ymax);o(t,I)&&B.push(c)}break}case"esriGeometryMultipoint":{const e=c.symbol;if(!e)continue;const t=c.geometry.points;let i;for(let r=0;r<t.length;r++)if(i="esriTS"===e.type?f(t[r][0],t[r][1],e,c.size,n,u):g(t[r][0],t[r][1],e,n,n*this._metersPerUnit,u),a(i,z)){B.push(c);break}break}}return B.sort(((e,t)=>{const i=b(e.graphic),r=b(t.graphic);return i===r?t.zorder-e.zorder:i-r})),B.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=this._searchForItems(t);if(0===r.length||0===i.length)return[];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let h=1;h<r.length;h++)r[h].insertAfter=r[h-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const a=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const h of i){for(n=-2;o<r.length;)if(s=r[o],o++,h.uid===s.graphic.uid){n=s.insertAfter;break}if(!s.geometry||-2===n)continue;const i=s.getGeometryQuantized(l,t.bounds,this._tileInfoView.spatialReference),c={...s.graphic.attributes};c[this._uidFieldName]=h.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),a.push({centroid:d.getCentroidQuantized(s,l),geometry:i,attributes:c,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder})}return a.sort(((e,t)=>e.zorder-t.zorder)),a}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:r}=t,s=this._searchForItems(t),o=[];return 0===s.length||this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[r,r],translate:[i[0],i[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=d.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,r),i&&this._index.insert(r),r.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r)}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const s=n(r.bounds);return r.size[0]=r.size[1]=0,this._index.remove(r),r.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(r),{oldBounds:s,newBounds:r.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView,i=t.getTileResolution(e);this._resolution=i,this._index.clear();const r=this._itemByGraphic,s=[];for(const[o,n]of r)n.updateBounds(this._resolution,this._resolution*this._metersPerUnit,t.spatialReference),n.geometry&&s.push(n);this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,r,s){const o=this._uidFieldName,n=this._tileInfoView.spatialReference,{bounds:a}=s;let l,h,c,u;i.sort(((e,t)=>e.zorder-t.zorder));for(let m=0;m<i.length;m++){c=i[m],l=c.graphic,h=c.getGeometryQuantized(r,a,n),u=0===m?-1:i[m-1].graphic.uid;const s={...c.graphic.attributes};s[o]=l.uid,null==c.groupId&&(c.groupId=t.createTemplateGroup(c.symbol,null)),e.push({centroid:d.getCentroidQuantized(c,r),geometry:h,attributes:s,symbol:c.symbol,groupId:c.groupId,insertAfter:u,zorder:c.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[s,o]=u(t),n=Math.abs(i[2]-o)<z,a=Math.abs(i[0]-s)<z;if((!n||!a)&&(n||a)){const t=e.resolution;let a;a=r(n?[s,i[1],s+t*x,i[3]]:[o-t*x,i[1],o,i[3]]);const l=w(this._index,i[0],i[1],i[2],i[3]),h=w(this._index,a[0],a[1],a[2],a[3]);return[...new Set([...l,...h])]}}return w(this._index,i[0],i[1],i[2],i[3])}}export{v as default};
