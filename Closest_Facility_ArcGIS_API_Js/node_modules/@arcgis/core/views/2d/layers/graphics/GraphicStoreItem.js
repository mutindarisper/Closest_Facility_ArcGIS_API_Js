/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../core/maybe.js";import{create as e,containsPointWithMargin as s}from"../../../../geometry/support/aaBoundingRect.js";import{polygonCentroid as o}from"../../../../geometry/support/centroid.js";import{isPolygon as r,isPolyline as i,isMultipoint as n}from"../../../../geometry/support/jsonUtils.js";import{getSpatialReferenceMinMaxX as l}from"../../../../geometry/support/normalizeUtilsCommon.js";import{quantizePoint as u,quantizeGeometry as h}from"../../../../geometry/support/quantizationUtils.js";import{convertFromPolyline as m,generalizeOptimizedGeometry as p,quantizeOptimizedGeometry as a,convertToPolyline as c}from"../../../../layers/graphics/featureConversionUtils.js";import g from"../../../../layers/graphics/OptimizedGeometry.js";import{isMarkerSymbol as y,isTextSymbol as f,getBounds as d}from"./graphicsUtils.js";const b=new g,j=new g,z="esriGeometryPolyline";function _(t){t.coords.length=0,t.lengths.length=0}class R{constructor(){this.bounds=e(),this.graphic=null,this.size=[0,0,0,0]}static acquire(t=null,e,s,o,r,i){let n;return 0===R._pool.length?n=new R:(n=R._pool.pop(),this._set.delete(n)),n.acquire(t,e,s,o,r,i),n}static release(t){t&&!this._set.has(t)&&(t.release(),this._pool.push(t),this._set.add(t))}static getCentroidQuantized(e,s){if(r(e.geometry)){const r=e.symbol;if(t(r))return null;if(y(r.type)||f(r.type)){const t=o(e.geometry);return u(s,{},{x:t[0],y:t[1]},!1,!1)}}return null}acquire(t=null,e,s,o,r,i){t&&this.set(t,e,s,o,r,i)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(t,e,s,o,r,i){this.graphic=t,this.geometry=s,this.symbolResource=e,this.resolution=o,this.updateBounds(o,r,i)}updateBounds(t,e,s){d(this.bounds,this.size,this.symbolResource,this.geometry,t,e,s)}getGeometryQuantized(t,e,o){const u=this.geometry;if(r(u)){const e=u.rings;if(1===e.length&&2===e[0].length)return h(t,{paths:[[e[0][0],e[0][1]]]})}else{if(i(u))return _(b),_(j),m(b,u),p(j,b,u.hasZ,u.hasM,z,t.scale[0]),a(b,j,u.hasZ,u.hasM,z,t),c(b,u.hasZ,u.hasM);if(n(u)){const r=this.resolution*this.size[0],[i,n]=l(o),m=n-i,p=u.points.filter((t=>{if(t[0]+r>n||t[0]-r<i){const o=[...t];return t[0]+r>n?o[0]-=m:o[0]+=m,s(e,t,r)||s(e,o,r)}return s(e,t,r)}));return 0===p.length?{points:p}:h(t,{points:p})}}return h(t,this.geometry)}}R._pool=[],R._set=new Set;export{R as default};
