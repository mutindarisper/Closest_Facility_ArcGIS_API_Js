/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/Accessor.js";import{isSome as o}from"../../../../core/maybe.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import s from"../../../../layers/support/PixelBlock.js";let l=class extends r{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this.container=null,this.layer=null,this.tileSize=null,this.useWebGLForProcessing=!0}fetchTile(e,r){return this.layer.fetchTile(e.level,e.row,e.col,r)}createEmptyTilePixelBlock(e=null){const r=null==e||e.join(",")===this.tileSize.join(",");if(r&&o(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this.tileSize;const[t,i]=e,l=new s({width:t,height:i,pixels:[new Uint8Array(t*i)],mask:new Uint8Array(t*i),pixelType:"u8"});return r&&(this._emptyTilePixelBlock=l),l}};e([t()],l.prototype,"container",void 0),e([t()],l.prototype,"layer",void 0),e([t()],l.prototype,"tileSize",void 0),e([t()],l.prototype,"type",void 0),e([t()],l.prototype,"useWebGLForProcessing",void 0),l=e([i("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],l);export{l as BaseImageryTileSubView2D};
