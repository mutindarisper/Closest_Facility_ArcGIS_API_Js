/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import s from"../../../core/has.js";import i from"../../../core/Handles.js";import{isSome as o,destroyMaybe as r,isNone as n}from"../../../core/maybe.js";import{when as h,init as a}from"../../../core/watchUtils.js";import{property as l}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{autorun as d}from"../../../core/accessorSupport/trackingUtils.js";import{getReferenceEllipsoid as u}from"../../../geometry/projectionEllipsoid.js";import{isEarth as m,isMoon as c,isMars as _}from"../../../geometry/support/spatialReferenceUtils.js";import{enableNewAtmosphere as v}from"../../../support/featureFlags.js";import{ChapmanAtmosphere as g}from"./ChapmanAtmosphere.js";import{CloudsComposition as w}from"./CloudsComposition.js";import{CloudsGenerator as f}from"./CloudsGenerator.js";import y from"./PanoramicAtmosphere.js";import{RealisticAtmosphere as C}from"./RealisticAtmosphere.js";import A from"./SimpleAtmosphere.js";import{Stars as b}from"./Stars.js";const R=[14,15,16];let x=class extends t{constructor(){super(...arguments),this._handles=new i,this._context=null,this._chapmanQuality="high",this._enableNewAtmosphere=v(),this._pendingAtmosphere=null,this._atmosphere=null,this._stars=null,this._clouds=null,this._cloudComposition=null,this._cloudsEnabled=!!s("enable-feature:enable-clouds")}get canRender(){return!(!this.view.basemapTerrain||!this.view.basemapTerrain.renderer.canRender)||"global"!==this.view.viewingMode}get updating(){return o(this._pendingAtmosphere)||o(this._stars)&&this._stars.updating}set cloudsEnabled(e){this._cloudsEnabled=e,this._setNeedsRender()}renderCubeMap(){o(this._clouds)&&(this._clouds.resetRenderFlags(),this._context.requestRender())}initialize(){this.view._stage.addRenderPlugin(R,this)}destroy(){this._pendingAtmosphere=r(this._pendingAtmosphere),this._atmosphere=r(this._atmosphere),this._stars=r(this._stars),this._handles=r(this._handles),this._clouds=r(this._clouds),this._cloudComposition=r(this._cloudComposition),this.view&&null!=this.view._stage&&(this.view._stage.removeRenderPlugin(this),this._set("view",null))}initializeRenderContext(e){this._context=e,this.setup()}setup(){this._handles.add(h(this.view,"basemapTerrain",(()=>this._updateBasemapTerrain()),!0)),this._handles.add([a(this.view,["viewingMode","environment.atmosphereEnabled","environment.atmosphere.quality"],(()=>this._updateAtmosphere()),!0),d((()=>this._updateStars())),d((()=>{if(this.evaluateCloudsEnabled(),this.ensureClouds(this._context.renderContext.rctx),o(this._clouds)){var e,t;const s=null==(e=this.view)||null==(t=e.environment)?void 0:t.clouds;this._clouds.coverage=null==s?void 0:s.coverage,this._clouds.absorption=null==s?void 0:s.absorption,this._clouds.cloudHeight=null==s?void 0:s.cloudHeight,this._clouds.cloudSize=null==s?void 0:s.cloudSize,this._clouds.density=null==s?void 0:s.density,this._clouds.detailSize=null==s?void 0:s.detailSize,this._clouds.smoothness=null==s?void 0:s.smoothness}}))])}evaluateCloudsEnabled(){var e,t,i,o;this.cloudsEnabled=(null!=(e=null!==(null==(t=this.view)||null==(i=t.environment)?void 0:i.clouds))?e:!!s("enable-feature:enable-clouds"))&&m(null==(o=this.view)?void 0:o.spatialReference)}uninitializeRenderContext(){o(this._stars)&&(this._stars.destroy(),this._stars=null),o(this._atmosphere)&&(this._atmosphere.uninitializeRenderContext(),this._atmosphere.destroy(),this._atmosphere=null),this._clouds=r(this._clouds),this._cloudComposition=r(this._cloudComposition)}render(e){let t=!0;const s=this._context.renderContext.rctx;if(o(this._stars)&&this._stars.canRender&&15===e.slot&&0===e.pass&&(t=this._stars.render(e.rctx,e.camera)&&t),this._cloudsEnabled&&14===e.slot&&0===e.pass&&(this.ensureClouds(s),o(this._clouds))){const i=e.rctx.getViewport();t=this._clouds.render(s)&&t,e.rctx.setViewport(i.x,i.y,i.width,i.height)}return o(this._atmosphere)&&this._atmosphere.canRender&&(t=this._atmosphere.render(e)&&t),this._cloudsEnabled&&o(this._clouds)&&o(this._cloudComposition)&&15===e.slot&&0===e.pass&&(t=this._cloudComposition.render(e,this._clouds._frameBufferCube)&&t,this._cloudComposition.isFading()&&this._setNeedsRender()),t}ensureClouds(e){if(!(this._cloudsEnabled&&o(this._clouds)&&o(this._cloudComposition))){if(this._cloudsEnabled&&n(this._clouds)&&n(this._cloudComposition)){this._clouds=new f(e,this.view);const t=u(this.view.spatialReference).radius;this._cloudComposition=new w(this._context.renderContext.rctx,this.view.state.viewingMode,t)}this._cloudsEnabled||!o(this._clouds)&&!o(this._cloudComposition)||(this._clouds=r(this._clouds),this._cloudComposition=r(this._cloudComposition))}}_setNeedsRender(){this._context&&this._context.requestRender()}_updateStars(){var e,t,s;const i=null!=(e=null==(t=this.view)||null==(s=t.environment)?void 0:s.starsEnabled)&&e;i&&n(this._stars)?(this._stars=new b({view:this.view,requestRender:()=>this._context.requestRender}),this._setNeedsRender()):!i&&o(this._stars)&&(this._stars.destroy(),this._stars=null,this._setNeedsRender())}_updateAtmosphere(){const e=this._getAtmosphereType();if(this.atmosphereType===e)return;this.atmosphereType=e,o(this._pendingAtmosphere)&&(this._pendingAtmosphere!==this._atmosphere&&this._pendingAtmosphere.destroy(),this._pendingAtmosphere=null);const t=this._getAtmosphereClass();if(!t)return o(this._atmosphere)&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),void this._updateBasemapTerrain();const s=new t(this.view);s instanceof g&&s.setSimplified("medium"===this._getAtmosphereType()),s.initializeRenderContext(this._context),n(this._atmosphere)&&(this._atmosphere=s,this._setNeedsRender()),this._pendingAtmosphere=s,s.when().then((()=>{o(this._atmosphere)&&this._pendingAtmosphere!==this._atmosphere&&(this._atmosphere.destroy(),this._atmosphere=this._pendingAtmosphere),this._pendingAtmosphere=null,this._setNeedsRender(),this._updateBasemapTerrain()})).catch((()=>{this._pendingAtmosphere===s&&(this._pendingAtmosphere=null)}))}_getAtmosphereClass(){const e=this._getAtmosphereType();if(this.atmosphereClassFromType)return this.atmosphereClassFromType(e);switch(e){case"none":return null;case"chapman":case"medium":return g;case"realistic":return C;case"panoramic":return y;case"simple":return A;default:return}}_getAtmosphereType(){const e=this.view.get("environment.atmosphereEnabled"),t=this.view.get("environment.atmosphere.quality"),s=this.view.viewingMode;return!e||null==t||c(this.view.spatialReference)?"none":"local"===s?"panoramic":this._enableNewAtmosphere&&g.isSupported(this._context)&&!_(this.view.spatialReference)?"medium"===this._chapmanQuality?"medium":"chapman":"high"===t&&C.isSupported(this._context)&&!_(this.view.spatialReference)?"realistic":"simple"}_updateBasemapTerrain(){const e=this.view.basemapTerrain;e&&(e.velvetOverground=null!=this._atmosphere&&"simple"===this.atmosphereType)}get test(){return{atmosphere:this._atmosphere,clouds:this._clouds,enableNewAtmosphere:e=>{this._enableNewAtmosphere=e},setNewAtmosphereQuality:e=>{this._chapmanQuality=e},updateAtmosphere:()=>{this._updateAtmosphere()}}}};e([l({constructOnly:!0})],x.prototype,"view",void 0),e([l({constructOnly:!0})],x.prototype,"atmosphereClassFromType",void 0),e([l({type:Boolean,readOnly:!0})],x.prototype,"updating",null),e([l()],x.prototype,"_pendingAtmosphere",void 0),e([l()],x.prototype,"_stars",void 0),x=e([p("esri.views.3d.environment.EnvironmentRenderer")],x);export{x as EnvironmentRenderer};
