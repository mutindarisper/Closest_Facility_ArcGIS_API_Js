/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../Color.js";import i from"../../../../../core/Collection.js";import r from"../../../../../core/Handles.js";import{handlesGroup as a,makeHandle as n}from"../../../../../core/handleUtils.js";import o from"../../../../../core/Logger.js";import{destroyMaybe as s,isSome as l,removeMaybe as c,isNone as h,mapOr as u}from"../../../../../core/maybe.js";import{property as d}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reaction as g,reactionInit as _}from"../../../../../core/accessorSupport/trackingUtils.js";import{create as m,fromPoints as v}from"../../../../../geometry/support/lineSegment.js";import{LineOfSightTarget as y}from"../../../../../layers/LineOfSightTarget.js";import{LineOfSightToolConfiguration as b}from"./LineOfSightToolConfiguration.js";import{createSphereManipulator as T,createSphereManipulatorRenderObjects as w}from"./lineOfSightToolUtils.js";import{LaserlineVisualElement as f}from"../../visualElements/LaserlineVisualElement.js";import{LineOfSightRayIntersector as M}from"../../../layers/analysis/LineOfSight/LineOfSightRayIntersector.js";import{createManipulatorDragEventPipeline as V}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as L}from"../../../../interactive/InteractiveToolBase.js";const k=i.ofType(y),S=o.getLogger("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool");let C=class extends L{constructor(e){super(e),this.configuration=new b,this.layerView=null,this._creating=!1,this._showTracker=!0,this._someManipulatorsFocused=!1,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new r,this._handles=new r,this._manipulatorHandles=new r,this._targetTrackerManipulator=null}initialize(){this._initialize()}async _initialize(){if(this.layerView=await this.view.whenLayerView(this.model),this.destroyed)return;this._intersector=new M({view:this.view});const e=g((()=>this.state),(e=>{if("created"===e)this.complete();else this.finishToolCreation()}));this._handles.add([e]),"created"===this.state?this.complete():this.finishToolCreation(),this._observerManipulator=this._createObserverManipulator(),this._handles.add([g((()=>({...this.configuration.observer})),(()=>this._updateObserverManipulatorStyle())),_((()=>this.layerView.layerViewData.elevationAlignedObserver),(e=>this._onObserverLocationChange(e))),_((()=>({...this.configuration.laserLine})),(()=>this._createVisualElements()))]),this._connectAnalyses(),this.continue()}destroy(){"pending"!==this.toolState&&(this.attached&&this.detach(),this._handles=s(this._handles),this._manipulatorHandles=s(this._manipulatorHandles),this._analysisHandles=s(this._analysisHandles),this.manipulators.removeAll(),this._observerManipulator=null,this._clearTargetTracker(),this._removeVisualElements(),this._intersector=null,this._set("model",null))}get state(){return this._creating?"creating":l(this.model.observer)?"created":"ready"}get cursor(){return!this._someManipulatorsFocused&&this._creating&&this._showTracker?"crosshair":null}get updating(){return!!l(this.layerView)&&this.layerView.updating}get _shouldRenderTracker(){return this._showTracker&&l(this.model.observer)&&!this._someManipulatorsFocused}continue(){this.view.activeTool=this,this._creating=!0,this._showTracker=!0,this._manipulatorFocusChanged()}stop(){this._creating=!1,this._showTracker=!1,this._clearTargetTracker(),this._manipulatorFocusChanged()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){if("immediate-click"===e.type)this._clickHandler(e)}onShow(){this.model.visible=!0}onHide(){this.model.visible=!1}_connectAnalyses(){let e=null;return a([_((()=>this.layerView.layerViewData.analyses),(t=>{e=c(e),e=t.on("change",(e=>this._onAnalysesCollectionChange(e))),t.forEach((e=>this._connectAnalysis(e)))})),n((()=>e=c(e)))])}_onAnalysesCollectionChange(e){e.added.forEach((e=>this._connectAnalysis(e))),e.removed.forEach((e=>this._disconnectAnalysis(e)))}_connectAnalysis(e){if(this.destroyed)return void S.warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const t=this._analysisHandles;if(t.has(e))return;const i=this._createTargetManipulator(e.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.layerView.layerViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),t.add([_((()=>this._getLineOfSightManipulatorStateDependencies(e)),(()=>this._updateManipulatorState(i,e))),_((()=>e.elevationAlignedTargetLocation),(e=>this._onTargetLocationChange(e,i)))],e)}_disconnectAnalysis(e){if(this.destroyed)return void S.warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(e);const t=this._getTargetManipulator(e.target);l(t)&&(this.manipulators.remove(t),this._manipulatorHandles.remove(t),l(this._targetTrackerManipulator)&&this._targetTrackerManipulator===t&&(this._targetTrackerManipulator=null))}_createTargetTracker(e){this.layerView.layerViewData.cursorTarget=new y({location:e.point,intersection:e})}_clearTargetTracker(){l(this.layerView.layerViewData.cursorTarget)&&(this.layerView.layerViewData.cursorTarget=s(this.layerView.layerViewData.cursorTarget))}_createManipulator(e,t,i){const r=T(this.view,e);return r.metadata=i,this._manipulatorHandles.add([t(r),r.events.on("focus-changed",(()=>this._manipulatorFocusChanged())),r.events.on("grab-changed",(e=>this._manipulatorGrabChanged(r,e))),r.events.on("immediate-click",(e=>e.stopPropagation()))],r),this.manipulators.add(r),r}_createTargetManipulator(e){const t=this.configuration,i={size:t.target.size,customColor1:t.target.visibleColor,customColor2:t.target.occludedColor,customColor3:t.target.undefinedColor,visible:!0},r={target:e,type:"target"},a=this._createManipulator(i,(e=>this._createTargetManipulatorDragPipeline(e)),r);return l(e.location)?a.elevationAlignedLocation=e.location:a.available=!1,a}_getTargetManipulator(e){let t=null;return this.manipulators.forEach((i=>{const r=i.manipulator;h(t)&&"target"===r.metadata.type&&r.metadata.target===e&&(t=r)})),t}_createObserverManipulator(){const e=this.configuration,t={size:e.observer.size,color:e.observer.color,visible:!0};return this._createManipulator(t,(e=>this._createObserverManipulatorDragPipeline(e)),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const e=this._observerManipulator,t=this.configuration.observer,i={size:t.size,color:t.color,visible:e.available};e.renderObjects=w(i)}_manipulatorFocusChanged(){this._someManipulatorsFocused=this.manipulators.some((e=>e.manipulator.focused)),this._updateLaserLineRenderer()}_screenToIntersection(){return e=>{const t=this._intersector.getScreenPointIntersection(e.screenEnd);return h(t)?null:{...e,intersection:t}}}_createTargetManipulatorDragPipeline(e){return V(e,((t,i,r)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(e)).next((()=>this._updateLaserLineRenderer())),r.next(this._cancelTargetDragStep(e.metadata.target)).next((()=>this._updateLaserLineRenderer()))}))}_createObserverManipulatorDragPipeline(e){return V(e,((e,t,i)=>{t.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next((()=>this._updateLaserLineRenderer())),i.next(this._cancelObserverDragStep()).next((()=>this._updateLaserLineRenderer()))}))}_updateObserverDragStep(){return e=>(this.model.observer=e.intersection.point,this.model.intersection=e.intersection,e)}_cancelObserverDragStep(){const e=l(this.model.observer)?this.model.observer.clone():null,t=this.model.intersection;return i=>(this.model.observer=e,this.model.intersection=t,i)}_updateTargetDragStep(e){return t=>{const i=t.intersection.point;return e.metadata.target.location=i,e.metadata.target.intersection=t.intersection,l(i)&&(e.elevationAlignedLocation=i),t}}_cancelTargetDragStep(e){const t=u(e.location,null,(e=>e.clone())),i=e.intersection;return r=>(e.location=t,e.intersection=i,r)}_manipulatorGrabChanged(e,t){switch(t.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}this._manipulatorFocusChanged()}_updateManipulatorState(e,t){const{isValid:i,isTargetVisible:r}=t.computationResult;e.state=i?r?16:32:64}_getLineOfSightManipulatorStateDependencies(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}_updateLaserLineRenderer(){if(h(this._laserlineVisualElement))return;const e=this._laserlineVisualElement,t=l(this._grabbedManipulator)?this._grabbedManipulator:this._shouldRenderTracker&&this.model.observer?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&l(t)?(e.heightManifoldTarget=t.renderLocation,t!==this._observerManipulator?e.lineVerticalPlaneSegment=v(this._observerManipulator.renderLocation,t.renderLocation,O):e.lineVerticalPlaneSegment=null):(e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const e=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new f({view:this.view,attached:!0,style:{glowColor:t.toUnitRGB(e.glowColor),glowWidth:e.glowWidth,innerColor:t.toUnitRGB(e.innerColor),innerWidth:e.innerWidth,globalAlpha:e.globalAlpha}})}_removeVisualElements(){l(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(e){h(e)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=e)}_onTargetLocationChange(e,t){l(e)?(t.elevationAlignedLocation=e,t!==this._targetTrackerManipulator&&(t.available=!0)):t.available=!1}_addPointFromClickEvent(e){const t=this._intersector.getScreenPointIntersection(e);h(t)||h(t.point)||(this.model.observer?(this._clearTargetTracker(),this.model.targets.add(new y({location:t.point,intersection:t}))):(this.model.observer=t.point,this.model.intersection=t))}_clickHandler(e){this._creating&&(this._addPointFromClickEvent({x:e.x,y:e.y}),e.stopPropagation())}_doubleClickHandler(e){this._creating&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this._creating&&"Escape"===e.key&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){if(this._showTracker="mouse"===e.pointerType&&this._creating,this._updateLaserLineRenderer(),!this._showTracker||h(this.model.observer))return;const t={x:e.x,y:e.y},i=this._intersector.getScreenPointIntersection(t);l(i)&&l(i.point)&&(l(this.layerView.layerViewData.cursorTarget)?(this.layerView.layerViewData.cursorTarget.location=i.point,this.layerView.layerViewData.cursorTarget.intersection=i):this._createTargetTracker(i),this._updateLaserLineRenderer())}};e([d({constructOnly:!0})],C.prototype,"view",void 0),e([d({constructOnly:!0})],C.prototype,"model",void 0),e([d({readOnly:!0})],C.prototype,"state",null),e([d({readOnly:!0})],C.prototype,"cursor",null),e([d({readOnly:!0})],C.prototype,"updating",null),e([d({type:b})],C.prototype,"configuration",void 0),e([d()],C.prototype,"layerView",void 0),e([d()],C.prototype,"_creating",void 0),e([d()],C.prototype,"_showTracker",void 0),e([d()],C.prototype,"_shouldRenderTracker",null),e([d()],C.prototype,"_someManipulatorsFocused",void 0),e([d()],C.prototype,"_laserlineVisualElement",void 0),e([d()],C.prototype,"_grabbedManipulator",void 0),C=e([p("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],C);const O=m();export{k as LineOfSightTargetCollection,C as LineOfSightTool};
