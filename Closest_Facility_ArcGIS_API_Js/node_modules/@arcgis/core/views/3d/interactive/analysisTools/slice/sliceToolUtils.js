/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import"../../../../../geometry.js";import{neverReached as e}from"../../../../../core/compilerUtils.js";import t from"../../../../../core/Logger.js";import{rad2deg as i,deg2rad as s}from"../../../../../core/mathUtils.js";import{isNone as r,isSome as o,unwrapOr as n}from"../../../../../core/maybe.js";import{castRenderScreenPointArray3 as a}from"../../../../../core/screenUtils.js";import{r as c,i as l,f as m,m as d,c as g,t as u,x as p}from"../../../../../chunks/mat4.js";import{c as f}from"../../../../../chunks/mat4f64.js";import{r as b}from"../../../../../chunks/quat.js";import{a as h,g as w,d as y,c as j,n as M,b as k,l as v,f as P,p as O,s as T}from"../../../../../chunks/vec3.js";import{a as U,c as R,f as S}from"../../../../../chunks/vec3f64.js";import{r as L,f as A,i as E,a as C,n as F,u as G}from"../../../../../chunks/boundedPlane.js";import{fromPositionAndNormal as x,fromVectorsAndPoint as I}from"../../../../../geometry/support/plane.js";import{create as z}from"../../../../../geometry/support/ray.js";import{angleAroundAxis as D}from"../../../../../geometry/support/vector.js";import{sv3d as B,sm4d as H,sq4d as V}from"../../../../../geometry/support/vectorStacks.js";import{Manipulator3D as q}from"../../Manipulator3D.js";import{calculateTranslateRotateFromBases as N}from"../../manipulatorUtils.js";import{SHIFT_RESTART_TIP_RADIUS as W,RESIZE_HANDLE_EDGE_PADDING_FRAC as Z,SMALL_ANGLE_DOT_THRESHOLD as $,PLANE_MIN_BASIS_SCREEN_LEN2 as J,INITIAL_PLANE_HALF_SIZE_VIEW_PROPORTION as K,SHIFT_RESTART_OFFSET_DISTANCE as Q,SHIFT_RESTART_ARROW_OUTLINE_WIDTH as X,SHIFT_RESTART_ARROW_TIP_COLOR as Y,SHIFT_RESTART_ARROW_CAP_COLOR as _,SHIFT_RESTART_TUBE_COLOR as ee,SHIFT_RESTART_OUTLINE_COLOR as te,SHIFT_RESTART_CALLOUT_COLOR as ie,ROTATE_HEADING_OFFSET_DISTANCE as se,ROTATE_HEADING_DISC_RADIUS as re,ROTATE_HEADING_CALLOUT_COLOR as oe,PLANE_OUTLINE_COLOR as ne,PLANE_OUTLINE_WIDTH as ae,PLANE_BACKGROUND_COLOR as ce,GRID_COLOR as le,HANDLE_COLOR as me,RESIZE_HANDLE_CORNER_INPUT_RADIUS as de,RESIZE_HANDLE_EDGE_INPUT_RADIUS as ge,ROTATE_HEADING_TIP_LENGTH as ue,VERTICAL_DOT_THRESHOLD as pe,ROTATE_HEADING_DISC_RADIUS_FOCUS_MULTIPLIER as fe,DISPLAY_FOCUS_MULTIPLIER as be,RESIZE_HANDLE_EDGE_WIDTH as he,SHIFT_RESTART_ARROW_LENGTH as we,SHIFT_RESTART_TUBE_RADIUS as ye,SHIFT_RESTART_TIP_LENGTH as je,SHIFT_RESTART_TUBE_FOCUS_MULTIPLIER as Me,SHIFT_RESTART_TIP_FOCUS_MULTIPLIER as ke,RESIZE_HANDLE_CORNER_WIDTH as ve}from"./sliceToolConfig.js";import{LineVisualElement as Pe}from"../../visualElements/LineVisualElement.js";import{SlicePlaneVisualElement as Oe}from"../../visualElements/SlicePlaneVisualElement.js";import{getElevationAtPoint as Te}from"../../../support/ElevationProvider.js";import{fromRender as Ue}from"../../../support/geometryUtils/ray.js";import{Geometry as Re}from"../../../webgl-engine/lib/Geometry.js";import Se from"../../../webgl-engine/lib/GeometryUtil.js";import{ColorMaterial as Le}from"../../../webgl-engine/materials/ColorMaterial.js";import{ImageMaterial as Ae}from"../../../webgl-engine/materials/ImageMaterial.js";import{NativeLineMaterial as Ee}from"../../../webgl-engine/materials/NativeLineMaterial.js";import{RibbonLineMaterial as Ce}from"../../../webgl-engine/materials/RibbonLineMaterial.js";import Fe from"../../../../../widgets/Slice/SlicePlane.js";import Ge from"../../../../../geometry/Point.js";const xe=t.getLogger("esri.views.3d.interactive.analysisTools.slice.sliceToolUtils");function Ie(e,t,i,s,r,o,n,a){return ze(t,n.worldUpAtPosition(e,B.get()),r,o,a.basis1,a.basis2),h(a.basis1,a.basis1,i),h(a.basis2,a.basis2,s),w(a.origin,e),I(a.basis2,a.basis1,a.origin,a.plane),a}function ze(e,t,i,s,r,o){const n=y(e,t),a=B.get(),c=B.get();switch(0===s?Math.abs(n)>pe?1:2:s){case 2:{const s=Math.abs(n)<=$?e:i.viewUp;j(a,s,t),w(c,t);break}case 1:j(a,i.viewUp,t),j(c,t,a);break;case 3:{const s=Math.abs(n)<=$?t:i.viewUp;j(a,s,e),j(c,e,a);break}}const l=j(B.get(),a,c);y(l,i.viewForward)>0&&h(c,c,-1),M(r,a),M(o,c)}function De(e,t,i){const s=t.worldUpAtPosition(e.origin,B.get()),r=e.basis1,o=mt(e,s),n=Math.round(o/yt)*yt;return L(e,n-o,r,i)}function Be(e,t,i,s,r,o){const n=w(B.get(),r.origin);k(n,n,h(B.get(),r.basis1,e.direction[0]<0?1:-1)),k(n,n,h(B.get(),r.basis2,e.direction[1]<0?1:-1));const a=v(r.basis1),c=v(r.basis2),l=P(B.get(),i,n),m=P(B.get(),t,n);let d=0,g=0;if(et(e)){const t=_e(r),i=_e(o);d=a-.5*e.direction[0]*y(r.basis1,m)/a,g=c-.5*e.direction[1]*y(r.basis2,m)/c;const s=i/t;d*=s,g*=s}const u=d+.5*e.direction[0]*y(r.basis1,l)/a,p=g+.5*e.direction[1]*y(r.basis2,l)/c,f=h(B.get(),r.basis1,u/a),b=h(B.get(),r.basis2,p/c);(u<=0||Xe(o.origin,f,s)<=J)&&w(f,o.basis1),(p<=0||Xe(o.origin,b,s)<=J)&&w(b,o.basis2);const j=w(B.get(),n);return k(j,j,h(B.get(),f,e.direction[0]<0?-1:1)),k(j,j,h(B.get(),b,e.direction[1]<0?-1:1)),A(j,f,b,o)}function He(e,t){return K*Math.min(t.width,t.height)*t.computeRenderPixelSizeAt(e)}function Ve(e,t,i,s){const r=j(B.get(),t,i);return j(r,r,t),x(e,r,s)}function qe(e,t){return N(e.basis1,e.basis2,e.origin,t)}function Ne(e,t,i,s){const r=t.worldUpAtPosition(e.origin,B.get()),o=B.get();switch(i){case 1:w(o,r);break;case 2:w(o,e.basis1)}return x(e.origin,o,s)}function We(e,t,i,s){const r=Qe(i,2),o=H.get();c(o,t,r.edge*Math.PI/2);const n=M(B.get(),r.basis);let l=h(B.get(),n,r.direction*s.computeScreenPixelSizeAt(r.position)*Q);k(l,l,r.position);const m=s.projectToRenderScreen(l,a(B.get())),d=Ze(s,m);Ue(s,m,wt),M(wt.direction,wt.direction);const g=B.get();!d&&E(i,wt,g)&&(l=g),o[12]=0,o[13]=0,o[14]=0,e.modelTransform=o,e.renderLocation=U(l),d?e.state|=ht:e.state&=~ht}function Ze(e,t){const[i,s,r,o]=e.viewport,n=Math.min(r,o)/16;let a=!0;return t[0]<i+n?(t[0]=i+n,a=!1):t[0]>i+r-n&&(t[0]=i+r-n,a=!1),t[1]<s+n?(t[1]=s+n,a=!1):t[1]>s+o-n&&(t[1]=s+o-n,a=!1),a}function $e(e,t,i,s){const r=v(s.basis1),o=v(s.basis2),n=Ye(s),a=_e(s),g=T(B.get(),0,0,0);k(g,h(B.get(),s.basis1,t.direction[0]),h(B.get(),s.basis2,t.direction[1])),k(g,s.origin,g);let u=0,p=1;if(et(t))1===t.direction[0]&&-1===t.direction[1]?u=yt:1===t.direction[0]&&1===t.direction[1]?u=Math.PI:-1===t.direction[0]&&1===t.direction[1]&&(u=3*Math.PI/2),p=a;else{const e=0!==t.direction[0]?1:2;u=1===e?yt:0,p=(1===e?o:r)-n}const f=l(H.get());c(f,f,u),m(f,f,T(B.get(),p,p,p)),d(f,i,f),f[12]=0,f[13]=0,f[14]=0,e.modelTransform=f,e.renderLocation=g}function Je(e,t,i,s){const r=s.worldUpAtPosition(i.origin,B.get()),o=Qe(i,0),n=l(H.get());c(n,n,o.edge*Math.PI/2),g(n,n,-mt(i,r)),d(n,t,n),n[12]=0,n[13]=0,n[14]=0,e.modelTransform=n,e.renderLocation=o.position}function Ke(e,t,i){const s=Qe(i,1),r=l(H.get());c(r,r,s.edge*Math.PI/2),g(r,r,yt),d(r,t,r),r[12]=0,r[13]=0,r[14]=0,e.modelTransform=r,e.renderLocation=s.position}function Qe(e,t){switch(t){case 0:return{basis:e.basis1,direction:1,position:k(B.get(),e.origin,e.basis1),edge:t};case 1:return{basis:e.basis2,direction:1,position:k(B.get(),e.origin,e.basis2),edge:t};case 2:return{basis:e.basis1,direction:-1,position:P(B.get(),e.origin,e.basis1),edge:t};case 3:return{basis:e.basis2,direction:-1,position:P(B.get(),e.origin,e.basis2),edge:t}}}function Xe(e,t,i){const s=i.projectToRenderScreen(k(B.get(),e,t),a(B.get())),r=i.projectToRenderScreen(P(B.get(),e,t),a(B.get()));return O(P(s,s,r))}function Ye(e){const t=v(e.basis1),i=v(e.basis2);return Z*Math.min(t,i)}function _e(e){return Ye(e)}function et(e){return 0!==e.direction[0]&&0!==e.direction[1]}function tt(e,t=1){const i=0===t?Q:0,s=[S(i,0,-we/2),S(i,0,we/2)],r=ct(s,!0),o=(e,t)=>nt(s,s,{tubeRadius:ye,tipRadius:W,tipLength:je,tubeFocusMultiplier:Me,tipFocusMultiplier:ke,padding:e,bothEnds:!0,flat:null,focusTipLength:!0,addCap:t}),n=o(0,!1),a=o(X,!0),c=new Le({color:Y,cullFace:2,renderOccluded:16}),l=new Le({color:_,cullFace:2,renderOccluded:16}),m=new Le({color:ee,cullFace:2,renderOccluded:16}),d=new Le({color:te,transparent:!0,writeDepth:!1,cullFace:1,renderOccluded:2}),g=Se.createPolylineGeometry([[i,0,0],[i-Q,0,0]]),u=Se.createPolylineGeometry([[i,0,0],[i-Q,0,0]]),p=new Ee({color:ie,renderOccluded:4});return new q({view:e,renderObjects:[...n.normal.map((({part:e,geometry:t,transform:i})=>({geometry:t,material:"tip"===e?c:"cap"===e?l:m,transform:i,stateMask:1|bt}))),...a.normal.map((({geometry:e,transform:t})=>({geometry:e,material:d,transform:t,stateMask:1|bt}))),{geometry:g,material:p,stateMask:1|bt|ht},...n.focused.map((({part:e,geometry:t,transform:i})=>({geometry:t,material:"tip"===e?c:"cap"===e?l:m,transform:i,stateMask:2|bt}))),...a.focused.map((({geometry:e,transform:t})=>({geometry:e,material:d,transform:t,stateMask:2|bt}))),{geometry:u,material:p,stateMask:2|bt|ht}],autoScaleRenderObjects:!1,collisionType:{type:"line",paths:[r]},collisionPriority:1,radius:W,state:bt})}function it(e,t){const i=new Ae({transparent:!0,writeDepth:!1,textureId:t.id,renderOccluded:16}),s=se,r=re,o=r*fe,n=e=>{const t=new Uint32Array([0,1,2,2,3,0]);return new Re([["position",{size:3,data:[s-e,-e,0,s+e,-e,0,s+e,e,0,s-e,e,0],exclusive:!0}],["uv0",{size:2,data:[0,0,1,0,1,1,0,1]}]],[["position",t],["uv0",t]])},a=Se.createPolylineGeometry([[0,0,0],[s-r,0,0]]),c=Se.createPolylineGeometry([[0,0,0],[s-o,0,0]]),l=new Ee({color:oe,renderOccluded:4}),m=[{geometry:n(r),material:i,stateMask:1|bt},{geometry:a,material:l,stateMask:1|bt},{geometry:n(o),material:i,stateMask:2|bt},{geometry:c,material:l,stateMask:2|bt}];return new q({view:e,renderObjects:m,autoScaleRenderObjects:!1,collisionType:{type:"disc",direction:[0,0,1],offset:[s,0,0]},collisionPriority:1,radius:r/2,state:bt})}function st(e){return new Pe({view:e,attached:!0,color:ne,width:ae,writeDepthEnabled:!1,renderOccluded:4,geometry:[[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0],[-1,-1,0]]]})}function rt(e){return new Oe({view:e,attached:!0,backgroundColor:[...ce],gridColor:le,gridWidth:4,renderOccluded:4})}function ot(e,t){const i=et(t),s=i?[S(1,0,0),S(0,0,0),S(0,1,0)]:[S(1,0,0),S(-1,0,0)],r=Se.createPolylineGeometry(s),o=[...me,1],n=e=>new Ce({color:o,width:e,renderOccluded:4}),a=()=>new Ee({color:o,renderOccluded:4}),c=i?ve:he,l=c*be,m=he,d=e=>e>1?n(e):a(),g=[{geometry:r,material:d(c),stateMask:1|jt},{geometry:r,material:d(l),stateMask:2|jt},{geometry:r,material:d(m),stateMask:Mt}],u=new q({view:e,renderObjects:g,collisionType:{type:"line",paths:[s]},autoScaleRenderObjects:!1,worldSized:!0,radius:i?de:ge,idHint:i?1:2});return u.state=jt,u}function nt(e,t,i){const s=s=>{const r=(s?t:e).slice(0),n=P(B.get(),r[0],r[1]);M(n,n);const a=P(B.get(),r[r.length-1],r[r.length-2]);if(M(a,a),i.padding>0){const e=h(R(),a,-i.padding);if(r[r.length-1]=k(e,e,r[r.length-1]),i.bothEnds){const e=h(R(),n,-i.padding);r[0]=k(e,e,r[0])}}const c=s?i.tipFocusMultiplier:1,g=i.tipLength*(i.focusTipLength?c:1),w=i.tipRadius*c,y=l(H.get());if(i.padding>0){const e=g/4,t=T(B.get(),0,e,0),s=1+i.padding/e;u(y,y,t),m(y,y,T(B.get(),s,s,s)),u(y,y,h(t,t,-1/s))}const j=l(f()),v=S(0,1,0),O=p(f(),b(V.get(),v,a));O[12]=r[r.length-1][0],O[13]=r[r.length-1][1],O[14]=r[r.length-1][2],d(O,O,y);const U=[{part:"tube",geometry:at(i.tubeRadius*(s?i.tubeFocusMultiplier:1)+i.padding,i.flat,r),transform:j}];let L,A;if(o(i.flat)?L=Se.createExtrudedTriangle(g,w,w,i.flat.thickness):(L=Se.createConeGeometry(g,w,24,!1,!1,!0),A=Se.createConeGeometry(g,w,24,!1,!0,!1)),U.push({part:"tip",geometry:L,transform:O}),A&&U.push({part:"cap",geometry:A,transform:O}),i.bothEnds){const e=p(f(),b(V.get(),v,n));e[12]=r[0][0],e[13]=r[0][1],e[14]=r[0][2],d(e,e,y),U.push({part:"tip",geometry:L,transform:e}),A&&U.push({part:"cap",geometry:A,transform:e})}return U};return{normal:s(!1),focused:s(!0)}}function at(e,t,i){const s=[];if(o(t))s.push([e,t.thickness/2],[-e,t.thickness/2],[-e,-t.thickness/2],[e,-t.thickness/2]);else{const t=12;for(let i=0;i<t;i++){const r=i/t*2*Math.PI;s.push([Math.cos(r)*e,Math.sin(r)*e])}}return Se.createPathExtrusionGeometry(s,i,[],[],!1)}function ct(e,t){const i=P(R(),e[e.length-1],e[e.length-2]);if(M(i,i),h(i,i,ue),k(i,i,e[e.length-1]),t){const t=P(R(),e[0],e[1]);return M(t,t),h(t,t,ue),k(t,t,e[0]),[t,...e,i]}return[...e,i]}function lt(e,t,s,n=new Fe){if(r(e))return null;const a=o(n.position)?n.position:new Ge;t.fromRenderCoords(e.origin,a,s),n.position=a;const c=t.worldUpAtPosition(e.origin,B.get()),l=t.worldBasisAtPosition(e.origin,1,B.get());return n.width=2*v(e.basis1),n.height=2*v(e.basis2),n.tilt=i(mt(e,c)),n.heading=i(dt(e,c,l)),n}function mt(e,t){return D(t,e.basis2,e.basis1)+yt}function dt(e,t,i){return D(e.basis1,i,t)-yt}function gt(e,t,i,r,o,n,a=C()){return n.toRenderCoords(e,a.origin)?(n.worldBasisAtPosition(a.origin,0,a.basis1),n.worldBasisAtPosition(a.origin,1,a.basis2),I(a.basis2,a.basis1,a.origin,a.plane),L(a,-s(t),F(a),a),L(a,s(i),a.basis1,a),h(a.basis1,a.basis1,r/2),h(a.basis2,a.basis2,o/2),G(a),a):(xe.error(`Failed to project slice plane position, projection from ${e.spatialReference.wkid} is not supported`),null)}function ut(e,t,i=C()){return r(e)||r(e.position)?null:gt(e.position,e.heading,e.tilt,e.width,e.height,t,i)}function pt(e,t,i=C()){if(r(e)||r(e.position))return null;let s=e.position;return e.position.hasZ||(s=e.position.clone(),s.z=n(Te(t.elevationProvider,e.position),0)),gt(s,e.heading,e.tilt,e.width,e.height,t.renderCoordsHelper,i)}function ft(t){switch(t.type){case"building-scene":case"csv":case"direct-line-measurement":case"area-measurement":case"feature":case"geo-rss":case"geojson":case"graphics":case"group":case"integrated-mesh":case"kml":case"line-of-sight":case"map-notes":case"ogc-feature":case"point-cloud":case"route":case"slice":case"scene":case"stream":case"voxel":case"subtype-group":case"unknown":case"unsupported":case"wfs":case null:return!1;case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"elevation":case"imagery":case"imagery-tile":case"map-image":case"open-street-map":case"tile":case"vector-tile":case"wcs":case"web-tile":case"wms":case"wmts":return!0;default:return e(t.type),!1}}const bt=16,ht=32,wt=z(),yt=Math.PI/2,jt=16,Mt=32;export{bt as DidPointerMoveRecentlyFlag,ht as IsShiftEdgeOnScreenFlag,ct as addArrowTips,qe as calculateBoundedPlaneTranslateRotate,_e as calculateDiagonalResizeHandleScale,He as calculatePlaneHalfSize,Ye as calculateResizeHandlePadding,Xe as calculateScreenSpaceBasisLength2,nt as createArrowGeometry,rt as createGridVisualElement,st as createOutlineVisualElement,Ie as createPlane,ot as createResizeManipulator,it as createRotateManipulator,Ne as createRotatePlane,tt as createShiftManipulator,Ve as createShiftPlane,De as forceHorizontalOrVertical,ft as isAlwaysDrapedLayer,et as isDiagonalResizeHandle,ze as normalToBases,lt as planeToShape,jt as resizeNormal,Mt as resizeOutlineOnly,Be as resizePlane,pt as shapeToElevationAlignedPlane,ut as shapeToPlane,$e as updateResizeHandle,Je as updateRotateHeadingHandle,Ke as updateRotateTiltHandle,We as updateShiftRestartHandle};
