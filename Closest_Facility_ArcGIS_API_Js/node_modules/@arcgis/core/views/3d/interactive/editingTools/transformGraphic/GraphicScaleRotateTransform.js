/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import t from"../../../../../core/Evented.js";import a from"../../../../../core/Handles.js";import{clamp as e,rad2deg as i}from"../../../../../core/mathUtils.js";import{isSome as r,destroyMaybe as s}from"../../../../../core/maybe.js";import{addFrameTask as o}from"../../../../../core/scheduling.js";import{createScreenPointArray as n}from"../../../../../core/screenUtils.js";import{init as l}from"../../../../../core/watchUtils.js";import{i as c,d as h,w as d,m as g,f as p}from"../../../../../chunks/mat4.js";import{c as u}from"../../../../../chunks/mat4f64.js";import{s as m,f,l as M,h as D,c as S,b as y}from"../../../../../chunks/vec3.js";import{a as v,f as R}from"../../../../../chunks/vec3f64.js";import{fromPositionAndNormal as b,create as k,normal as _}from"../../../../../geometry/support/plane.js";import{wrap as j,distance2 as A}from"../../../../../geometry/support/ray.js";import{sv3d as w,sm4d as F}from"../../../../../geometry/support/vectorStacks.js";import{getGraphicEffectiveElevationInfo as I}from"../../../../../support/elevationInfoUtils.js";import{Manipulator3D as E}from"../../Manipulator3D.js";import{calculateInputRotationTransform as P}from"../../manipulatorUtils.js";import{screenToRenderPlane as U}from"../dragEventPipeline3D.js";import{ROTATE_INDICATOR_DIRECTION_BUFFER as T,SCALE_INDICATOR_DIRECTION_BUFFER as x,RING_HEIGHT as L,ROTATE_INDICATOR_ARROW_PLACEMENT_PERCENTAGE as O,ROTATE_INDICATOR_ARROW_TIP_LENGTH as C,ROTATE_INDICATOR_ARROW_TIP_RADIUS as G,RING_THICKNESS as H,HANDLE_COLOR as q,DRAG_THRESHOLD_PX as z,RING_INDICATOR_DELAY_MS as B,RING_RADIUS as J,INNER_INDICATOR_RADIUS as K,INDICATOR_THICKNESS as N,OUTER_INDICATOR_RADIUS as Q,SCALE_INDICATOR_OFFSET1 as V,SCALE_INDICATOR_OFFSET2 as W,RING_RESET_ANIMATION_SPEED_FACTOR as X,GEOMETRY_SEGMENTS as Y,ROTATE_INDICATOR_ARC_LENGTH as Z,SCALE_INDICATOR_ARC_LENGTH as $}from"../manipulations/config.js";import{cyclicalPI as tt}from"../../../support/mathUtils.js";import at from"../../../webgl-engine/lib/GeometryUtil.js";import{ColorMaterial as et}from"../../../webgl-engine/materials/ColorMaterial.js";import{createManipulatorDragEventPipeline as it}from"../../../../interactive/dragEventPipeline.js";var rt;!function(t){t.ScaleIn=32,t.ScaleOut=64,t.RotateLeft=128,t.RotateRight=256,t.Unlocked=1024,t.DelayedFocused=2048,t.TouchInput=32768}(rt||(rt={}));class st{constructor(e){this.mode=null,this._handles=new a,this._scaleRotateDragData=null,this._activeAnimation=null,this.events=new t,this.getFocused=()=>this.ringManipulator.focused,this.getScale=()=>r(this._scaleRotateDragData)&&"scale"===this._scaleRotateDragData.mode?this.adapter.scale:1,this.tool=e.tool,this.mode=e.mode,this.adapter=e.adapter,this.createManipulator(),this.updateDragState(),this.updateManipulatorTransform()}get angle(){return this.adapter.angle}get scale(){return this.adapter.scale}set location(t){this.ringManipulator.location=t}set elevationAlignedLocation(t){this.ringManipulator.elevationAlignedLocation=t}get grabbing(){return this.ringManipulator.grabbing}set interactive(t){this.ringManipulator.interactive=t}destroy(){r(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=null),this._handles=s(this._handles),this.tool.manipulators.remove(this.ringManipulator),this.ringManipulator=null}startAnimation(t){this.cancelActiveAnimation(),t.start();const a=o({update:({deltaTime:a})=>{t.update(a)&&this.cancelActiveAnimation()}});this._activeAnimation={...t,frameTask:a}}cancelActiveAnimation(){r(this._activeAnimation)&&(this._activeAnimation.frameTask.remove(),this._activeAnimation=s(this._activeAnimation))}forEachManipulator(t){t(this.ringManipulator,4)}createManipulator(){this.ringManipulator=this.createRingManipulator(),this.tool.manipulators.add(this.ringManipulator);const t=this.ringManipulator,a=this.tool.graphicState.graphic,s=it(t,((t,s,o)=>{this._scaleRotateDragData=null,this.adapter.restart();const n={mode:"none",origin:v(t.renderLocation),initialAngle:this.adapter.angle,angle:0,angleDir:0,scaleDir:0};this._scaleRotateDragData=n,this.updateDragState();const l=w.get();this.tool.view.renderCoordsHelper.worldUpAtPosition(t.renderLocation,l),s.next(U(this.tool.view,b(t.renderLocation,l,k()))).next((t=>{const s=_(t.plane),o=P(t.renderStart,t.renderEnd,n.origin,s),l=tt.shortestSignedDiff(n.angle,o);n.angleDir=e(n.angleDir+l,-T,T),n.angle=o;const c=ot(n,t),h=c-this.adapter.scale;if(n.scaleDir=e(n.scaleDir+h,-x,x),this.onScaleChanged(),"none"===n.mode){const e=this.mode||nt(t,t.plane,n.origin,this.tool.view.state.camera);if(r(e)){switch(e){case"rotate":this.tool.emit("graphic-rotate-start",{graphic:a,angle:0}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()});break;case"scale":this.tool.emit("graphic-scale-start",{graphic:a,xScale:1,yScale:1}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()})}n.mode=e}}switch(n.mode){case"rotate":this.adapter.angle=n.initialAngle+o;break;case"scale":this.adapter.scale=c,this.onScaleChanged()}switch(this.updateDragState(),this.updateManipulatorTransform(),t.action){case"start":case"update":switch(n.mode){case"rotate":this.tool.emit("graphic-rotate",{graphic:a,angle:i(n.angle)});break;case"scale":this.tool.emit("graphic-scale",{graphic:a,xScale:c,yScale:c})}break;case"end":switch(n.mode){case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:a,angle:i(n.angle)});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:a,xScale:c,yScale:c})}}"end"===t.action&&(this.startAnimation(ct(this,(()=>this.onScaleChanged()))),this._scaleRotateDragData=null,this.updateDragState())})),o.next((()=>{if(this.adapter.cancel(),r(this._scaleRotateDragData)){switch(this._scaleRotateDragData.mode){case"none":break;case"rotate":this.tool.emit("graphic-rotate-stop",{graphic:a,angle:0});break;case"scale":this.tool.emit("graphic-scale-stop",{graphic:a,xScale:1,yScale:1})}this.startAnimation(ct(this,(()=>this.onScaleChanged()))),this._scaleRotateDragData=null,this.updateDragState()}}))}));this._handles.add(s),this._handles.add([this.ringManipulator.events.on("focus-changed",(t=>{"focus"===t.action?this.startAnimation(ht(this,(()=>this.updateDelayedFocusedState()))):this.updateDelayedFocusedState()})),this.ringManipulator.events.on("immediate-click",(t=>{t.stopPropagation()})),l(this.tool.graphicState,"displaying",(t=>this.ringManipulator.available=t))])}onScaleChanged(){this.events.emit("scale-changed"),this.updateManipulatorTransform()}updateDelayedFocusedState(){this.ringManipulator.updateStateEnabled(rt.DelayedFocused,this.getFocused())}updateDragState(){if(this.ringManipulator.updateStateEnabled(rt.Unlocked,!(r(this._scaleRotateDragData)&&"none"!==this._scaleRotateDragData.mode)),r(this._scaleRotateDragData))switch(this._scaleRotateDragData.mode){case"rotate":this.ringManipulator.updateStateEnabled(rt.ScaleIn|rt.ScaleOut,!1),this.ringManipulator.updateStateEnabled(rt.RotateLeft,this._scaleRotateDragData.angleDir<0),this.ringManipulator.updateStateEnabled(rt.RotateRight,this._scaleRotateDragData.angleDir>=0);break;case"scale":this.ringManipulator.updateStateEnabled(rt.RotateLeft|rt.RotateRight,!1),this.ringManipulator.updateStateEnabled(rt.ScaleIn,this._scaleRotateDragData.scaleDir<0),this.ringManipulator.updateStateEnabled(rt.ScaleOut,this._scaleRotateDragData.scaleDir>=0)}else this.ringManipulator.updateStateEnabled(rt.ScaleIn|rt.ScaleOut|rt.RotateLeft|rt.RotateRight,!1)}updateManipulatorTransform(){const t=c(F.get()),a=this.adapter.angle;h(t,t,a,R(0,0,1));const e=this.getScale(),i=d(F.get(),m(w.get(),e,e,e)),r=c(F.get());g(r,i,t),this.ringManipulator.modelTransform=r}createRingManipulator(){const t=(t,a,e)=>{const i=[],r=Math.ceil(Y*(a-t)/(2*Math.PI));for(let s=0;s<r+1;s++){const o=t+s*(a-t)/r;i.push(R(e*Math.cos(o),e*Math.sin(o),0))}return i},a=a=>t(0,2*Math.PI,a),e=t=>[[-t/2,0],[t/2,0],[t/2,L/2],[-t/2,L/2]],i=(t,a)=>at.createPathExtrusionGeometry(e(a),t,[],[],!1),r=a(J),s=i(r,H),o={left:[],right:[]},n=[];for(let R=0;R<2;R++){const a=R*Math.PI-Math.PI/4,e=Math.PI/2-Z,r=a+e,s=a+Math.PI/2-e,l=t(r,s,K),c=i(l,N);n.push(l),n.push(t(r,s,Q-H/2)),o.left.push(c),o.right.push(c);for(let t=0;t<2;t++){const a=0===t,e=u();if(a){p(e,e,[1,-1,1]),h(e,e,-r,[0,0,1]);const t=Math.round(O*(l.length-1));e[12]=l[t][0],e[13]=l[t][1],e[14]=l[t][2]}else{h(e,e,s,[0,0,1]);const t=Math.round((1-O)*(l.length-1));e[12]=l[t][0],e[13]=l[t][1],e[14]=l[t][2]}const i=at.createExtrudedTriangle(C,0,G,L);at.transformInPlace(i,e),(a?o.left:o.right).push(i)}}const l=[];for(let h=0;h<2;h++){const a=h*Math.PI-Math.PI/4,e=Math.PI/2-$,r=a+e,s=a+Math.PI/2-e,o=t(r,s,Q);l.push(i(o,N))}const c=a(J+V),d=a(J+W),g=i(c,N),m=i(d,N),f=a(J-V),M=a(J-W),D=i(f,N),S=i(M,N),y=this.createMaterial(),v=this.createMaterial(.66),b=this.createMaterial(.5),k=this.createMaterial(.33);let _=[{geometry:s,material:y,stateMask:rt.DelayedFocused},{geometry:s,material:b,stateMask:0}];this.mode&&"scale"!==this.mode||(_=_.concat([{geometry:l,material:y,stateMask:rt.DelayedFocused|rt.Unlocked},{geometry:g,material:v,stateMask:rt.DelayedFocused|rt.ScaleIn},{geometry:m,material:k,stateMask:rt.DelayedFocused|rt.ScaleIn},{geometry:D,material:v,stateMask:rt.DelayedFocused|rt.ScaleOut},{geometry:S,material:k,stateMask:rt.DelayedFocused|rt.ScaleOut}])),this.mode&&"rotate"!==this.mode||(_=_.concat([{geometry:o.right,material:y,stateMask:rt.DelayedFocused|rt.Unlocked},{geometry:o.left,material:y,stateMask:rt.DelayedFocused|rt.RotateLeft},{geometry:o.right,material:y,stateMask:rt.DelayedFocused|rt.RotateRight}]));const j=[r,...n];return new E({view:this.tool.view,renderObjects:_,autoScaleRenderObjects:!1,worldOriented:!0,radius:H,focusMultiplier:1,touchMultiplier:1.5,elevationInfo:I(this.tool.graphicState.graphic),collisionType:{type:"ribbon",paths:j,direction:R(0,0,1)}})}createMaterial(t=1){const a=[...q,t];return new et({color:a,transparent:1!==t,cullFace:2,renderOccluded:2})}get test(){return{ringManipulator:this.ringManipulator}}}function ot(t,a){const e=f(w.get(),a.renderStart,t.origin),i=f(w.get(),a.renderEnd,t.origin),r=M(e),s=M(i);return 0===r?0:s/r}function nt(t,a,e,i){const{renderStart:r,renderEnd:s}=t,o=lt(r,i,w.get()),n=lt(s,i,w.get());if(D(o,n)<z*z)return null;const l=f(w.get(),r,e),c=S(w.get(),l,_(a)),h=r,d=y(w.get(),h,c),g=lt(e,i,w.get()),p=o,u=lt(d,i,w.get()),m=f(w.get(),u,p),M=f(w.get(),o,g),v=j(p,m),R=j(g,M);return A(v,n)<A(R,n)?"rotate":"scale"}function lt(t,a,e){return a.projectToScreen(t,dt),m(e,dt[0],dt[1],0)}function ct(t,a){let e=null,i=1;const r=()=>i;return{start:()=>{i=t.getScale(),e=t.getScale,t.getScale=r,a()},update:t=>(i+=((i+1)/2-i)*Math.min(t*X,1),a(),Math.abs(i-1)<.01?1:0),destroy:()=>{t.getScale=e,a()}}}function ht(t,a){let e=0,i=null;const r=()=>!1;return{start:()=>{i=t.getFocused,t.getFocused=r,e=0,a()},update:t=>(e+=t,!i()||e>B?1:0),destroy:()=>{t.getFocused=i,a()}}}const dt=n();export{st as GraphicScaleRotateTransform};
