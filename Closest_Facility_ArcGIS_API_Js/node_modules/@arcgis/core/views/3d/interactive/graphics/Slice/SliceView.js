/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Accessor.js";import i from"../../../../../core/Handles.js";import{applyOpacity as s}from"../../../../../core/mathUtils.js";import{isNone as a,destroyMaybe as r,isSome as l}from"../../../../../core/maybe.js";import{whenOnce as o}from"../../../../../core/watchUtils.js";import{property as n}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as h}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reactionInit as c}from"../../../../../core/accessorSupport/trackingUtils.js";import{w as p,m as d}from"../../../../../chunks/mat4.js";import{s as u,l as m}from"../../../../../chunks/vec3.js";import{c as y}from"../../../../../chunks/vec4f64.js";import{sm4d as w,sv3d as _}from"../../../../../geometry/support/vectorStacks.js";import{PLANE_OUTLINE_WIDTH as V,PLANE_OUTLINE_COLOR as g,PLANE_PREVIEW_OUTLINE_WIDTH as f,PLANE_BACKGROUND_COLOR as v,GRID_COLOR as j}from"../../analysisTools/slice/sliceToolConfig.js";import{createGridVisualElement as E,createOutlineVisualElement as b,calculateBoundedPlaneTranslateRotate as k}from"../../analysisTools/slice/sliceToolUtils.js";import{createStipplePatternSimple as S}from"../../../webgl-engine/materials/lineStippleUtils.js";let M=class extends t{constructor(e){super(e),this._handles=new i,this._gridVisualElement=null,this._outlineVisualElement=null,this.state="pending"}get ready(){return"ready"===this.state}set showGrid(e){this._set("showGrid",e),this._updateMaterials()}set editable(e){this._set("editable",e),this._updateMaterials()}initialize(){this._initialize()}async _initialize(){switch(this.state){case"pending":break;case"destroyed":return;case"ready":throw new Error("state error")}if(await o(this.view,"ready",!0),a(this.layerView.layerViewData))throw new Error("expected internal object to be valid");this._gridVisualElement=E(this.view),this._outlineVisualElement=b(this.view),this._handles.add(c((()=>this.layerView.fullOpacity),(()=>this._updateMaterials())),"layer"),this._handles.add([this.layerView.watch("visible",(()=>this._updateMaterials()),!0),this.layerView.layerViewData.watch("plane",(()=>this._updatePlane()),!0),this.layerView.watch("active",(()=>this._updateMaterials()),!0)],"internal"),this._updatePlane(),this._set("state","ready")}destroy(){switch(this.state){case"destroyed":case"pending":return}this._handles.destroy(),this._gridVisualElement=r(this._gridVisualElement),this._outlineVisualElement=r(this._outlineVisualElement),this.set("view",null),this._set("state","destroyed")}async whenReady(){return await o(this,"ready"),this}_update(){switch(this.state){case"pending":case"destroyed":return}}_updatePlane(){const e=this.layerView.layerViewData.plane,t=l(e)?k(e,w.get()):null;if(this._outlineVisualElement.width=V,l(e)){const i=u(_.get(),m(e.basis1),m(e.basis2),1),s=p(w.get(),i),a=d(s,t,s);this._outlineVisualElement.transform=a,this._gridVisualElement.transform=a}this._updateMaterials()}_updateMaterials(){const e=this.layerView.layerViewData.plane&&this.layerView.visible,t=this.layerView.active,i=this.layerView.fullOpacity,a=s(D,g,i);this._outlineVisualElement.color=a,this._outlineVisualElement.width=this.editable?V:f,this._outlineVisualElement.stipplePattern=t?null:S(5);const r=s(D,v,i),o=!!l(this.layerView.layerViewData)&&this.showGrid?j:[0,0,0,0];this._gridVisualElement.backgroundColor=r,this._gridVisualElement.gridColor=o,this._gridVisualElement.visible=e,this._outlineVisualElement.visible=e}};e([n({readOnly:!0})],M.prototype,"state",void 0),e([n()],M.prototype,"view",void 0),e([n()],M.prototype,"layer",void 0),e([n()],M.prototype,"layerView",void 0),e([n()],M.prototype,"ready",null),e([n({value:!1})],M.prototype,"showGrid",null),e([n({value:!0})],M.prototype,"editable",null),M=e([h("esri.views.3d.interactive.graphics.Slice.SliceView")],M);const D=y();export{M as SliceView};
