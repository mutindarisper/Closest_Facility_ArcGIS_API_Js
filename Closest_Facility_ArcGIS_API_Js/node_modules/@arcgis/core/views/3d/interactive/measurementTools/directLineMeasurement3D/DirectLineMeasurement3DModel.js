/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Accessor.js";import{isSome as r}from"../../../../../core/maybe.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as s}from"../../../../../core/accessorSupport/decorators/subclass.js";import i from"../../../../../layers/DirectLineMeasurementLayer.js";let a=class extends t{constructor(){super(...arguments),this.layer=new i({visible:!1,listMode:"hide"}),this.cursorPoint=null,this.state="initial",this.active=!1}initialize(){this.sceneView.map.add(this.layer),this.reset()}destroy(){this.sceneView.map.remove(this.layer),this.layer.destroy()}get startPoint(){return this.layer.startPoint}set startPoint(e){this.layer.startPoint=e}set startPointSurfaceLocation(e){this._set("startPointSurfaceLocation",e)}get endPoint(){return this.layer.endPoint}set endPoint(e){this.layer.endPoint=e}set endPointSurfaceLocation(e){this._set("endPointSurfaceLocation",e)}get measurementSurfaceLocation(){const e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t||"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"}get validMeasurement(){return r(this.layer.startPoint)&&r(this.layer.endPoint)}get isMeasuring(){return!!this.startPoint}reset(){this.clearMeasurement()}clearMeasurement(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation")}finishMeasurement(){if(!this._isOverridden("measurementSurfaceLocation")){const e=this.measurementSurfaceLocation,t="camera-dependent"===e?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":e;this._override("measurementSurfaceLocation",t)}this.state="measured"}};e([o()],a.prototype,"messages",void 0),e([o({constructOnly:!0})],a.prototype,"sceneView",void 0),e([o()],a.prototype,"layer",void 0),e([o()],a.prototype,"startPoint",null),e([o({value:null})],a.prototype,"startPointSurfaceLocation",null),e([o()],a.prototype,"endPoint",null),e([o({value:null})],a.prototype,"endPointSurfaceLocation",null),e([o()],a.prototype,"measurementSurfaceLocation",null),e([o()],a.prototype,"cursorPoint",void 0),e([o()],a.prototype,"state",void 0),e([o()],a.prototype,"active",void 0),e([o({readOnly:!0})],a.prototype,"validMeasurement",null),e([o({readOnly:!0})],a.prototype,"isMeasuring",null),a=e([s("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],a);export{a as DirectLineMeasurement3DModel};
