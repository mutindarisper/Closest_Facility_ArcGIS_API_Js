/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../geometry.js";import e from"../../../../../core/Handles.js";import{unwrap as i,destroyMaybe as s}from"../../../../../core/maybe.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reaction as a}from"../../../../../core/accessorSupport/trackingUtils.js";import{clonePoint as o}from"../../../../../layers/graphics/hydratedFeatures.js";import{screenToMap3D as l,hideManipulatorWhileDragging as c}from"../../editingTools/dragEventPipeline3D.js";import{DirectLineMeasurement3DModel as h}from"./DirectLineMeasurement3DModel.js";import{DirectLineMeasurement3DView as d}from"./DirectLineMeasurement3DView.js";import{PickRequest as m}from"./PickRequest.js";import{PickResult as u}from"./PickResult.js";import p from"../support/measurementUtils.js";import{createManipulatorDragEventPipeline as P,resetProperties as v}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as w}from"../../../../interactive/InteractiveToolBase.js";import{createScreenPointFromEvent as _}from"../../../../support/screenUtils.js";import y from"../../../../../geometry/Point.js";let g=class extends w{constructor(t){super(t),this._handles=new e,this._cachedPickRequest=new m,this._cachedPickResult=new u,this._isAnyPointerDown=!1,this.startManipulator=null,this.endManipulator=null,this.model=new h({sceneView:t.view}),this.measurementView=new d({model:this.model})}initialize(){this.measurementView.when().then((()=>this._initialize()))}_initialize(){const{start:t,end:e}=this.measurementView.createManipulators(),s=(t,e,s)=>P(t,((t,r,n)=>{const a=c(t);r.next(a).next(l(this.view)).next((t=>"start"!==t.action?t:null)).next((i=>{const r=o(i.mapEnd,new y);this.model[e]=r,t.location=r,this.model[s]=this._surfaceLocation(r,i.surfaceType)})),n.next(a).next(v(this.model,[e,s])).next((()=>{t.location=i(this.model[e])}))}));this._handles.add([s(t,"startPoint","startPointSurfaceLocation"),s(e,"endPoint","endPointSurfaceLocation")]),[t,e].forEach((i=>{this._handles.add([i.events.on("grab-changed",(()=>{const i=t.grabbing||e.grabbing;i&&"measured"===this.model.state&&(this.model.state="editing"),i||(this.model.finishMeasurement(),"editing"===this.model.state&&(this.model.state="measured"))}))])})),this.manipulators.add(t),this.manipulators.add(e),this.startManipulator=t,this.endManipulator=e,this._handles.add(a((()=>this.state),(t=>{"measured"===t?this.complete():this.finishToolCreation()}))),"measured"===this.state?this.complete():this.startToolCreation()}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this.model.destroy(),this._set("model",null),this._handles=s(this._handles)}get state(){var t;return null!=(t=this.model)&&t.isMeasuring?"measured"===this.model.state?"measured":"measuring":"ready"}get creating(){return"initial"===this.model.state||"drawing"===this.model.state}get cursor(){var t;return null==(t=this.model)||!t.active||"drawing"!==this.model.state&&"initial"!==this.model.state?null:"crosshair"}get unit(){return this.measurementView.unit}set unit(t){this.measurementView.unit=t}get validMeasurement(){return this.model.validMeasurement}onActivate(){this.model.active=!0}onDeactivate(){this.model.active=!1}onDetach(){this.model.reset()}onShow(){this.measurementView.show(),this.created&&this._updateManipulatorVisibility()}onHide(){this.created&&this.measurementView.hide()}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()}_handlePointerMove(t){this._clearCachedPickRequest();const e=_(t);"mouse"===t.pointerType&&(this._hoverAt(e),"drawing"===this.model.state&&(this.endManipulator.events.emit("drag",{action:"update",start:e,screenPoint:e}),t.stopPropagation()))}_handlePointerDown(){this._isAnyPointerDown=!0}_handlePointerUp(){this._isAnyPointerDown=!1}_handleImmediateClick(t){if(this._clearCachedPickRequest(),!p.isPrimaryPointerAction(t))return;const e=_(t),i=t.pointerType;let s=!1;if(this.model.active)switch(this.model.state){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:e,screenPoint:e}),this.startManipulator.events.emit("drag",{action:"end",start:e,screenPoint:e}),this.model.startPoint&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.model.state="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:e,screenPoint:e}),s=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:e,screenPoint:e}),null!=this.model.endPoint&&(this.endManipulator.events.emit("drag",{action:"end",start:e,screenPoint:e}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.model.finishMeasurement(),s=!0)}s&&t.stopPropagation(),"mouse"===t.pointerType&&this._hoverAt(e)}_hoverAt(t){const e=this._isAnyPointerDown&&"drawing"!==this.model.state&&"editing"!==this.model.state;if(this.measurementView.requiresCursorPoint&&!e){const e=this._pick(t);e.mapPoint&&(this.model.cursorPoint=e.mapPoint)}else this.model.cursorPoint=null}_pick(t){const e=this._cachedPickRequest.screenPoint;return e&&e.x===t.x&&e.y===t.y||(this._cachedPickRequest.screenPoint=t,this._cachedPickResult=this.measurementView.pick(this._cachedPickRequest)),this._cachedPickResult}_clearCachedPickRequest(){this._cachedPickRequest.screenPoint=null}_surfaceLocation(t,e){return 0===e?"on-the-surface":t.z>=this.measurementView.getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorVisibility(){this.startManipulator.available=null!=this.model.startPoint,this.endManipulator.available=null!=this.model.endPoint}};t([r({readOnly:!0})],g.prototype,"state",null),t([r({readOnly:!0})],g.prototype,"creating",null),t([r({readOnly:!0})],g.prototype,"cursor",null),t([r({constructOnly:!0})],g.prototype,"model",void 0),t([r({constructOnly:!0})],g.prototype,"measurementView",void 0),t([r({constructOnly:!0})],g.prototype,"view",void 0),t([r()],g.prototype,"unit",null),t([r({readOnly:!0})],g.prototype,"validMeasurement",null),g=t([n("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],g);var f=g;export{f as default};
