/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{isSome as e,isNone as r}from"../../../../core/maybe.js";import{v as t}from"../../../../chunks/mat4.js";import{f as s}from"../../../../chunks/vec3.js";import{c as o}from"../../../../chunks/vec3f64.js";import{g as i,c}from"../../../../chunks/vec4.js";import{f as a}from"../../../../chunks/vec4f64.js";import{Object3DVisualElement as l}from"./Object3DVisualElement.js";import{Geometry as h}from"../../webgl-engine/lib/Geometry.js";import{CheckerBoardMaterial as n}from"../../webgl-engine/materials/CheckerBoardMaterial.js";class d extends l{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=a(1,.5,0,.5),this._color2=a(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get size(){return this._size}set size(e){this._size=e,this.updateMaterial()}get color1(){return this._color1}set color1(e){i(e,this._color1)||(c(this._color1,e),this.updateMaterial())}get color2(){return this._color2}set color2(e){i(e,this._color2)||(c(this._color2,e),this.updateMaterial())}updateMaterial(){e(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameterValues({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new n({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(r){e(this._checkerBoardMaterial)&&r(this._checkerBoardMaterial)}createGeometries(e){if(r(this._geometry)||r(this._checkerBoardMaterial))return;const i=u;t(i,this.transform);const c=this._geometry,a=[],l=o();c.position.forEach((e=>{s(l,e,i),a.push(l[0],l[1],l[2])}));const n=[];c.uv.forEach((e=>{n.push(e[0],e[1])}));const d=new h([["position",{size:3,data:a,exclusive:!0}],["uv0",{size:2,data:n,exclusive:!0}]],[["position",c.triangleIndices],["uv0",c.triangleIndices]]);e.addGeometry(d,this._checkerBoardMaterial)}geometryChanged(){this.recreateGeometry()}}const u=o();export{d as MeasurementAreaVisualElement};
