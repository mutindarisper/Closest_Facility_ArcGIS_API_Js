/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../Graphic.js";import{isSome as t,isNone as o}from"../../../core/maybe.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/Logger.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{f as s,c as l}from"../../../chunks/vec4f64.js";import{area as n,width as h,height as c}from"../../../geometry/support/aaBoundingRect.js";import{I3SMeshView3D as d}from"./I3SMeshView3D.js";import{LayerView3D as p}from"./LayerView3D.js";import{updatingProgress as y}from"../support/updatingProperties.js";import u from"../../layers/LayerView.js";const g=.2;let v=class extends(d(p(u))){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=1,this._overlayTexOffset=s(-1,-1,-1,-1),this._overlayTexScale=l(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}setDrapingTextures(e){this._clearDrapingTexture(0),this._clearDrapingTexture(1);for(const r of e){const e=r.index,o=r.extent,a=r.needsColorWithoutRasterImage?r.getValidTarget(1):r.hasDrapedFeatureSource?r.getValidTarget(0):null;if(t(a)&&n(o)>0){this._overlayTexOffset[2*e]=-o[0]/h(o),this._overlayTexOffset[2*e+1]=-o[1]/c(o),this._overlayTexScale[2*e]=1/h(o),this._overlayTexScale[2*e+1]=1/c(o);const t=r.getValidTarget(2),i=r.getValidTarget(3);this._overlayColor=a.getTexture(),this._overlayHighlight=t?t.getTexture():null,this._overlayNormal=i?i.getTexture():null}}this._forAllNodes((e=>t(e)&&this._collection.updateMaterial(e.objectHandle,(e=>this._updateMaterialOverlay(e)))))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(this.layer,"modifications",(()=>this._loadModifications()),2)}_createLayerGraphic(){const e=new r;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),o(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(e,(()=>this._modifications=e.toArray()),2),"modifications")}};e([a()],v.prototype,"layer",void 0),e([a({aliasOf:"layer"})],v.prototype,"i3slayer",void 0),e([a()],v.prototype,"suspended",void 0),e([a(y)],v.prototype,"updatingProgress",void 0),e([a({readOnly:!0,aliasOf:"_controller.updatingProgress"})],v.prototype,"updatingProgressValue",void 0),e([a({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],v.prototype,"lodFactor",void 0),e([a({readOnly:!0})],v.prototype,"progressiveLoadFactor",null),v=e([i("esri.views.3d.layers.SceneLayerView3D")],v);var f=v;export{f as default};
