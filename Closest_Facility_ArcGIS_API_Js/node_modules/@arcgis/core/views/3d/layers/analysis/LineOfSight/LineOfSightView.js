/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import i from"../../../../../Color.js";import t from"../../../../../core/Accessor.js";import o from"../../../../../core/Handles.js";import{makeHandle as n,handlesGroup as s}from"../../../../../core/handleUtils.js";import{applyOpacity as l}from"../../../../../core/mathUtils.js";import{removeMaybe as r,destroyMaybe as a}from"../../../../../core/maybe.js";import{property as c}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/Logger.js";import{subclass as u}from"../../../../../core/accessorSupport/decorators/subclass.js";import{reactionInit as d,reaction as m}from"../../../../../core/accessorSupport/trackingUtils.js";import{c as h}from"../../../../../chunks/mat4f64.js";import{f as p}from"../../../../../chunks/vec3.js";import{d as y,c as f}from"../../../../../chunks/vec3f64.js";import{LineVisualElement as v}from"../../../interactive/visualElements/LineVisualElement.js";let V=class extends t{constructor(e){super(e),this._handle=null,this._analysisHandles=new o}initialize(){this._handle=this._connectAnalyses()}destroy(){this._handle=r(this._handle),this._analysisHandles=a(this._analysisHandles)}get visible(){return this.layerView.visible&&!this.layerView.suspended}get _analyses(){return this.layerView.layerViewData.analyses}get _configuration(){return this.layerView.layerViewData.configuration}get _opacity(){return this.layerView.fullOpacity}createLineOfSightVisualization(){const e=this._configuration,t=this._opacity,o={view:this.view,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},n=i.toUnitRGBA(e.visibleOuterColor);l(n,n,t);const s=i.toUnitRGBA(e.visibleInnerColor);l(s,s,t);const r=i.toUnitRGBA(e.occludedOuterColor);l(r,r,t);const a=i.toUnitRGBA(e.occludedInnerColor);l(a,a,t);const c=i.toUnitRGBA(e.undefinedOuterColor);l(c,c,t);const u=i.toUnitRGBA(e.undefinedInnerColor);l(u,u,t);return{visibleLineVisualElement:new v({...o,color:n,innerColor:s}),occludedLineVisualElement:new v({...o,color:r,innerColor:a}),undefinedLineVisualElement:new v({...o,color:c,innerColor:u})}}destroyLineOfSightVisualization(e){e.visibleLineVisualElement=a(e.visibleLineVisualElement),e.occludedLineVisualElement=a(e.occludedLineVisualElement),e.undefinedLineVisualElement=a(e.undefinedLineVisualElement)}updateLineOfSightVisualization(e,t){const o=this.visible,n=this._configuration,{computationResult:s,inputPoints:r}=e,{start:a,end:c,intersection:u,isValid:d,isTargetVisible:m}=s,{observer:h}=r,f=C;f[12]=h[0],f[13]=h[1],f[14]=h[2];const v=p(g,a,h),V=p(_,c,h),L=p(b,u,h),{visibleLineVisualElement:O,occludedLineVisualElement:A,undefinedLineVisualElement:E}=t;if(!o)return O.visible=!1,A.visible=!1,void(E.visible=!1);if(O.visible=!0,A.visible=!0,E.visible=!0,O.geometry=null,A.geometry=null,E.geometry=null,d)if(m){O.geometry=[[y(v),y(V)]],O.transform=f;const e=i.toUnitRGBA(n.visibleOuterColor);O.color=l(e,e,this._opacity)}else{O.geometry=[[y(v),y(L)]],O.transform=f;const e=i.toUnitRGBA(n.occludedOuterColor);O.color=l(e,e,this._opacity),A.geometry=[[y(L),y(V)]],A.transform=f}else E.geometry=[[y(v),y(V)]],E.transform=f}updateVisualizationOpacity(e,t){const o=this._configuration,n=this._opacity,s=i.toUnitRGBA(o.visibleOuterColor);l(s,s,n);const r=i.toUnitRGBA(o.visibleInnerColor);l(r,r,n);const a=i.toUnitRGBA(o.occludedOuterColor);l(a,a,n);const c=i.toUnitRGBA(o.occludedInnerColor);l(c,c,n);const u=i.toUnitRGBA(o.undefinedOuterColor);l(u,u,n);const d=i.toUnitRGBA(o.undefinedInnerColor);l(d,d,n),t.visibleLineVisualElement.color=e.computationResult.isTargetVisible?s:a,t.visibleLineVisualElement.innerColor=r,t.occludedLineVisualElement.color=a,t.occludedLineVisualElement.innerColor=c,t.undefinedLineVisualElement.color=u,t.undefinedLineVisualElement.innerColor=d}getLineOfSightVisualizationDependencies(e){const{computationResult:i}=e,{occludedOuterColor:t,visibleOuterColor:o}=this._configuration;return{computationResult:i,occludedOuterColor:t,visibleOuterColor:o,visible:this.visible}}_connectAnalysis(e){const i=this._analysisHandles;if(i.has(e))return;const t=this.createLineOfSightVisualization();i.add([d((()=>this.getLineOfSightVisualizationDependencies(e)),(()=>this.updateLineOfSightVisualization(e,t))),m((()=>this._opacity),(()=>this.updateVisualizationOpacity(e,t))),n((()=>this.destroyLineOfSightVisualization(t)))],e)}_disconnectAnalysis(e){this._analysisHandles.remove(e)}_connectAnalyses(){let e=null;return s([d((()=>this._analyses),(i=>{e=r(e),e=i.on("change",(e=>this._onAnalysesCollectionChange(e))),this._onAnalysesCollectionChange({target:i,added:i.items,removed:[],moved:[]})})),n((()=>e=r(e)))])}_onAnalysesCollectionChange(e){e.added.forEach((e=>this._connectAnalysis(e))),e.removed.forEach((e=>this._disconnectAnalysis(e)))}};e([c({constructOnly:!0})],V.prototype,"layer",void 0),e([c({constructOnly:!0})],V.prototype,"layerView",void 0),e([c({constructOnly:!0})],V.prototype,"view",void 0),e([c({readOnly:!0})],V.prototype,"visible",null),e([c()],V.prototype,"_analyses",null),e([c()],V.prototype,"_configuration",null),e([c()],V.prototype,"_opacity",null),V=e([u("esri.views.3d.layers.analysis.LineOfSight.LineOfSightView")],V);const g=f(),_=f(),b=f(),C=h();export{V as LineOfSightView};
