/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{adjustStaticAGOUrl as e}from"../../../../core/devEnvironmentUtils.js";import{get as t,isSome as r,isNone as s}from"../../../../core/maybe.js";import{a as o}from"../../../../chunks/mat3.js";import{c as i}from"../../../../chunks/mat3f64.js";import{b as a}from"../../../../chunks/mat4.js";import{c as u}from"../../../../chunks/mat4f64.js";import{m as n,f as l,E as c,l as m,n as d,e as f}from"../../../../chunks/vec3.js";import{c as p}from"../../../../chunks/vec3f64.js";import{empty as x,expandWithVec3 as g}from"../../../../geometry/support/aaBoundingBox.js";import{BufferViewVec3f as h,BufferViewVec4f as b,BufferViewVec2f as v,BufferViewVec4u8 as R,BufferViewVec4u16 as y,BufferViewVec3u8 as B,BufferViewVec3u16 as M}from"../../../../geometry/support/buffer/BufferView.js";import{t as w,a as j,s as C}from"../../../../chunks/vec32.js";import{t as E,s as T}from"../../../../chunks/vec42.js";import{createBuffer as S}from"../../../../geometry/support/buffer/utils.js";import{DefaultLoadingContext as O}from"../../glTF/DefaultLoadingContext.js";import{load as F}from"../../glTF/loader.js";import{triangleFanToTriangles as A,triangleStripToTriangles as I,trianglesToTriangles as k}from"../../glTF/internal/indexUtils.js";import{load as L,processLoadResult as N}from"./wosrLoader.js";import{Geometry as P}from"../../webgl-engine/lib/Geometry.js";import{Texture as _}from"../../webgl-engine/lib/Texture.js";import{DefaultMaterial as z}from"../../webgl-engine/materials/DefaultMaterial.js";import{COLOR_GAMMA as D}from"../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA.js";import{n as V}from"../../../../chunks/vec22.js";import{c as W,f as G}from"../../../../chunks/vec43.js";import{c as U}from"../../../../chunks/vec33.js";async function $(s,o){const i=q(e(s));if("wosr"===i.fileType){const e=await(o.cache?o.cache.loadWOSR(i.url,o):L(i.url,o)),t=N(e,o);return{lods:[t],referenceBoundingBox:t.boundingBox,isEsriSymbolResource:!1,isWosr:!0,remove:e.remove}}const a=await(o.cache?o.cache.loadGLTF(i.url,o,o.usePBR):F(new O(o.streamDataRequester),i.url,o,o.usePBR)),u=t(a.model.meta,"ESRI_proxyEllipsoid");a.meta.isEsriSymbolResource&&r(u)&&-1!==a.meta.uri.indexOf("/RealisticTrees/")&&J(a,u);const n=a.meta.isEsriSymbolResource?{usePBR:o.usePBR,isSchematic:!1,treeRendering:a.customMeta.esriTreeRendering,mrrFactors:[0,1,.2]}:{usePBR:o.usePBR,isSchematic:!1,mrrFactors:[0,1,.5]},l={...o.materialParamsMixin,treeRendering:a.customMeta.esriTreeRendering};if(null!=i.specifiedLodIndex){const e=K(a,n,l,i.specifiedLodIndex);let t=e[0].boundingBox;if(0!==i.specifiedLodIndex){t=K(a,n,l,0)[0].boundingBox}return{lods:e,referenceBoundingBox:t,isEsriSymbolResource:a.meta.isEsriSymbolResource,isWosr:!1,remove:a.remove}}const c=K(a,n,l);return{lods:c,referenceBoundingBox:c[0].boundingBox,isEsriSymbolResource:a.meta.isEsriSymbolResource,isWosr:!1,remove:a.remove}}function q(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function K(e,t,s,a){const u=e.model,n=i(),l=new Array,c=new Map,m=new Map;return u.lods.forEach(((e,i)=>{if(void 0!==a&&i!==a)return;const d={name:e.name,stageResources:{textures:new Array,materials:new Array,geometries:new Array},lodThreshold:r(e.lodThreshold)?e.lodThreshold:null,pivotOffset:[0,0,0],numberOfVertices:0,boundingBox:x()};l.push(d),e.parts.forEach((e=>{const i=e.material+(e.attributes.normal?"_normal":"")+(e.attributes.color?"_color":"")+(e.attributes.texCoord0?"_texCoord0":"")+(e.attributes.tangent?"_tangent":""),a=u.materials.get(e.material),l=r(e.attributes.texCoord0),f=r(e.attributes.normal),p=Q(a.alphaMode);if(!c.has(i)){if(l){if(r(a.textureColor)&&!m.has(a.textureColor)){const e=u.textures.get(a.textureColor),t={...e.parameters,preMultiplyAlpha:1!==p};m.set(a.textureColor,new _(e.data,t))}if(r(a.textureNormal)&&!m.has(a.textureNormal)){const e=u.textures.get(a.textureNormal);m.set(a.textureNormal,new _(e.data,e.parameters))}if(r(a.textureOcclusion)&&!m.has(a.textureOcclusion)){const e=u.textures.get(a.textureOcclusion);m.set(a.textureOcclusion,new _(e.data,e.parameters))}if(r(a.textureEmissive)&&!m.has(a.textureEmissive)){const e=u.textures.get(a.textureEmissive);m.set(a.textureEmissive,new _(e.data,e.parameters))}if(r(a.textureMetallicRoughness)&&!m.has(a.textureMetallicRoughness)){const e=u.textures.get(a.textureMetallicRoughness);m.set(a.textureMetallicRoughness,new _(e.data,e.parameters))}}const o=a.color[0]**(1/D),n=a.color[1]**(1/D),d=a.color[2]**(1/D),x=a.emissiveFactor[0]**(1/D),g=a.emissiveFactor[1]**(1/D),h=a.emissiveFactor[2]**(1/D),b=r(a.textureColor)&&l?m.get(a.textureColor):null;c.set(i,new z({...t,transparent:0===p,textureAlphaMode:p,textureAlphaCutoff:a.alphaCutoff,diffuse:[o,n,d],ambient:[o,n,d],opacity:a.opacity,doubleSided:a.doubleSided,doubleSidedType:"winding-order",cullFace:a.doubleSided?0:2,vertexColors:!!e.attributes.color,vertexTangents:!!e.attributes.tangent,normals:f?"default":"screenDerivative",castShadows:!0,receiveSSAO:!0,textureId:r(b)?b.id:void 0,colorMixMode:a.colorMixMode,normalTextureId:r(a.textureNormal)&&l?m.get(a.textureNormal).id:void 0,textureAlphaPremultiplied:r(b)&&!!b.params.preMultiplyAlpha,occlusionTextureId:r(a.textureOcclusion)&&l?m.get(a.textureOcclusion).id:void 0,emissiveTextureId:r(a.textureEmissive)&&l?m.get(a.textureEmissive).id:void 0,metallicRoughnessTextureId:r(a.textureMetallicRoughness)&&l?m.get(a.textureMetallicRoughness).id:void 0,emissiveFactor:[x,g,h],mrrFactors:[a.metallicFactor,a.roughnessFactor,t.mrrFactors[2]],isSchematic:!1,...s}))}const x=H(e.indices||e.attributes.position.count,e.primitiveType),O=e.attributes.position.count,F=S(h,O);w(F,e.attributes.position,e.transform);const A=[["position",{data:F.typedBuffer,size:F.elementCount,exclusive:!0}]],I=[["position",x]];if(r(e.attributes.normal)){const t=S(h,O);o(n,e.transform),j(t,e.attributes.normal,n),A.push(["normal",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),I.push(["normal",x])}if(r(e.attributes.tangent)){const t=S(b,O);o(n,e.transform),E(t,e.attributes.tangent,n),A.push(["tangent",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),I.push(["tangent",x])}if(r(e.attributes.texCoord0)){const t=S(v,O);V(t,e.attributes.texCoord0),A.push(["uv0",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),I.push(["uv0",x])}if(r(e.attributes.color)){const t=S(R,O);if(4===e.attributes.color.elementCount)e.attributes.color instanceof b?T(t,e.attributes.color,255):e.attributes.color instanceof R?W(t,e.attributes.color):e.attributes.color instanceof y&&T(t,e.attributes.color,1/256);else{G(t,255,255,255,255);const r=new B(t.buffer,0,4);e.attributes.color instanceof h?C(r,e.attributes.color,255):e.attributes.color instanceof B?U(r,e.attributes.color):e.attributes.color instanceof M&&C(r,e.attributes.color,1/256)}A.push(["color",{data:t.typedBuffer,size:t.elementCount,exclusive:!0}]),I.push(["color",x])}const k=new P(A,I);d.stageResources.geometries.push(k),d.stageResources.materials.push(c.get(i)),l&&(r(a.textureColor)&&d.stageResources.textures.push(m.get(a.textureColor)),r(a.textureNormal)&&d.stageResources.textures.push(m.get(a.textureNormal)),r(a.textureOcclusion)&&d.stageResources.textures.push(m.get(a.textureOcclusion)),r(a.textureEmissive)&&d.stageResources.textures.push(m.get(a.textureEmissive)),r(a.textureMetallicRoughness)&&d.stageResources.textures.push(m.get(a.textureMetallicRoughness))),d.numberOfVertices+=O;const L=k.boundingInfo;r(L)&&(g(d.boundingBox,L.getBBMin()),g(d.boundingBox,L.getBBMax()))}))})),l}function Q(e){switch(e){case"BLEND":return 0;case"MASK":return 2;case"OPAQUE":case null:case void 0:return 1}}function H(e,t){switch(t){case 4:return k(e);case 5:return I(e);case 6:return A(e)}}function J(e,t){for(let r=0;r<e.model.lods.length;++r){const o=e.model.lods[r];e.customMeta.esriTreeRendering=!0;for(const i of o.parts){const o=i.attributes.normal;if(s(o))return;const x=i.attributes.position,g=x.count,b=p(),v=p(),y=p(),B=S(R,g),M=S(h,g),w=a(u(),i.transform);for(let s=0;s<g;s++){x.getVec(s,v),o.getVec(s,b),n(v,v,i.transform),l(y,v,t.center),c(y,y,t.radius);const a=y[2],u=m(y),p=Math.min(.45+.55*u*u,1);c(y,y,t.radius),n(y,y,w),d(y,y),r+1!==e.model.lods.length&&e.model.lods.length>1&&f(y,y,b,a>-1?.2:Math.min(-4*a-3.8,1)),M.setVec(s,y),B.set(s,0,255*p),B.set(s,1,255*p),B.set(s,2,255*p),B.set(s,3,255)}i.attributes.normal=M,i.attributes.color=B}}}export{$ as fetch,K as gltfToEngineResources,q as parseUrl};
