/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{createScreenPointArray as e,createRenderScreenPointArray3 as t}from"../../../../core/screenUtils.js";import{a as i,b as s}from"../../../../chunks/vec3.js";import{c as r}from"../../../../chunks/vec3f64.js";import{create as o,fromValues as n,distance as a,empty as c,expandPointInPlace as l,expand as h}from"../../../../geometry/support/aaBoundingRect.js";import{signedDistance as m,normal as u}from"../../../../geometry/support/plane.js";import{areaPoints2d as p}from"../../../../geometry/support/triangle.js";import{FeatureTileVisibility3D as d}from"./FeatureTileVisibility3D.js";import f from"../../webgl-engine/lib/Camera.js";class S{constructor(e){this.camera=new f,this.focusOnMap=[0,0],this.screenRect=o(),this.tileSize=e.tileSize,this.renderCoordsHelper=e.renderCoordsHelper,this.tilingScheme=e.tilingScheme,this.visibility=new d(e.renderCoordsHelper)}begin(e,t,i){this.camera.copyFrom(e),this.surfaceElevation=i,this.focusOnMap[0]=t.x,this.focusOnMap[1]=t.y,n(0,0,e.fullWidth,e.fullHeight,this.screenRect),this.visibility.begin(this.camera,i)}end(){this.visibility.end()}updateTile(e){e.measures.visibility=this.visibility.calculate(e),e.measures.distance=a(e.extent,this.focusOnMap),0!==e.measures.visibility&&this.updateScreenMeasure(e)}updateScreenMeasure(e){const t=g,i=1<<t,s=e.measures.screenRect;c(s);let r=0;const o=e.lij[0]+t,n=e.lij[1]<<t,a=e.lij[2]<<t,l=this.tileSizeWithBias(e),h=l*l;for(let c=0;c<i;c++)for(let t=0;t<i;t++)if(r+=this.computeScreenArea(e,o,n+c,a+t,s),r>h)return void(e.measures.shouldSplit=!0);e.measures.shouldSplit=!1}tileSizeWithBias(e){return 1===e.measures.visibility?this.tileSize*b:this.tileSize}computeScreenArea(e,t,i,s,r){const o=1===e.measures.visibility;this.projectToScreen(t,i,s,o,y),c(j);for(let n=0;n<4;n++)l(j,y[n]);return h(r,j,r),p(y[0],y[1],y[2])+p(y[0],y[2],y[3])}projectToScreen(e,t,i,s,r){this.tilingScheme.ensureMaxLod(e),this.tilingScheme.getExtent(e,t,i,v),this.toRenderCoords(v,0,3,C[0]),this.toRenderCoords(v,2,3,C[1]),this.toRenderCoords(v,2,1,C[2]),this.toRenderCoords(v,0,1,C[3]),s&&(this.projectToPlane(C,this.camera.frustum[4]),this.projectToPlane(C,this.camera.frustum[3]),this.projectToPlane(C,this.camera.frustum[2]));for(let o=0;o<4;o++)this.camera.projectToRenderScreen(C[o],M),this.camera.renderToScreen(M,r[o])}projectToPlane(e,t){for(let i=0;i<4;i++)T[i]=m(t,e[i]);const r=Math.max(T[0],T[1],T[2],T[3]);if(r>0){const o=i(R,u(t),-r);for(let t=0;t<4;t++)s(e[t],e[t],o)}}toRenderCoords(e,t,i,s){return R[0]=e[t],R[1]=e[i],R[2]=this.surfaceElevation,this.renderCoordsHelper.toRenderCoords(R,this.tilingScheme.spatialReference,s),s}}const j=o(),g=2,b=5,y=[e(),e(),e(),e()],v=o(),R=r(),C=[r(),r(),r(),r()],T=[0,0,0,0],M=t();export{S as FeatureTileMeasurements3D,S as default};
