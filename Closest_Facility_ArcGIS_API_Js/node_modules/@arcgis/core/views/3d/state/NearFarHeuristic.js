/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{lerp as e,clamp as t}from"../../../core/mathUtils.js";import{isSome as i}from"../../../core/maybe.js";import{getMetersPerUnitForSR as r}from"../../../core/unitUtils.js";import{f as n,n as s,d as a,l as m}from"../../../chunks/vec3.js";import{c as o}from"../../../chunks/vec3f64.js";import h from"../../../geometry/Extent.js";import{getReferenceEllipsoid as x}from"../../../geometry/projectionEllipsoid.js";function c(e,t,i){return 1===e?new u(i):new l(t,i)}class l{constructor(e,t){this.elevationProvider=e,this._referenceEllipsoid=x(t),this.unitInMeters=r(t,this._referenceEllipsoid.metersPerDegree)}compute(r,m,o,x,c){c||(c={near:0,far:0});let l=r[2]*this.unitInMeters;const u=l,p=l-x,j=this.elevationProvider?this.elevationProvider.elevationBounds:null;j&&(l=p>=0?u-this.unitInMeters*j.min:this.unitInMeters*j.max-u);const E={x:(o=i(o)?o:new h({xmin:0,ymin:0,zmin:0,xmax:0,ymax:0,zmax:0})).xmax-o.xmin,y:o.ymax-o.ymin,z:4*Math.max(o.xmax-o.xmin,o.ymax-o.ymin)},_=Math.max(E.x,E.y,E.z);n(I,m,r),v[0]=I[0]>0?o.xmax:o.xmin,v[1]=I[1]>0?o.ymax:o.ymin,v[2]=I[2]>0?_/2:-_/2,n(v,v,r),s(I,I);const g=1.1*a(v,I)*this.unitInMeters,b=Math.sqrt(l*(l+2*this._referenceEllipsoid.radius)),z=Math.max(o.xmax-o.xmin,o.ymax-o.ymin),P=z*d*this.unitInMeters,w=z*y*this.unitInMeters;let k=t((l-w)/(P-w),0,1);k*=k*k;let q=e(b,g,k);return q*=Math.max(Math.log(Math.abs(p)),1),q=Math.min(q,Math.max(34064e4,_)),q/=this.unitInMeters,M(q,f,this.unitInMeters,c)}}class u{constructor(e){this._referenceEllipsoid=x(e)}compute(e,i,r,n,s){s||(s={near:0,far:0});const a=m(e)-this._referenceEllipsoid.radius,o=this._referenceEllipsoid.radius+Math.min(0,n),h=Math.abs(a-n),x=Math.max(h,Math.abs(a));return M(1.2*Math.sqrt(x*(x+2*o)),t(2e4-(Math.log(x)-7.983)/9.011*19e3,1e3,2e4),1,s)}}function M(e,t,i,r){const n=p/i;return e/t>n?(r.far=e,r.near=r.far/t):(r.near=n,r.far=r.near*t),r}const f=2e4,p=2,d=.001,y=1e-4,v=o(),I=o();export{c as createNearFarHeuristic};
