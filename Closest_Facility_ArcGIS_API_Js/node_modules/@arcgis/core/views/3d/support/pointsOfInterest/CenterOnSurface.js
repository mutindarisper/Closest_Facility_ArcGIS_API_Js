/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{clamp as e}from"../../../../core/mathUtils.js";import{isSome as r}from"../../../../core/maybe.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/Logger.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{g as o,i as a,a as c,b as n,k as u,p as l}from"../../../../chunks/vec3.js";import{c as d}from"../../../../chunks/vec3f64.js";import p from"../../../../geometry/Point.js";import{projectBoundingRect as h}from"../../../../geometry/projection.js";import{getReferenceEllipsoid as f}from"../../../../geometry/projectionEllipsoid.js";import{create as m}from"../../../../geometry/support/aaBoundingRect.js";import _ from"../debugFlags.js";import{PropertiesPool as S}from"../PropertiesPool.js";import{PointOfInterest as y}from"./PointOfInterest.js";const g=Array;let A=class extends y{constructor(t){super(t),this._propertiesPool=new S({location:p,renderLocation:g},this),this._currentSurfaceAltitude=0,this._latestSurfaceAltitude=0,this.cameraName="camera",this.distance=0,this.renderLocation=d(),this.updating=!1}initialize(){this._frameWorker=this.scheduler.registerTask(this.task,this),this.runTask()}destroy(){this._frameWorker&&(this._frameWorker.remove(),this._frameWorker=null),this._propertiesPool.destroy(),this._propertiesPool=null}get _camera(){return this.state[this.cameraName]}get location(){const t=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,t,this.state.spatialReference),t}updateRenderLocation(){this.updating=!0,this._updateRenderLocation()}get estimatedSurfaceAltitude(){return this._latestSurfaceAltitude}get running(){return this.updating}runTask(){this._latestSurfaceAltitude=this.estimateSurfaceAltitudeAtCenter(),this._updateRenderLocation(),this.updating=!1}_updateRenderLocation(){const t=v;let e=this.calculateSurfaceIntersection(this._currentSurfaceAltitude,t);const r=this._currentSurfaceAltitude!==this._latestSurfaceAltitude;!e&&r&&(e=this.calculateSurfaceIntersection(this._latestSurfaceAltitude,t),e&&(this._currentSurfaceAltitude=this._latestSurfaceAltitude));const s=L;e&&this.latestSurfaceAltitudeChangesDistanceSignificantly(t,s)&&(o(t,s),this._currentSurfaceAltitude=this._latestSurfaceAltitude),e?this.distance=a(this._camera.eye,t):(c(t,this._camera.viewForward,this._get("distance")),n(t,t,this._camera.eye)),u(this._get("renderLocation"),t)||this._set("renderLocation",o(this._propertiesPool.get("renderLocation"),t))}calculateSurfaceIntersection(t,s){const i=this._camera;if(!this.renderCoordsHelper.intersectManifold(i.ray,t,s))return!1;if(this.state.isGlobal){const e=f(this.renderCoordsHelper.spatialReference).radius,r=e+t,o=l(i.eye),u=o<r*r,d=a(i.eye,s);if(u&&d>e/4){const t=r-Math.sqrt(o);return c(s,i.viewForward,t),n(s,s,i.eye),!0}}else{const t=this.surface.ready?this.surface.extent:null;r(t)&&h(t,this.surface.spatialReference,k,this.renderCoordsHelper.spatialReference)&&(s[0]=e(s[0],k[0],k[2]),s[1]=e(s[1],k[1],k[3]))}return!0}latestSurfaceAltitudeChangesDistanceSignificantly(t,e){if(this._latestSurfaceAltitude===this._currentSurfaceAltitude||null==t)return!1;if(this.calculateSurfaceIntersection(this._latestSurfaceAltitude,e)){if(_.TESTS_DISABLE_UPDATE_THRESHOLDS)return!0;const r=this._camera.eye,s=a(r,t),i=a(r,e);if(Math.abs(i-s)/s>j)return!0}return!1}};t([s({constructOnly:!0})],A.prototype,"scheduler",void 0),t([s({constructOnly:!0})],A.prototype,"task",void 0),t([s({constructOnly:!0})],A.prototype,"cameraName",void 0),t([s()],A.prototype,"distance",void 0),t([s({constructOnly:!0})],A.prototype,"estimateSurfaceAltitudeAtCenter",void 0),t([s({readOnly:!0})],A.prototype,"location",null),t([s({readOnly:!0})],A.prototype,"renderLocation",void 0),t([s()],A.prototype,"updating",void 0),A=t([i("esri.views.3d.support.CenterOnSurface")],A);const j=.05,v=d(),L=d(),k=m();var R=A;export{A as CenterOnSurface,R as default};
