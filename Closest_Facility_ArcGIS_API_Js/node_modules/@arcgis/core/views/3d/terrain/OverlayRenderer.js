/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import t from"../../../core/Evented.js";import s from"../../../core/Handles.js";import i from"../../../core/Logger.js";import{someMap as a}from"../../../core/MapUtils.js";import{releaseMaybe as n,disposeMaybe as o,isSome as h,unwrapOr as l,isNone as d,unwrap as u}from"../../../core/maybe.js";import c from"../../../core/PooledArray.js";import{someSet as p}from"../../../core/SetUtils.js";import{init as g}from"../../../core/watchUtils.js";import{property as y}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as m}from"../../../core/accessorSupport/decorators/subclass.js";import{p as _,i as f,t as R}from"../../../chunks/mat4.js";import{a as T}from"../../../chunks/vec2f64.js";import{f as w,c as b}from"../../../chunks/vec3f64.js";import v from"../support/debugFlags.js";import{Overlay as x}from"./Overlay.js";import{OverlayFramebufferObject as O}from"./OverlayFramebufferObject.js";import{OverlayRenderTarget as j}from"./OverlayRenderTarget.js";import{ShaderTechniqueRepository as S}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository.js";import{autoDispose as C,AutoDisposableMixin as L}from"../webgl-engine/lib/AutoDisposable.js";import P from"../webgl-engine/lib/Camera.js";import G from"../webgl-engine/lib/GLMaterialRep.js";import{createEmptyDepthTexture as V,createQuadVAO as D}from"../webgl-engine/lib/glUtil3D.js";import{GridLocalOriginFactory as E}from"../webgl-engine/lib/GridLocalOriginFactory.js";import{IntersectorResult as M}from"../webgl-engine/lib/intersectorUtils.js";import{OverlayRenderContext as U}from"../webgl-engine/lib/RenderContext.js";import{SortedRenderGeometryRenderer as q}from"../webgl-engine/lib/SortedRenderGeometryRenderer.js";import{TextureTechniqueConfiguration as A,TextureTechnique as F}from"../webgl-engine/lib/TextureTechnique.js";import{AmbientLight as W}from"../webgl-engine/lighting/Lightsources.js";import{SceneLighting as H}from"../webgl-engine/lighting/SceneLighting.js";import{StippleTextureRepository as B}from"../webgl-engine/materials/StippleTextureRepository.js";import{TaskPriority as k,noBudget as z}from"../../support/Scheduler.js";import I from"../../webgl/Texture.js";import{vertexCount as X}from"../../webgl/Util.js";const Y=i.getLogger("esri.views.3d.webgl-engine.lib.OverlayRenderer");let J=class extends(L(r)){constructor(e){super(e),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._lighting=new H,this._handles=new s,this._layerRenderers=new Map,this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers=new c,this._geometries=new Map,this.worldToPCSRatio=1,this.events=new t,this.longitudeCyclical=null}initialize(){const e=this.view._stage.renderView;this._rctx=e.renderingContext,this._renderContext=new U(this._rctx);const r=e.waterTextureRepository;this._stippleTextureRepository=new B(e.renderingContext),this._shaderTechniqueRepository=new S({rctx:this._rctx,viewingMode:2,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:r}),this._handles.add([g(r,"loadingState",(()=>this.events.emit("content-changed"))),g(this,"spatialReference",(e=>this._localOrigins=new E(e)))]),this._materialRepository=new G(e.textureRepository,this._shaderTechniqueRepository),this._materialRepository.onMaterialChanged=e=>{(e.renderOccluded&re)>0!==this._rendersOccluded&&this.updateRendersOccluded(),this.events.emit("content-changed"),this.notifyChange("updating")},this._lighting.groundLightingFactor=1,this._lighting.globalFactor=0,this._lighting.set([new W(w(1,1,1))]),this._bindParameters={slot:23,highlightDepthTexture:V(this._rctx),camera:Q,inverseViewport:T(),origin:null,screenToWorldRatio:null,screenToPCSRatio:null,shadowMappingEnabled:!1,slicePlane:null,ssaoEnabled:!1,hasOccludees:!1,linearDepthTexture:null,lastFrameColorTexture:null,reprojectionMat:null,ssrEnabled:!1,lighting:this._lighting,transparencyPassType:3,terrainLinearDepthTexture:null,geometryLinearDepthTexture:null,multipassTerrainEnabled:!1,cullAboveGround:!1,multipassGeometryEnabled:!1,highlightColorTexture:null},this._handles.add(this.view.resourceController.scheduler.registerTask(k.STAGE,this))}dispose(){this._handles.destroy(),this._layerRenderers.forEach((e=>e.dispose())),this._layerRenderers.clear(),this._debugTextureTechnique=n(this._debugTextureTechnique),this._debugPatternTexture=o(this._debugPatternTexture),this._bindParameters.highlightDepthTexture=o(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=o(this._shaderTechniqueRepository),this._temporaryFBO=o(this._temporaryFBO),this._quadVAO=o(this._quadVAO),this.disposeOverlays()}get updating(){return this._sortedLayerRenderersDirty||a(this._layerRenderers,(e=>e.updating))}get hasOverlays(){return h(this._overlays)&&h(this._overlayRenderTarget)}get gpuMemoryUsage(){return h(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}collectUnusedRenderTargetMemory(e){let r=!1;if(h(this._overlayRenderTarget))for(const t of this._overlayRenderTarget.renderTargets){const s=this.overlays[0].validTargets[t.type]||!this.overlays[1].validTargets[t.type];r=this._overlayRenderTarget.validateUsageForTarget(s,t,e)||r}return r}get overlays(){return l(this._overlays,[])}ensureDrapeTargets(e){h(this._overlays)&&this._overlays.forEach((r=>{r.hasTargetWithoutRasterImage=p(e,(e=>1===e.drapeTargetType))}))}ensureDrapeSources(e){h(this._overlays)&&this._overlays.forEach((r=>{r.hasDrapedFeatureSource=a(e,((e,r)=>1===r.drapeSourceType)),r.hasDrapedRasterSource=a(e,((e,r)=>0===r.drapeSourceType))}))}ensureOverlays(e,r){d(this._overlays)&&(this._overlayRenderTarget=new j(this._rctx),this._overlays=[new x(0,this._overlayRenderTarget),new x(1,this._overlayRenderTarget)]),this.ensureDrapeTargets(e),this.ensureDrapeSources(r)}disposeOverlays(){this._overlays=null,this._overlayRenderTarget=o(this._overlayRenderTarget),this.events.emit("textures-disposed")}get running(){return this.updating}runTask(e,r=(()=>!0)){let t=!1;for(const[s,i]of this._layerRenderers){if(e.done)break;r(s)&&(i.commitChanges()&&(t=!0,e.madeProgress()),i.isEmpty&&(this._sortedLayerRenderersDirty=!0,this._layerRenderers.delete(s),this._handles.remove(s)))}this._sortedLayerRenderersDirty&&(this.updateSortedLayerRenderers(),t=!0),t&&(h(this._overlays)&&0===this._layerRenderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.events.emit("content-changed"),this.updateHasHighlights(),this.updateRendersOccluded(),this.updateHasWater())}processSyncLayers(){this.runTask(z,(e=>1===e.updatePolicy))}addGeometries(e,r,t){for(const s of e)d(s.origin)&&(s.origin=this._localOrigins.getOrigin(s.boundingSphere)),this._geometries.set(s.id,s);this.ensureLayerRenderer(r).add(e),2===t&&this.notifyGraphicGeometryChanged(e,r)}removeGeometries(e,r,t){for(const i of e)this._geometries.delete(u(i.id));const s=this._layerRenderers.get(r);s&&(s.remove(e),2===t&&this.notifyGraphicGeometryChanged(e,r))}updateGeometries(e,r,t){const s=this._layerRenderers.get(r);if(s)switch(s.modify(e,t),t){case 4:case 2:return this.notifyGraphicGeometryChanged(e,r);case 1:return this.notifyGraphicVisibilityChanged(e,r)}else Y.warn("Attempted to update geometry for nonexistent layer")}notifyGraphicGeometryChanged(e,r){if(d(r.notifyGraphicGeometryChanged))return;let t;for(const s of e){const e=s.graphicUid;h(e)&&e!==t&&(r.notifyGraphicGeometryChanged(e),t=e)}}notifyGraphicVisibilityChanged(e,r){if(d(r.notifyGraphicVisibilityChanged))return;let t;for(const s of e){const e=s.graphicUid;h(e)&&e!==t&&(r.notifyGraphicVisibilityChanged(e),t=e)}}updateHighlights(e,r){const t=this._layerRenderers.get(r);t?t.modify(e,8):Y.warn("Attempted to update highlights for nonexistent layer")}isEmpty(){return 0===this._geometries.size&&!v.OVERLAY_DRAW_DEBUG_TEXTURE}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateLogic(e){let r=!1;return this._layerRenderers.forEach((t=>r=t.updateLogic(e)||r)),r}updateLayerOrder(){this._sortedLayerRenderersDirty=!0}drawTarget(e,r,t){const s=e.canvasGeometries;if(0===s.numViews)return!1;const i=e.pixelRatio*t;this._screenToWorldRatio=i*Math.abs(s.extents[0][2]-s.extents[0][0])/e.resolution;const a=r.renderPass;if(this.isEmpty()||5===a&&!this.hasHighlights||3===a&&!this.hasWater)return!1;if(!e.hasSomeSizedView())return!1;const n=r.fbo,o=2*e.resolution,l=e.resolution,d=1===r.type?2:4===r.type?1:0;if(!n.isValid())return!1;n.resize(o,l);const c=this._rctx;if(Q.pixelRatio=i||1,this._renderContext.pass=a,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=3===a?24:23,e.applyViewport(this._rctx),n.bind(c),0===e.index&&(c.setClearColor(0,0,0,0),c.clearSafe(16384)),1===d&&(this._renderContext.renderOccludedMask=re),v.OVERLAY_DRAW_DEBUG_TEXTURE&&1!==d)for(let h=0;h<s.numViews;h++)this.setViewParameters(s.extents[h],e,Q),this.drawDebugTexture(e.resolution,N[e.index]);return this._layerRenderers.size>0&&this._sortedLayerRenderers.forAll((({layerView:r,renderer:t})=>{if(2===d&&h(r)&&0===r.drapeSourceType)return;const i=h(r)&&h(r.fullOpacity)&&r.fullOpacity<1&&0===a;i&&(this.bindTemporaryFramebuffer(this._rctx,o,l),c.clearSafe(16384));for(let a=0;a<s.numViews;a++)this.setViewParameters(s.extents[a],e,Q),t.render(this._renderContext,this._bindParameters);i&&h(this._temporaryFBO)&&(n.bind(c),this.view._stage.renderView.compositingHelper.composite(this._temporaryFBO.getTexture(),2,u(u(r).fullOpacity),3,e.index))})),c.bindFramebuffer(null),n.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(e,r,t){d(this._temporaryFBO)&&(this._temporaryFBO=new O(e,!1)),this._temporaryFBO.resize(r,t),this._temporaryFBO.bind(e)}async reloadShaders(){await this._shaderTechniqueRepository.hotReload()}intersect(e,r,t){let s=0;this._geometries.forEach((i=>{if(t&&!t(i))return;this.intersectRenderGeometry(i,r,0,e,s);const a=this.longitudeCyclical;a&&(i.boundingSphere[0]-i.boundingSphere[3]<a.min&&this.intersectRenderGeometry(i,r,a.range,e,s),i.boundingSphere[0]+i.boundingSphere[3]>a.max&&this.intersectRenderGeometry(i,r,-a.range,e,s)),s++}))}intersectRenderGeometry(e,r,t,s,i){if(!e.instanceParameters.visible)return;let a=0;h(e.transformation)&&(t+=e.transformation[12],a=e.transformation[13]),Z[0]=r[0]-t,Z[1]=r[1]-a,Z[2]=1,$[0]=r[0]-t,$[1]=r[1]-a,$[2]=0,e.screenToWorldRatio=this._screenToWorldRatio,e.material.intersect(e,null,e.getShaderTransformation(),s,Z,$,((r,t,a)=>{this.addIntersectionResult(a,e.material.renderPriority,i,s,e.layerUid,e.graphicUid)}),e.calculateShaderTransformation,!0)}addIntersectionResult(e,r,t,s,i,a){const n={type:"external",metadata:{layerUid:i,graphicUid:a}},o=i=>{i.set(n,null,s.results.ground.dist,s.results.ground.normal,s.results.ground.transformation,r,null,null,e,t),i.intersector="OverlayRenderer"};if((null==s.results.min.drapedLayerOrder||r>=s.results.min.drapedLayerOrder)&&(null==s.results.min.dist||s.results.ground.dist<=s.results.min.dist)&&o(s.results.min),0!==s.options.store&&(null==s.results.max.drapedLayerOrder||r<s.results.max.drapedLayerOrder)&&(null==s.results.max.dist||s.results.ground.dist>s.results.max.dist)&&o(s.results.max),2===s.options.store){const e=new M(s.ray);o(e),s.results.all.push(e)}}ensureLayerRenderer(e){let r=this._layerRenderers.get(e);return r||(r=new q({rctx:this._rctx,materialRepository:this._materialRepository}),this._layerRenderers.set(e,r),this._sortedLayerRenderersDirty=!0,"fullOpacity"in e&&this._handles.add(e.watch("fullOpacity",(()=>this.events.emit("content-changed"))),e),this._handles.add(g(r,"updating",(()=>this.notifyChange("updating"))),e)),r}updateSortedLayerRenderers(){if(!this._sortedLayerRenderersDirty)return;if(this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers.clear(),0===this._layerRenderers.size)return;const e=new Set(this._layerRenderers.values());this.view.allLayerViews.forEach((r=>{const t=r,s=this._layerRenderers.get(t);s&&(this._sortedLayerRenderers.push(new K(t,s)),e.delete(s))})),e.forEach((e=>this._sortedLayerRenderers.push(new K(null,e))))}setViewParameters(e,r,t){t.viewport[0]=t.viewport[1]=0,t.viewport[2]=t.viewport[3]=r.resolution,_(t.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],t.near,t.far),f(t.viewMatrix),R(t.viewMatrix,t.viewMatrix,[-e[0],-e[1],0]),this._renderContext.camera=t,this._bindParameters.camera=t,this._bindParameters.inverseViewport[0]=1/t.fullViewport[2],this._bindParameters.inverseViewport[1]=1/t.fullViewport[3]}updateHasWater(){const e=a(this._layerRenderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e,this.events.emit("has-water",e))}updateHasHighlights(){const e=a(this._layerRenderers,(e=>e.hasHighlights));e!==this._hasHighlights&&(this._hasHighlights=e,this.events.emit("has-highlights",e))}updateRendersOccluded(){const e=a(this._layerRenderers,(e=>e.rendersOccluded));e!==this._rendersOccluded&&(this._rendersOccluded=e,this.events.emit("renders-occluded",e))}drawDebugTexture(e,r){const t=this._rctx;this.ensureDebugPatternResources(e,e);const s=this._debugTextureTechnique.program;t.useProgram(s),t.setPipelineState(this._debugTextureTechnique.pipeline),s.setUniform4f("color",r[0],r[1],r[2],1),s.bindTexture(this._debugPatternTexture,"tex"),t.bindVAO(this._quadVAO),t.drawArrays(5,0,X(this._quadVAO,"geometry"))}ensureDebugPatternResources(e,r){if(this._debugPatternTexture)return;const t=new Uint8Array(e*r*4);let s=0;for(let a=0;a<r;a++)for(let i=0;i<e;i++){const n=Math.floor(i/10),o=Math.floor(a/10);n<2||o<2||10*n>e-20||10*o>r-20?(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=255):(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=1&n&&1&o?1&i^1&a?0:255:1&n^1&o?0:128)}this._debugPatternTexture=new I(this._rctx,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,width:e,height:r},t);const i=new A;i.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(F,i),this._quadVAO=D(this._rctx)}get test(){return{layerRenderers:this._layerRenderers}}};e([C()],J.prototype,"_shaderTechniqueRepository",void 0),e([C()],J.prototype,"_stippleTextureRepository",void 0),e([y({constructOnly:!0})],J.prototype,"view",void 0),e([y()],J.prototype,"worldToPCSRatio",void 0),e([y()],J.prototype,"spatialReference",void 0),e([y({type:Boolean,readOnly:!0})],J.prototype,"updating",null),J=e([m("esri.views.3d.terrain.OverlayRenderer")],J);class K{constructor(e,r){this.layerView=e,this.renderer=r}}const N=[[1,.5,.5],[.5,.5,1]],Q=new P;Q.near=1,Q.far=1e4,Q.relativeElevation=null;const Z=b(),$=b(),ee=-2,re=4;export{ee as DRAPED_Z,J as OverlayRenderer,re as overlayRenderOccludedFlag};
