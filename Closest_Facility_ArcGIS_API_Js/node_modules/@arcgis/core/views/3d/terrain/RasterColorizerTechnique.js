/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{isSome as r}from"../../../core/maybe.js";import{R as e}from"../../../chunks/RasterColorizer.glsl.js";import{ReloadableShaderModule as i}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{parameter as s,ShaderTechniqueConfiguration as n}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as a}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as c}from"../webgl-engine/lib/Program.js";import{getUniformLocationInfos as p,setUniforms as h}from"../../webgl/rasterUtils.js";import{simpleBlendingParams as l,makePipelineState as m,defaultColorWriteParams as u}from"../../webgl/renderState.js";class f extends t{get uniformLocationInfos(){return this._uniformLocationInfos||(this._uniformLocationInfos=p(this._context,this.program)),this._uniformLocationInfos}initializeProgram(o){const r=f.shader.get(),e=this.configuration,i=r.build({output:e.colorizerType,applyColormap:e.applyColormap,stretchType:e.stretchType});return this._context=o.rctx,new c(o.rctx,i,a)}initializePipeline(){const o=2===this.configuration.mode?l(1,771):1===this.configuration.mode?l(0,770):null;return m({blending:o,colorWrite:u})}bindPass(o){h(this.program,this.uniformLocationInfos,o.basic),h(this.program,this.uniformLocationInfos,o.common),r(o.colormap)&&h(this.program,this.uniformLocationInfos,o.colormap),0===this.configuration.colorizerType&&r(o.stretch)?h(this.program,this.uniformLocationInfos,o.stretch):2===this.configuration.colorizerType&&r(o.hillshade)&&h(this.program,this.uniformLocationInfos,o.hillshade)}}f.shader=new i(e,(()=>import("../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl.js")));class g extends n{constructor(){super(...arguments),this.mode=2,this.colorizerType=0,this.stretchType=0,this.applyColormap=!0}}o([s({count:3})],g.prototype,"mode",void 0),o([s({count:3})],g.prototype,"colorizerType",void 0),o([s({count:2})],g.prototype,"stretchType",void 0),o([s()],g.prototype,"applyColormap",void 0);export{f as RasterColorizerTechnique,g as RasterColorizerTechniqueConfiguration};
