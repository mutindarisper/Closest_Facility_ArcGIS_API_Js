/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{unwrapOr as t,isSome as e}from"../../../core/maybe.js";import{ImageWithType as n}from"../support/StreamDataLoader.js";import{t as l}from"../../../chunks/terrainUtilsPlanar.js";import{t as i}from"../../../chunks/terrainUtilsSpherical.js";const o={1:i,2:l};function r(t,e){t||console.warn("Terrain: "+e)}const u=1.2,a=80/180*Math.PI,c=110/180*Math.PI;function f(n,l,i){const r=o[n.viewingMode];let f;if(r.isInsideExtent(n,l))f=t(n.getElevation(l[0],l[1],l[1],n.spatialReference),0);else{if(!r.isInsideExtent(n,l,u))return 0;const t=n.getTileWithElevation(l[0],l[1],l[1],n.spatialReference);f=.5*((e(t)?t.elevationBounds[0]:n.elevationBounds.min)+(e(t)?t.elevationBounds[1]:n.elevationBounds.max));const i=r.tiltToExtentEdge(n,l,f);if(i>a&&i<c)return 0}const s=l[2]-f;return Math.abs(s)<i?0:s<0?-1:1}function s(t){return v(t)?{fullExtent:t.fullExtent,minScale:t.layer.minScale,maxScale:t.layer.maxScale,tilemapCache:null}:t.layer}function d(t){return"vector-tile"===(null==t?void 0:t.type)}function p(t){return"imagery-tile"===(null==t?void 0:t.type)||"wcs"===(null==t?void 0:t.type)}function v(t){return"imagery-tile-3d"===(null==t?void 0:t.type)}function m(t){return"tile-3d"===(null==t?void 0:t.type)}function y(t){return"vector-tile-3d"===(null==t?void 0:t.type)}function I(t){return"wmts-3d"===(null==t?void 0:t.type)}function x(t){return"elevation-3d"===(null==t?void 0:t.type)}function E(t){return t&&(m(t)||v(t)||x(t)||y(t)||I(t))}function h(t){var n;const l=null==t||null==(n=t.sourceLayerInfo)?void 0:n.data;return e(l)&&"type"in l&&"raster-tile"===l.type}function T(t){var n;const l=null==t||null==(n=t.sourceLayerInfo)?void 0:n.data;return e(l)&&"type"in l&&"vector-tile"===l.type}function g(t){var n;const l=null==t||null==(n=t.sourceLayerInfo)?void 0:n.data;return e(l)&&"type"in l&&"tile-texture"===l.type}function L(t){var e;const l=null==t||null==(e=t.sourceLayerInfo)?void 0:e.data;return l instanceof HTMLImageElement||l instanceof n||l instanceof HTMLCanvasElement||l instanceof ImageData}function S(t){return e(t)&&"release"in t&&t.release(),null}function M(t){return t.fetchTile&&!1!==t.hasOverriddenFetchTile}function w(t,e,n,l){return o[l].checkIfTileInfoSupportedForViewSR(t,n,e)}function b(t,e,n){let l,i;if("wmts"===t.type){const o=t.activeLayer;if(o){const t=o.tileMatrixSet;if(t)l=t.tileInfo,i=t.fullExtent;else{const t=o.tileMatrixSets;if(t){const l=t.find((t=>null==w(t.tileInfo,t.fullExtent,e,n)));if(l)return{tileInfo:l.tileInfo,fullExtent:l.fullExtent}}}}}else i=p(t)?t.getCompatibleFullExtent(e):t.fullExtent,l=d(t)&&!j.force512VTL?t.compatibleTileInfo256:p(t)?t.getCompatibleTileInfo(e,i,2===n):t.tileInfo;return l&&i&&null==w(l,i,e,n)?{tileInfo:l,fullExtent:i}:{tileInfo:null,fullExtent:null}}const j={force512VTL:!1};export{w as checkIfTileInfoSupportedForView,f as computeSkirtScale,s as getLayerWithExtentRange,b as getTiledLayerInfo,x as isElevationLayerView,v as isImageryTileLayerView,h as isImageryTileRenderInfo,p as isProjectableRasterLayer,L as isRasterTileRenderInfo,E as isSurfaceLayerView,g as isTextureTileRenderInfo,m as isTileLayerView,d as isVectorTileLayer,y as isVectorTileLayerView,T as isVectorTileRenderInfo,I as isWMTSLayerView,S as releaseTileData,j as test,M as useFetchTileForLayer,r as weakAssert};
