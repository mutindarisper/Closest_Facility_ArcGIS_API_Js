/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import{bindProjectionMatrix as e,bindView as t}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as o}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as s,ShaderTechniqueConfiguration as n}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as a}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as p,OITBlending as l}from"../lib/OrderIndependentTransparency.js";import{Program as m}from"../lib/Program.js";import{M as h}from"../../../../chunks/MeasurementArrow.glsl.js";import{makePipelineState as f,defaultDepthWriteParams as d,defaultColorWriteParams as u}from"../../../webgl/renderState.js";class c extends i{constructor(r,e,t){super(r,e,t)}initializeProgram(r){const e=c.shader.get().build();return new m(r.rctx,e,a)}bindPass(r,t){e(this.program,t.camera.projectionMatrix),this.program.setUniform1f("width",r.width),this.program.setUniform1f("outlineSize",r.outlineSize),this.program.setUniform4fv("outlineColor",r.outlineColor),this.program.setUniform1f("stripeLength",r.stripeLength),this.program.setUniform4fv("stripeEvenColor",r.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",r.stripeOddColor)}bindDraw(r){t(this.program,r),this.program.rebindTextures()}setPipelineState(r){const e=3===r,t=this.configuration;return f({blending:t.transparent?e?p:l(r):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:d,colorWrite:u})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 5}}c.shader=new o(h,(()=>import("./MeasurementArrow.glsl.js")));class g extends n{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=3}}r([s()],g.prototype,"polygonOffsetEnabled",void 0),r([s()],g.prototype,"transparent",void 0),r([s({count:4})],g.prototype,"transparencyPassType",void 0);export{c as MeasurementArrowTechnique,g as MeasurementArrowTechniqueConfiguration};
