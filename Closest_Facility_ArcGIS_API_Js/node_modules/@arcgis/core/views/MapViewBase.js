/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../geometry.js";import e from"../Viewpoint.js";import i from"../core/Error.js";import s from"../core/Logger.js";import{isNone as n,isSome as a}from"../core/maybe.js";import{throwIfAborted as r}from"../core/promiseUtils.js";import{createScreenPoint as o}from"../core/screenUtils.js";import{whenTrueOnce as l}from"../core/watchUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{canProject as d,project as m}from"../geometry/support/webMercatorUtils.js";import c from"../layers/support/TileInfo.js";import{PopupView as u}from"./PopupView.js";import g from"./View.js";import y from"./ViewAnimation.js";import f from"./2d/AnimationManager.js";import w from"./2d/FrameTask.js";import{layerView2DImporter as _}from"./2d/layerViewModuleImportUtils.js";import v from"./2d/MapViewConstraints.js";import T from"./2d/PaddedViewState.js";import"./2d/tiling/PagedTileQueue.js";import V from"./2d/tiling/TileInfoView.js";import"./2d/tiling/TileKey.js";import"./2d/tiling/TileQueue.js";import"./2d/tiling/TileStrategy.js";import{centerAt as z,setExtent as S,rotateTo as R,scaleTo as x,copy as b,createAsync as j,resize as O,extentToScale as M}from"./2d/viewpointUtils.js";import k from"./2d/layers/features/support/TileStore.js";import{Timeline as I}from"./2d/support/Timeline.js";import P from"../geometry/Point.js";import E from"../geometry/Extent.js";import G from"../geometry/SpatialReference.js";const N=s.getLogger("esri.views.MapView");function q(t){return t&&"esri.Viewpoint"===t.declaredClass}const L=160;let A=class extends(u(g)){constructor(t){super(t),this._stationaryTimer=null,this.frameTask=new w(this),this.featuresTilingScheme=null,this.fullOpacity=1,this.graphicsView=null,this.initialExtent=null,this.labelManager=null,this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.resizeAlign="center",this.supportsGround=!1,this.timeline=new I,this.type="2d",this.constraints=new v,this.padding={top:0,right:0,bottom:0,left:0};const e=this.handles,i=()=>this.notifyChange("updating");e.add([this.watch("viewpoint",(()=>{this._lastStationaryEventTimestamp=performance.now(),this._flipStationary(L)}),!0),this.on("resize",(t=>this._resizeHandler(t))),this.watch("animationManager.animation",(t=>{this.animation=t})),this.allLayerViews.on("change",(()=>{i(),e.remove("map-view-base-layerViewsUpdating"),e.add(this.allLayerViews.map((t=>t.watch("updating",i))),"map-view-base-layerViewsUpdating")}))],"map-view-base")}destroy(){this.destroyed||(this._set("preconditionsReady",!1),this._gotoTask=this.frameTask=null)}set animation(t){const e=this._get("animation");if(t===e)return;if(e&&e.stop(),!t||t.isFulfilled())return void this._set("animation",null);this._set("animation",t),this.frameTask.animationInProgress=!0;const i=()=>{t===this._get("animation")&&(this._set("animation",null),this.frameTask.requestFrame()),this.frameTask.animationInProgress=!1};t.when(i,i)}get center(){if(!this.ready)return this._get("center");const{center:t,spatialReference:e}=this.state.paddedViewState;return new P({x:t[0],y:t[1],spatialReference:e})}set center(t){if(null==t)return;if(!this._normalizeInput(t))return void N.error("#center",`incompatible spatialReference ${JSON.stringify(t.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`);if(!this.ready)return this._set("center",t),void this.notifyChange("initialExtentRequired");const e=this.viewpoint;z(e,e,t),this.viewpoint=e}set constraints(t){const e=this._get("constraints");e&&(this.handles.remove("map-view-base-constraints"),e.destroy()),this._set("constraints",t),t&&(t.view=this,this.ready&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint)),this.handles.add(t.on("update",(()=>{this.ready&&this.state&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint))})),"map-view-base-constraints"))}get extent(){return this.ready?this.state.paddedViewState.extent.clone():this._get("extent")}set extent(t){if(null==t)return;const e=this._normalizeInput(t);if(!e)return void N.error("#center",`incompatible spatialReference ${JSON.stringify(t.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`);if(!e.width||!e.height)return void N.error("#extent","invalid extent size");if(!this.ready)return this._set("extent",e),this._set("center",null),this._set("viewpoint",null),this._set("scale",0),this._set("zoom",-1),void this.notifyChange("initialExtentRequired");const i=this.viewpoint;S(i,i,e,this.size,{constraints:this.constraints}),this.viewpoint=i}get graphicsTileStore(){return new k(this.featuresTilingScheme)}get initialExtentRequired(){const{extent:t,center:e,scale:i,viewpoint:s,zoom:n}=this;return!this.get("map.initialViewProperties.viewpoint")&&(!t&&((!e||0===i&&-1===n)&&!s))}get padding(){return this.ready?this.state.padding:this._get("padding")}set padding(t){this.ready?(this.state.padding=t,this._set("padding",this.state.padding)):this._set("padding",t)}get resolution(){return this.state?this.state.resolution:0}get rotation(){return this.ready?this.state.rotation:this._get("rotation")}set rotation(t){if(isNaN(t))return;if(!this.ready)return void this._set("rotation",t);const e=this.viewpoint;R(e,e,t),this.viewpoint=e}get scale(){return this.ready?this.state.scale:this._get("scale")}set scale(t){if(!t||isNaN(t))return;if(!this.ready){this._set("scale",t),this._set("zoom",-1);const e=this._get("extent");return e&&(this._set("extent",null),this._set("center",e.center)),void this.notifyChange("initialExtentRequired")}const e=this.viewpoint;x(e,e,t),this.viewpoint=e}get stationary(){return!(this.animation||this.navigating||this._get("resizing")||this._stationaryTimer)}get updating(){return!this.destroyed&&(!0===this.get("layerViewManager.updating")||!0===this.get("labelManager.updating")||!0===this.get("graphicsView.updating")||this.allLayerViews.some((t=>!t.destroyed&&!("layerViews"in t)&&!0===t.updating)))}get viewpoint(){if(!this.ready)return this._get("viewpoint");const t=this.state.paddedViewState;return t&&t.viewpoint.clone()}set viewpoint(t){if(null==t)return;const i=this._normalizeInput(t);if(!i)return void(!t.scale||isNaN(t.scale)?N.error("#viewpoint",`invalid scale value of ${t.scale}`):n(t.targetGeometry)?N.error("#viewpoint","geometry not defined"):N.error("#viewpoint",`incompatible spatialReference ${JSON.stringify(t.targetGeometry.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`));if(!this.ready)return this._set("viewpoint",i),this._set("extent",null),this._set("center",null),this._set("zoom",-1),this._set("scale",0),void this.notifyChange("initialExtentRequired");const s=new e({targetGeometry:new P,scale:0,rotation:0});b(s,i),this.constraints.constrain(s,this.state.paddedViewState.viewpoint),this.state.viewpoint=s,this.frameTask.requestFrame(),this._set("viewpoint",s)}get zoom(){return this.ready?this.constraints.scaleToZoom(this.scale):this._get("zoom")}set zoom(t){if(null==t)return;if(!this.ready){this.notifyChange("initialExtentRequired"),this._set("zoom",t),this._set("scale",0);const e=this._get("extent");e&&(this._set("extent",null),this._set("center",e.center))}if(!this.constraints.effectiveLODs)return;const e=this.viewpoint;x(e,e,this.constraints.zoomToScale(t)),this.viewpoint=e,this._set("zoom",this.constraints.scaleToZoom(this.scale))}goTo(t,e){if(t)return this.animation&&(this.animation=null),this._createAnimation(),l(this,"ready",e&&e.signal).then((()=>{const i={animate:!0,...e},s=j(t,this);return this.animation.update(s),this._gotoTask={},i.animate?this._gotoAnimated(s,i):this._gotoImmediate(s,i)}));N.error("#goTo()","target cannot be null or undefined")}hitTest(t){return Promise.reject("Should be implemented by subclasses")}popupHitTest(t){return this.hitTest(t).then((e=>({...e,mapPoint:this.toMap(t)})))}toMap(t){if(!this.ready)return null;const e=[0,0],[i,s]=this.state.toMap(e,[t.x,t.y]),n=this.spatialReference;return new P({x:i,y:s,spatialReference:n})}isTileInfoRequired(){return!0}toScreen(t){if(!this.ready)return null;const e=this._normalizeInput(t),i=[e.x,e.y];return this.state.toScreen(i,i),o(i[0],i[1])}pixelSizeAt(){return this.ready?this.state.resolution:(N.error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}getDefaultSpatialReference(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")||null}isSpatialReferenceSupported(t,e){return!(!e&&!this._get("ready"))||null!==this._getDefaultViewpoint()}importLayerView(t){return _.importLayerView(t)}hasLayerViewModule(t){return _.hasLayerViewModule(t)}_createAnimation(){return this.animation&&!this.animation.done||(this.animation=new y),this.animation}_cancellableGoTo(t,e,i){const s=()=>t===this._gotoTask,n=i.then((()=>{s()&&(this.animation=null)})).catch((t=>{throw s()&&(this.animation=null,e.done||(e.stop(),this.frameTask.animationInProgress=!1)),t})),a=new Promise((t=>t(n)));return e.when().catch((()=>{s()&&a.cancel&&a.cancel()})),a}_gotoImmediate(t,e){const s=this._gotoTask,n=this.animation,a=t.then((t=>{if(r(e),s!==this._gotoTask)throw new i("view:goto-interrupted","Goto was interrupted");this.viewpoint=n.target=t,n.finish()}));return this._cancellableGoTo(s,n,a)}_gotoAnimated(t,e){const s=this._gotoTask,n=this.animation,a=t.then((t=>{if(r(e),s!==this._gotoTask)throw new i("view:goto-interrupted","Goto was interrupted");return n.update(t),this.animationManager.animate(n,this.viewpoint,e),n.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(s,n,a)}_resizeHandler(t){const e=this.state;if(!e)return;let i=this.state.paddedViewState.viewpoint;const s=this.state.paddedViewState.size.concat();e.size=[t.width,t.height],O(i,i,s,this.state.paddedViewState.size,this.resizeAlign),i=this.constraints.constrain(i,null),this.state.viewpoint=i}_startup(){const t=this._getDefaultViewpoint();this.constraints.view=this,this.constraints.fit(t),this._set("animationManager",new f({view:this})),this._set("state",new T({padding:this._get("padding"),size:this.size,viewpoint:t})),this._set("featuresTilingScheme",new V(c.create({spatialReference:this.spatialReference,size:512,numLODs:36}))),this._set("ready",!0),this.frameTask&&this.frameTask.start()}_teardown(){this.frameTask&&this.frameTask.stop(),this._set("ready",!1),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null);const{center:[t,e],spatialReference:i,rotation:s,scale:n}=this.state.paddedViewState,a=new P({x:t,y:e,spatialReference:i});this._set("viewpoint",null),this._set("extent",null),this._set("center",a),this._set("zoom",-1),this._set("rotation",s),this._set("scale",n),this._set("spatialReference",i),this.constraints.view=null,this.animationManager.destroy(),this._set("animationManager",null),this._set("state",null),this.animation=null}_flipStationary(t){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const t=performance.now()-this._lastStationaryEventTimestamp;t<L&&(this._stationaryTimer=this._flipStationary(t))}),t)),this._stationaryTimer}_normalizeInput(t,e=this.spatialReference){const i=t&&t.targetGeometry||t;return e?i?e.equals(i.spatialReference)?t:d(i,e)?q(t)?(t.targetGeometry=m(i,e),t):m(i,e):null:null:t}_getDefaultViewpoint(){const t=this.constraints,i={zoom:this._get("zoom"),scale:this._get("scale"),center:this._normalizeInput(this._get("center")),extent:this._normalizeInput(this._get("extent")),rotation:this._get("rotation"),viewpoint:this._normalizeInput(this._get("viewpoint")),spatialReference:this._userSpatialReference};t.effectiveLODs?-1!==i.zoom&&(i.scale=t.zoomToScale(i.zoom)):i.zoom=-1;let s=null,n=null,r=0;const o=i.viewpoint&&i.viewpoint.rotation,l=i.viewpoint&&i.viewpoint.targetGeometry;a(l)&&("extent"===l.type?s=l:"point"===l.type&&(n=l,r=i.viewpoint.scale));const p=this._normalizeInput(this.get("map.initialViewProperties.viewpoint.targetGeometry.extent")),h=this._normalizeInput(this.initialExtent),d=i.extent||s||p||h,m=i.center||n||d&&d.center,c=this.get("map.initialViewProperties.viewpoint.scale"),u=i.scale||r||c||d&&M(d,this.size),g=this.get("map.initialViewProperties.viewpoint.rotation"),y=i.rotation||o||g||0;return m&&u?new e({targetGeometry:m,scale:u,rotation:y}):null}};t([p()],A.prototype,"_stationaryTimer",void 0),t([p()],A.prototype,"animation",null),t([p({readOnly:!0})],A.prototype,"animationManager",void 0),t([p({value:null,type:P,dependsOn:["state.id","ready"]})],A.prototype,"center",null),t([p({type:v})],A.prototype,"constraints",null),t([p({value:null,type:E,dependsOn:["state.id","ready"]})],A.prototype,"extent",null),t([p({readOnly:!0})],A.prototype,"featuresTilingScheme",void 0),t([p()],A.prototype,"fullOpacity",void 0),t([p({readOnly:!0})],A.prototype,"graphicsTileStore",null),t([p()],A.prototype,"graphicsView",void 0),t([p({type:E})],A.prototype,"initialExtent",void 0),t([p({dependsOn:["map.initialViewProperties?.viewpoint"]})],A.prototype,"initialExtentRequired",null),t([p()],A.prototype,"labelManager",void 0),t([p({value:{top:0,right:0,bottom:0,left:0},cast:t=>({top:0,right:0,bottom:0,left:0,...t})})],A.prototype,"padding",null),t([p({type:Object})],A.prototype,"renderingOptions",void 0),t([p()],A.prototype,"resizeAlign",void 0),t([p({readOnly:!0,dependsOn:["state.id"]})],A.prototype,"resolution",null),t([p({value:0,type:Number,dependsOn:["state.id","ready"]})],A.prototype,"rotation",null),t([p({value:0,type:Number,dependsOn:["state.id","ready"]})],A.prototype,"scale",null),t([p({type:G,dependsOn:["map.initialViewProperties?.spatialReference","defaultsFromMap.isSpatialReferenceDone"]})],A.prototype,"spatialReference",void 0),t([p({readOnly:!0})],A.prototype,"state",void 0),t([p({dependsOn:["animation","navigating","resizing","_stationaryTimer"]})],A.prototype,"stationary",null),t([p({readOnly:!0})],A.prototype,"supportsGround",void 0),t([p({type:I,readOnly:!0})],A.prototype,"timeline",void 0),t([p({readOnly:!0})],A.prototype,"type",void 0),t([p({readOnly:!0,dependsOn:["layerViewManager.updating","labelManager.updating","graphicsView?.updating"]})],A.prototype,"updating",null),t([p({value:null,type:e,dependsOn:["state.id","ready"]})],A.prototype,"viewpoint",null),t([p({value:-1,dependsOn:["state.id"]})],A.prototype,"zoom",null),A=t([h("esri.views.MapViewBase")],A);var U=A;export{U as default};
