/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import e from"../../../core/Evented.js";import{isNone as t}from"../../../core/maybe.js";import{EditGeometry as r}from"./EditGeometry.js";import{AppendVertex as o}from"./operations/AppendVertex.js";import{UpdateVertices as s}from"./operations/UpdateVertices.js";import{RemoveVertices as i}from"./operations/RemoveVertices.js";import{SplitEdge as n}from"./operations/SplitEdge.js";import{SetVertexPosition as a}from"./operations/SetVertexPosition.js";import{CloseComponent as p}from"./operations/CloseComponent.js";import{MoveVertex as d}from"./operations/MoveVertex.js";import{OffsetEdgeVertex as c}from"./operations/OffsetEdgeVertex.js";import{RotateVertex as h}from"./operations/RotateVertex.js";import{ScaleVertex as u}from"./operations/ScaleVertex.js";import{UndoGroup as m}from"./operations/UndoGroup.js";class l extends e{constructor(e){super(),this.data=e,this.undoStack=[],this.redoStack=[],this.listener=this.data.on("change",(e=>{e.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:e.addedVertices,operation:e.operation}),e.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:e.removedVertices,operation:e.operation}),e.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:e.updatedVertices,operation:e.operation})}))}destroy(){this.listener.remove()}splitEdge(e,t){return this.apply(new n(this.data,e,t))}updateVertices(e,t,r=1){return this.apply(new s(this.data,e,t),r)}moveVertices(e,t,r,o,s=1){return this.updateVertices(e,new d(this.data.coordinateHelper,t,r,o),s)}scaleVertices(e,t,r,o,s,i=1,n=0){return this.updateVertices(e,new u(t,r,o,s,n),i)}rotateVertices(e,t,r,o=1,s=0){return this.updateVertices(e,new h(t,r,s),o)}removeVertices(e){return this.apply(new i(this.data,e,this._minNumVerticesPerType))}appendVertex(e){return 0===this.data.components.length?null:this.apply(new o(this.data,this.data.components[0],e))}setVertexPosition(e,t){return this.apply(new a(this.data,e,t))}offsetEdge(e,t,r,o=1){return this.updateVertices([t.leftVertex,t.rightVertex],new c(this.data.coordinateHelper,e,t,r),o)}closeComponent(e){return this.data.components.includes(e)?this.apply(new p(this.data,e)):null}canRemoveVertex(){return this.data.components[0].vertices.length>this._minNumVerticesPerType}createUndoGroup(){const e=new m;return this.apply(e),{remove:()=>e.close()}}undo(){if(this.undoStack.length>0){const e=this.undoStack.pop();return e.undo(),this.redoStack.push(e),e}return null}redo(){if(this.redoStack.length>0){const e=this.redoStack.pop();return e.apply(),this.undoStack.push(e),e}return null}get canUndo(){return this.undoStack.length>0}get canRedo(){return this.redoStack.length>0}get lastOperation(){return this.undoStack.length>0?this.undoStack[this.undoStack.length-1]:null}get _minNumVerticesPerType(){switch(this.data.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}apply(e,r=1){return 0!==r&&!t(this.lastOperation)&&this.lastOperation.accumulate(e)||(e.apply(),this.undoStack.push(e),this.redoStack=[]),e}static fromGeometry(e,t){return new l(r.fromGeometry(e,t))}}export{l as EditGeometryOperations};
