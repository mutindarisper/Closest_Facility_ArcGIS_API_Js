/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import t from"../../request.js";import e from"../../geometry/Point.js";import{project as r}from"../../geometry/projection.js";import{projectResolution as i,getProjectionOffsetGrid as a}from"../../layers/support/rasterFunctions/rasterProjectionHelper.js";import"../webgl/BufferObject.js";import s from"../webgl/FramebufferObject.js";import"../../core/has.js";import"../webgl/checkWebGLError.js";import"../webgl/enums.js";import"../../chunks/builtins.js";import o from"../webgl/ProgramCache.js";import n from"../webgl/RenderingContext.js";import m from"../webgl/Texture.js";import"../webgl/VertexArrayObject.js";import{isImageSource as p,rasterize as h}from"../2d/engine/Bitmap.js";import c from"../2d/engine/webgl/VertexStream.js";import{createProgramTemplate as x}from"../2d/engine/webgl/shaders/MaterialPrograms.js";import{createTransformTexture as g}from"../webgl/rasterUtils.js";class d{constructor(t){if(t)this._ownsRctx=!1,this._rctx=t;else{this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl");t.getExtension("OES_texture_float"),this._rctx=new n(t)}const e=x("raster/reproject","raster/reproject",new Map([["a_position",0]])),r=new o(this._rctx);this._program=r.getProgram(e,{applyProjection:!0,bilinear:!1,bicubic:!1}),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new c(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,o,n=!1){const p=r(t.extent,o),h=new e({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:c,y:x}=i(h,o,t.extent);let d=(c+x)/2;const u=Math.round((p.xmax-p.xmin)/d),l=Math.round((p.ymax-p.ymin)/d);d=(p.width/u+p.height/l)/2;const _=new e({x:d,y:d,spatialReference:p.spatialReference}),w=a(p,t.extent,_,null,null,!0,[16,16]),f=g(this._rctx,w),b=new m(this._rctx,{width:u,height:l,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,hasMipmap:!1}),j=new s(this._rctx,{colorTarget:0,depthStencilTarget:0,width:u,height:l},b);if(this._rctx.bindFramebuffer(j),this._rctx.setViewport(0,0,u,l),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind(),this._program.setUniform2f("u_srcImageSize",t.texture.descriptor.width,t.texture.descriptor.height),this._program.setUniform2fv("u_transformSpacing",w.spacing),this._program.setUniform2fv("u_transformGridSize",w.size),this._program.setUniform2f("u_targetImageSize",u,l),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),n){const t=new ImageData(j.descriptor.width,j.descriptor.height);return j.readPixels(0,0,j.descriptor.width,j.descriptor.height,6408,5121,t.data),j.detachColorTexture(36064),j.dispose(),{texture:b,extent:p,imageData:t}}return j.detachColorTexture(36064),j.dispose(),{texture:b,extent:p}}reprojectBitmapData(t,e){const r=p(t.bitmapData)?h(t.bitmapData):t.bitmapData,i=new m(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,hasMipmap:!1},r),a=this.reprojectTexture({texture:i,extent:t.extent},e,!0);a.texture.dispose();const s=document.createElement("canvas");s.width=a.imageData.width,s.height=a.imageData.height;return s.getContext("2d").putImageData(a.imageData,0,0),{bitmapData:s,extent:a.extent}}async loadAndReprojectBitmapData(e,r,i){const a=(await t(e,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const o=s.getContext("2d");o.drawImage(a,0,0);const n=o.getImageData(0,0,s.width,s.height),m=this.reprojectBitmapData({bitmapData:n,extent:r},i);return{bitmapData:m.bitmapData,extent:m.extent}}destroy(){this._quad.dispose(),this._program.dispose(),this._ownsRctx&&this._rctx.dispose()}}export{d as ImageReprojector};
