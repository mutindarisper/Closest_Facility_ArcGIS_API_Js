/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Handles.js";import i from"../../core/Logger.js";import{isSome as s,destroyMaybe as r,isNone as o}from"../../core/maybe.js";import{react as n}from"../../core/reactiveUtils.js";import{measurementAreaUnits as a}from"../../core/unitUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as d}from"../../properties/defaultUnit.js";import h from"../../views/3d/interactive/measurementTools/areaMeasurement3D/AreaMeasurement3DTool.js";import{InteractiveToolViewModel as p}from"../support/InteractiveToolViewModel.js";const c=i.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let m=class extends p{constructor(t){super(t),this.logger=c,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._handles=new e,this._userUnitOptions=null,this._userUnit=null,this.ready=!1}initialize(){s(this.tool)&&(this.tool.unit=this.unit),this._handles.add([n((()=>({view:this.view,ready:s(this.view)&&this.view.ready})),(({view:t})=>{this._disconnectFromView(),this._connectToView(t)}),{sync:!0})]),this._connectToView(this.view)}destroy(){this._handles=r(this._handles)}get state(){return this.disabled?"disabled":o(this.tool)?"ready":this.tool.state}get measurement(){if(o(this.tool)||this.disabled||this.tool.destroyed||"pending"===this.tool.toolState)return null;const t=this.tool.measurementView;if("pending"===t.state||"destroyed"===t.state)return null;const e=t.analysisView,i=e.viewData,s=i.measurementData,r=i.validMeasurement,n=1===i.mode,a=0===(n?s.intersectingSegments:s.geodesicIntersectingSegments).size,l=a?r?"available":"unavailable":"invalid";return{mode:n?"euclidean":"geodesic",area:{text:a&&r?e.areaLabel:null,state:l},perimeterLength:{text:a&&r?e.perimeterLengthLabel:null,state:l}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,s(this.tool)&&(this.tool.unit=this._userUnit),this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:h,constructorArguments:()=>({unit:this.unit})}}_findSelectableUnit(t,e){const i=this.unitOptions;return-1!==i.indexOf(t)?t:e?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){if(!t)return a.slice();const e=t.filter((t=>-1!==a.indexOf(t)));return 0===e.length?a.slice():e}async _connectToView(t){s(t)&&t.ready&&"3d"===t.type&&(this.ready=!0)}_disconnectFromView(){this.ready=!1}};t([l()],m.prototype,"ready",void 0),t([l({readOnly:!0})],m.prototype,"state",null),t([l({readOnly:!0})],m.prototype,"measurement",null),t([l(d)],m.prototype,"defaultUnit",void 0),t([l()],m.prototype,"unitOptions",null),t([l()],m.prototype,"unit",null),m=t([u("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],m);var f=m;export{f as default};
