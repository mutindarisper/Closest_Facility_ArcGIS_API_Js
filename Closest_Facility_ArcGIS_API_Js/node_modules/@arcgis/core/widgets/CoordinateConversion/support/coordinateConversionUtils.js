/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import"../../../geometry.js";import e from"../../../core/Error.js";import{isSome as o}from"../../../core/maybe.js";import{project as t}from"../../../geometry/support/webMercatorUtils.js";import r from"../../../rest/support/ProjectParameters.js";import n from"../../../geometry/Point.js";import i from"../../../geometry/SpatialReference.js";const c={utm:{conversionMode:"utmDefault",addSpaces:!0},usng:{numOfDigits:5,rounding:!1,addSpaces:!1},mgrs:{rounding:!1}},s=new Array(3);function a(e,o){const t=u(o);return[e[0].toFixed(t),e[1].toFixed(t)]}function u(e){return e>=500?6:e<500&&e>=50?7:e<50&&e>=5?8:9}function m(o){const{geometryServicePromise:t,coordinate:r,spatialReference:i,formatName:c}=o;return t.then((o=>o.fromGeoCoordinateString({strings:[r],sr:i,conversionType:c}).then((e=>{const o=new n({x:e[0][0],y:e[0][1],spatialReference:i});if(!p(o))throw e;return o})).catch((o=>{throw new e("coordinate-conversion:from-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:o})}))))}function f(e,o){const t=e.indexOf(",")>=0?",":" ",[r,c,s]=e.split(t).map((e=>{const o=e.trim();return o?Number(o):null}));if(!d(r)||!d(c))return null;const a=new n({x:r,y:c,spatialReference:o||i.WGS84});return s&&(a.z=s,a.hasZ=!0),a}function d(e){return"number"==typeof e&&isFinite(e)}function p(e){return e&&d(e.x)&&d(e.y)}function l(e,o){if(e.spatialReference.isGeographic&&o){const[t,r]=a([e.x,e.y],o);return`${t}, ${r}`}return`${e.x.toFixed(3)}, ${e.y.toFixed(3)}`}function g(n,i){const{spatialReference:c,geometryServicePromise:a,location:u,scale:m}=n;if(!c||u.spatialReference.wkid===c.wkid)return Promise.resolve({location:u,coordinate:l(u,m)});const f=t(u,c);if(o(f))return Promise.resolve({location:f,coordinate:l(f,m)});if(s[0]===u&&s[1]===c.wkid)return s[2];s[0]=u,s[1]=c.wkid;const d=a.then((o=>o.project(new r({geometries:[u],outSpatialReference:c}),{signal:i}).then((e=>{if(!p(e[0]))throw e[0];return{location:e[0],coordinate:l(e[0],m)}})).catch((o=>{throw new e("coordinate-conversion:projection-failed","Failed to project point",{projectionResult:o})}))));return s[2]=d,d}function w(o){const{formatName:t,location:r,geometryServicePromise:n}=o,i=c[t]||{},s={coordinates:[[r.x,r.y]],sr:r.spatialReference,conversionType:t,...i};return n.then((o=>o.toGeoCoordinateString(s).then((e=>{const o=e[0];if(!o)throw e;return o})).catch((o=>{throw new e("coordinate-conversion:to-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:o})}))))}function y(e){return"dd"===e||"dms"===e||"ddm"===e||"mgrs"===e||"usng"===e||"utm"===e}export{a as clipLonLat,m as fromGeoCoordinateString,f as fromXY,u as getDegreePrecision,y as isSupportedNotation,p as isValidPoint,l as pointToCoordinate,g as project,w as toGeoCoordinateString};
