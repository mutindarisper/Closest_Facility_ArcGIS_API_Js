/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Handles.js";import i from"../../core/Logger.js";import{isSome as s,destroyMaybe as r,isNone as n}from"../../core/maybe.js";import{react as o}from"../../core/reactiveUtils.js";import{measurementLengthUnits as a}from"../../core/unitUtils.js";import{init as l}from"../../core/watchUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as d}from"../../properties/defaultUnit.js";import h from"../../views/3d/interactive/measurementTools/directLineMeasurement3D/DirectLineMeasurement3DTool.js";import{InteractiveToolViewModel as p}from"../support/InteractiveToolViewModel.js";const m=i.getLogger("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel");let f=class extends p{constructor(t){super(t),this.logger=m,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._handles=new e,this._userUnitOptions=null,this._userUnit=null,this.ready=!1}initialize(){this._handles.add([l(this,"unit",(t=>{s(this.tool)&&(this.tool.unit=t)})),o((()=>({view:this.view,ready:s(this.view)&&this.view.ready})),(({view:t})=>{this._disconnectFromView(),this._connectToView(t)}),{sync:!0})]),this._connectToView(this.view)}destroy(){this._handles=r(this._handles)}get state(){return this.disabled?"disabled":n(this.tool)?"ready":this.tool.state}get measurement(){if(n(this.tool))return null;const t={mode:"euclidean",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:null,state:"unavailable"},verticalDistance:{text:null,state:"unavailable"}},e=this.tool.measurementView.analysisView;if(n(e))return t;const i=e.actualVisualizedMeasurement,r=this.tool.measurementView,o=s(e.result)?"available":"unavailable";switch(i){case 1:return{mode:"euclidean",directDistance:{text:r.directLabelText,state:o},horizontalDistance:{text:r.horizontalLabelText,state:o},verticalDistance:{text:r.verticalLabelText,state:o}};case 2:return{mode:"geodesic",directDistance:{text:null,state:"unavailable"},horizontalDistance:{text:r.horizontalLabelText,state:o},verticalDistance:{text:r.verticalLabelText,state:o}};default:return t}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:h,constructorArguments:()=>({unit:this.unit})}}_findSelectableUnit(t,e){const i=this.unitOptions;return-1!==i.indexOf(t)?t:e?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){if(!t)return a.slice();const e=t.filter((t=>-1!==a.indexOf(t)));return 0===e.length?a.slice():e}async _connectToView(t){s(t)&&t.ready&&"3d"===t.type&&(this.ready=!0)}_disconnectFromView(){this.ready=!1}};t([u()],f.prototype,"ready",void 0),t([u({readOnly:!0})],f.prototype,"state",null),t([u({readOnly:!0})],f.prototype,"measurement",null),t([u(d)],f.prototype,"defaultUnit",void 0),t([u()],f.prototype,"unitOptions",null),t([u()],f.prototype,"unit",null),f=t([c("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],f);var _=f;export{_ as default};
