/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import{eachAlways as r}from"../../../core/promiseUtils.js";import t from"../../../layers/FeatureLayer.js";import{applyTextFormattingHTML as a,htmlEntities as i}from"./featureUtils.js";const s=["$datastore","$map","$layer","$aggregatedfeatures"],o="esri.widgets.Feature.support.arcadeFeatureUtils",n=e.getLogger(o);function c(e){return`<ul class="esri-widget__list">${e.map((e=>`<li>${"string"==typeof e?a(i(e)):e}</li>`)).join("")}</ul>`}function p(e){return`<table class="esri-widget__table">${e.keys().map((r=>{const t=e.field(r);return`<tr><th>${r}</th><td>${"string"==typeof t?a(i(t)):t}</td></tr>`})).join("")}</table>`}function l({aggregatedFeatures:e,arcadeUtils:r,featureSetVars:a,context:i,viewInfo:s,map:o,graphic:n,interceptor:c}){a.forEach((a=>{const p=a.toLowerCase(),l={map:o,spatialReference:s.sr,interceptor:c};if("$map"===p&&(i.vars[p]=r.convertMapToFeatureSetCollection(l)),"$layer"===p&&(i.vars[p]=r.convertFeatureLayerToFeatureSet({layer:n.sourceLayer,spatialReference:s.sr,interceptor:c})),"$datastore"===p&&(i.vars[p]=r.convertServiceUrlToWorkspace({url:n.sourceLayer.url,spatialReference:s.sr,interceptor:c})),"$aggregatedfeatures"===p){const a=n.layer,{fields:o,objectIdField:l,geometryType:u,spatialReference:f,displayField:d}=a,g=new t({fields:o,objectIdField:l,geometryType:u,spatialReference:f,displayField:d,..."feature"===a.type?{templates:a.templates,typeIdField:a.typeIdField,types:a.types}:null,source:e});i.vars[p]=r.convertFeatureLayerToFeatureSet({layer:g,spatialReference:s.sr,interceptor:c})}}))}function u(){return import("../../../support/arcadeUtils.js")}async function f({graphic:e,view:r}){const{isAggregate:t,layer:a}=e;if(!t||!a||"2d"!==(null==r?void 0:r.type))return[];const i=await r.whenLayerView(a);if(!i.createQuery||!i.queryFeatures)return[];const s=i.createQuery();s.aggregateIds=[e.getObjectId()];const{features:o}=await i.queryFeatures(s);return o}async function d({expressionAttributes:e,info:r,arcadeUtils:t,interceptor:o,spatialReference:u,map:d,graphic:g,view:y}){const m=`expression/${r.name}`,w=t.createSyntaxTree(r.expression),F=s.filter((e=>t.hasVariable(w,e)));await t.loadScriptDependencies(w,!0,F);const v=t.getViewInfo({spatialReference:u}),h=t.createExecContext(g,v);h.interceptor=o,h.useAsync=!0;l({aggregatedFeatures:await f({graphic:g,view:y}),arcadeUtils:t,featureSetVars:F,context:h,viewInfo:v,map:d,graphic:g,interceptor:o});const x=t.createFunction(w,h),$=await t.executeAsyncFunction(x,h).catch((e=>n.error("arcade-execution-error",{error:e,graphic:g,expressionInfo:r})));e[m]="string"==typeof $?a(i($)):Array.isArray($)?c($):$&&"esri.arcade.Dictionary"===$.declaredClass?p($):$}async function g({popupTemplate:e,spatialReference:t,graphic:a,interceptor:i,map:s,view:o}){const n=e.expressionInfos,c=[],p={};if(!n||!n.length)return p;const l=await u();for(const r of n)c.push(d({expressionAttributes:p,info:r,arcadeUtils:l,interceptor:i,spatialReference:t,map:s,graphic:a,view:o}));return await r(c),p}export{g as createCompiledExpressions};
