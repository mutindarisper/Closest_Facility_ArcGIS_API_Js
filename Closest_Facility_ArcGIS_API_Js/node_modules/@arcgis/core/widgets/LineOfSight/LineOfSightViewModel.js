/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.21/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Collection.js";import{castForReferenceSetter as o,referenceSetter as i}from"../../core/collectionUtils.js";import r from"../../core/Handles.js";import{handlesGroup as s}from"../../core/handleUtils.js";import a from"../../core/Logger.js";import{isSome as n,destroyMaybe as l,isNone as d,applySome as h,unwrap as c}from"../../core/maybe.js";import{react as g}from"../../core/reactiveUtils.js";import{whenTrueOnce as m}from"../../core/watchUtils.js";import{property as T}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../layers/LineOfSightLayer.js";import{LineOfSightTarget as v}from"../../layers/LineOfSightTarget.js";import{LineOfSightTool as w}from"../../views/3d/interactive/analysisTools/lineOfSight/LineOfSightTool.js";import u from"./LineOfSightTarget.js";import{InteractiveToolViewModel as f}from"../support/InteractiveToolViewModel.js";const _=a.getLogger("esri.widgets.LineOfSight.LineOfSightViewModel"),V=t.ofType(u);let L=class extends f{constructor(e){super(e),this.logger=_,this.supportedViewType="3d",this.unsupportedErrorMessage="LineOfSightViewModel is only supported in 3D views.",this.handles=new r,this._vmTargetsToConnection=new Map,this._layerTargetsToConnection=new Map,this.ready=!1,this.model=new y({listMode:"hide"}),this.layerView=null,this.observer=null}initialize(){this.handles.add([this.targets.on("after-add",(e=>this._onViewModelTargetAdded(e.item))),this.targets.on("after-remove",(e=>this._onViewModelTargetRemoved(e.item))),this.model.targets.on("after-add",(e=>this._onLayerTargetAdded(e.item))),this.model.targets.on("after-remove",(e=>this._onLayerTargetRemoved(e.item))),g((()=>({view:this.view,ready:n(this.view)&&this.view.ready})),(({view:e})=>{this._disconnectFromView(),this._connectToView(e)}),{sync:!0})]),this._connectToView(this.view)}destroy(){this._disconnectFromView(),this._layerTargetsToConnection.forEach((e=>e.remove())),this.model=l(this.model),this.handles=l(this.handles)}get state(){return this.disabled||!this.ready?"disabled":d(this.tool)||"pending"===this.tool.toolState?"ready":this.tool.state}get targets(){return this._get("targets")||new V}set targets(e){this._set("targets",i(e,this.targets,V))}async start(){return this.ready||await m(this,"ready"),this.createTool()}clear(){this.removeTool(),this.observer=null,this.targets.removeAll()}continue(){n(this.tool)&&this.tool.continue()}stop(){n(this.tool)&&this.tool.stop()}get testInfo(){return{getLayerTargetFromViewModelTarget:e=>h(this._vmTargetsToConnection.get(e),(e=>e.layerTarget))}}createToolParams(){return{toolConstructor:w,constructorArguments:()=>({model:this.model})}}async _connectToView(e){if(!d(e)&&e.ready&&(e.map.layers.add(this.model),"3d"===e.type)){const t=e,o=await t.whenLayerView(this.model);if(this.destroyed||t!==this.view)return;this.layerView=o,this.ready=!0,this.handles.add([this.layerView.on("result-changed",(e=>{const t=this._layerTargetsToConnection.get(e.target);n(e.result)?(t.viewModelTarget.intersectedGraphic=e.result.intersectedGraphic,t.viewModelTarget.intersectedLocation=c(e.result.intersectedLocation),t.viewModelTarget.visible=e.result.visible):(t.viewModelTarget.intersectedGraphic=null,t.viewModelTarget.intersectedLocation=null,t.viewModelTarget.visible=void 0)}))],"view")}}_disconnectFromView(){this.ready=!1,null!=this.view&&(this.view.map.remove(this.model),this.handles.remove("view"),this.layerView=null)}_onViewModelTargetAdded(e){if(this._vmTargetsToConnection.get(e))return;const t=new v({location:e.location});this._connectViewModelWithLayerTarget(e,t),this.model.targets.add(t)}_onViewModelTargetRemoved(e){const t=this._vmTargetsToConnection.get(e);t&&(t.remove(),this.model.targets.remove(t.layerTarget))}_onLayerTargetAdded(e){if(this._layerTargetsToConnection.get(e))return;const t=new u({location:h(e.location,(e=>e.clone()))});this._connectViewModelWithLayerTarget(t,e),this.targets.add(t)}_onLayerTargetRemoved(e){const t=this._layerTargetsToConnection.get(e);t&&(t.remove(),this.targets.remove(t.viewModelTarget))}_connectViewModelWithLayerTarget(e,t){let o=!1;const i=s([g((()=>t.location),(t=>{o||(o=!0,e.location=h(t,(e=>e.clone())),o=!1)}),{sync:!0}),g((()=>e.location),(e=>{o||(o=!0,t.location=h(e,(e=>e.clone())),o=!1)}),{sync:!0})]),r={layerTarget:t,viewModelTarget:e,remove:()=>{i.remove(),this._vmTargetsToConnection.delete(e),this._layerTargetsToConnection.delete(t)}};this._vmTargetsToConnection.set(e,r),this._layerTargetsToConnection.set(t,r)}};e([T({readOnly:!0})],L.prototype,"state",null),e([T()],L.prototype,"ready",void 0),e([T()],L.prototype,"model",void 0),e([T()],L.prototype,"layerView",void 0),e([T({aliasOf:"model.observer"})],L.prototype,"observer",void 0),e([T({type:V,cast:o,nonNullable:!0})],L.prototype,"targets",null),L=e([p("esri.widgets.lineOfSight.LineOfSightViewModel")],L);var M=L;export{M as default};
