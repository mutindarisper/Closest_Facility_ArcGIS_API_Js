"use strict";(self.webpackChunkarcgis_rm=self.webpackChunkarcgis_rm||[]).push([[4417],{84417:(e,t,o)=>{o.r(t),o.d(t,{default:()=>M});var r=o(36663),i=o(51366),l=o(66341),s=(o(95156),o(61681)),n=o(15842),a=o(78668),p=o(3466),y=o(81977),u=(o(39994),o(7283),o(13802),o(34248)),d=o(12571),c=o(76136),S=o(48547),h=o(43330),b=o(18241),v=o(12478),C=o(95874),f=o(51599),m=o(18251),g=o(15498),_=o(86036),R=o(1759),k=o(43411);const Z=["atom","xml"],w={base:m.Z,key:"type",typeMap:{"simple-line":g.Z},errorContext:"symbol"},F={base:m.Z,key:"type",typeMap:{"picture-marker":_.Z,"simple-marker":R.Z},errorContext:"symbol"},j={base:m.Z,key:"type",typeMap:{"simple-fill":k.Z},errorContext:"symbol"};let x=class extends((0,S.h)((0,v.Q)((0,h.q)((0,b.I)((0,C.M)((0,n.R)(c.Z))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,p.vt)(this.url,Z)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(a.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await(0,l.default)(i.Z.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};(0,r._)([(0,y.Cb)()],x.prototype,"description",void 0),(0,r._)([(0,y.Cb)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],x.prototype,"title",null),(0,r._)([(0,y.Cb)()],x.prototype,"featureCollections",void 0),(0,r._)([(0,u.r)("service","featureCollections",["featureCollection.layers"])],x.prototype,"readFeatureCollections",null),(0,r._)([(0,y.Cb)(f.id)],x.prototype,"id",void 0),(0,r._)([(0,y.Cb)(f.rn)],x.prototype,"legendEnabled",void 0),(0,r._)([(0,y.Cb)({types:w,json:{write:!0}})],x.prototype,"lineSymbol",void 0),(0,r._)([(0,y.Cb)({type:["show","hide"]})],x.prototype,"listMode",void 0),(0,r._)([(0,y.Cb)({types:F,json:{write:!0}})],x.prototype,"pointSymbol",void 0),(0,r._)([(0,y.Cb)({types:j,json:{write:!0}})],x.prototype,"polygonSymbol",void 0),(0,r._)([(0,y.Cb)({type:["GeoRSS"]})],x.prototype,"operationalLayerType",void 0),(0,r._)([(0,y.Cb)()],x.prototype,"outSpatialReference",void 0),(0,r._)([(0,y.Cb)(f.HQ)],x.prototype,"url",void 0),(0,r._)([(0,y.Cb)({readOnly:!0,json:{read:!1},value:"geo-rss"})],x.prototype,"type",void 0),x=(0,r._)([(0,d.j)("esri.layers.GeoRSSLayer")],x);var M=x}}]);