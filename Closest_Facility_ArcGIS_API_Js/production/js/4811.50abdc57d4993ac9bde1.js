"use strict";(self.webpackChunkarcgis_rm=self.webpackChunkarcgis_rm||[]).push([[4811],{28715:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(43502);class r extends s.T{constructor(e){super(e),this.hasHighlight=()=>!0}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commit(e),e.context.setStencilFunction(514,i.stencilRef,255),i._displayList.replay(e,i,t))}}},57971:(e,t,i)=>{i.d(t,{Z:()=>Qe});var s=i(36663),r=i(23657),n=i(53280),o=(i(39994),i(61681)),a=i(78668),l=i(95550),h=i(81977),d=(i(7283),i(13802),i(12571)),c=i(89542),u=i(14685),f=i(24568),p=i(38028),m=i(53736),y=i(79880),g=i(68668),x=i(25266),_=i(35925);function v(e,t){if(!t)return e;const i=function(e,t){const i=[],{ymin:s,ymax:r}=e,n=e.xmax-e.xmin,o=e.xmin,a=e.xmax;let l;const[h,d]=t.valid;l=D(e.xmin,t);const c=l.x,u=l.frameId;l=D(e.xmax,t);const f=l.x,p=l.frameId,m=c===f&&n>0;if(n>2*d){const e={xmin:o<a?c:f,ymin:s,xmax:d,ymax:r},t={xmin:h,ymin:s,xmax:o<a?f:c,ymax:r},n={xmin:0,ymin:s,xmax:d,ymax:r},l={xmin:h,ymin:s,xmax:0,ymax:r},m=[],y=[];w(e,n)&&m.push(u),w(e,l)&&y.push(u),w(t,n)&&m.push(p),w(t,l)&&y.push(p);for(let e=u+1;e<p;e++)m.push(e),y.push(e);i.push({extent:e,frameIds:[u]},{extent:t,frameIds:[p]},{extent:n,frameIds:m},{extent:l,frameIds:y})}else c>f||m?i.push({extent:{xmin:c,ymin:s,xmax:d,ymax:r},frameIds:[u]},{extent:{xmin:h,ymin:s,xmax:f,ymax:r},frameIds:[p]}):i.push({extent:{xmin:c,ymin:s,xmax:f,ymax:r},frameIds:[u]});return i}(e,t).map((e=>e.extent));return i.length<2?i[0]||e:i.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:i.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function b(e,t,i){if(Array.isArray(e)){const s=e[0];if(s>t){const i=(0,x.XZ)(s,t);e[0]=s+i*(-2*t)}else if(s<i){const t=(0,x.XZ)(s,i);e[0]=s+t*(-2*i)}}else{const s=e.x;if(s>t){const i=(0,x.XZ)(s,t);e.x+=i*(-2*t)}else if(s<i){const t=(0,x.XZ)(s,i);e.x+=t*(-2*i)}}return e}function D(e,t){const[i,s]=t.valid,r=2*s;let n,o=0;return e>s?(n=Math.ceil(Math.abs(e-s)/r),e-=n*r,o=n):e<i&&(n=Math.ceil(Math.abs(e-i)/r),e+=n*r,o=-n),{x:e,frameId:o}}function w(e,t){const{xmin:i,ymin:s,xmax:r,ymax:n}=t;return C(e,i,s)&&C(e,i,n)&&C(e,r,n)&&C(e,r,s)}function C(e,t,i){return t>=e.xmin&&t<=e.xmax&&i>=e.ymin&&i<=e.ymax}class B{cut(e,t){let i;if(e.rings)this.closed=!0,i=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,i=e.paths,this.minPts=2}const s=i.length,r=-2*t;for(let e=0;e<s;e++){const t=i[e];if(t&&t.length>=this.minPts){const e=[];for(const i of t)e.push([i[0]+r,i[1]]);i.push(e)}}return this.closed?e.rings=i:e.paths=i,e}}const F=(0,f.Ue)();var T=i(66069),I=i(67847),L=i(5310),R=i(14266);const S=-1;class M{constructor(){this._dirties=[{vertexFrom:S,vertexCount:S,indexFrom:S,indexCount:S,allDirty:!1},{vertexFrom:S,vertexCount:S,indexFrom:S,indexCount:S,allDirty:!1},{vertexFrom:S,vertexCount:S,indexFrom:S,indexCount:S,allDirty:!1},{vertexFrom:S,vertexCount:S,indexFrom:S,indexCount:S,allDirty:!1},{vertexFrom:S,vertexCount:S,indexFrom:S,indexCount:S,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==S||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=S,e.indexCount=S,e.vertexFrom=S,e.vertexCount=S,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:i,indexFrom:s,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let l,h=!1;(o||n!==S&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},h=!0),(o||s!==S&&i>0)&&(l={count:i,from:s,allDirty:o},h=!0),h&&e({indices:l,vertices:a},t)}}markDirtyIndices(e,t,i){const s=this._dirties[e],r=t,n=i;if(!s.allDirty)if(s.indexCount!==S){const e=Math.min(s.indexFrom,r),t=Math.max(s.indexFrom+s.indexCount,r+n)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=r,s.indexCount=n}markDirtyVertices(e,t,i,s){const r=this._dirties[e],n=i,o=s;if(!r.allDirty)if(r.vertexCount!==S){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}class z{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,s=!1,r=null,n=this._parent._freeHead;for(;i&&!s;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(i=!1,s=!0):null!==n?(r=n,n=n.next):i=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class A{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new z(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const i=t.from,s=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,s),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;A._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,s]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:i,next:s};if(null!==i&&(i.next=r),null!==s&&(s.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==s&&r.from+r.count===s.from){const e=r.from,t=r.count;A._fuse(r,s),A._removeRange(s),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(s,void 0,0)}if(null!==i&&i.from+i.count===r.from){const e=i.from,t=i.count;A._fuse(i,r),A._removeRange(r),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var G=i(15875);const O=["FILL","LINE","MARKER","TEXT","LABEL"];class U{constructor(e,t,i,s){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:s?new A(s):null,idxFreeList:s?new A(s):null,vertexBuffers:{},indexBuffer:s?new Uint32Array(s):null};for(const i in e[t])this._freeListsAndStorage[t].vertexBuffers[i]={data:s?(0,G.C$)(s,e[t][i]):null,stride:e[t][i]}}}static fromTileData(e,t){const i=function(e){const t=e.getStrides(),i={};for(let e=0;e<t.length;e++)i[O[e]]=t[e];return i}(e),s=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const e of n)for(const t of e.displayRecords)s[t.geometryType]=Math.max(s[t.geometryType],t.vertexFrom+t.vertexCount),r[t.geometryType]=Math.max(r[t.geometryType],t.indexFrom+t.indexCount);const o=new U(i,e.tileDisplayData.displayList,t,null);for(let t=0;t<e.tileBufferData.geometries.length;++t){const i=s[t],n=r[t],a=e.tileBufferData.geometries[t],l=O[t],h=o._storageFor(l),d=e.tileBufferData.geometries[t].indexBuffer;let c;h.indexBuffer=d,h.idxFreeList=new A(d.length),h.idxFreeList.allocate(n);for(const i in a.vertexBuffer){const s=e.tileBufferData.geometries[t].vertexBuffer[i];h.vertexBuffers[i].data=s.data,h.vertexBuffers[i].stride=s.stride;const r=(0,G.Y8)(s.stride),n=s.data.length*r/s.stride;c||(c=n)}h.vtxFreeList=new A(c),h.vtxFreeList.allocate(i)}return o}delete(e){const t=O[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,s,r){const n=O[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,h,d,c=!0;if(void 0===e.indexFrom?(l=r,d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(c=!1,h=e.indexFrom,d=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,d=t.indexCount),-1!==o&&-1!==h){const r=this._storageFor(n);if((0,G.wO)(o,h,r.vertexBuffers,r.indexBuffer,t,i,s),e.vertexFrom=o,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==h&&this._freeIndices(n,h,d),e.setMeshDataFromBuffers(t,i,s),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,s=t.indexBuffer,r=O[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,G.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,i,s),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const i=this._storageFor(e),s=i.vtxFreeList.allocate(t);return-1===s||i.vtxFreeList.fragmentation>.5?-1:s}_freeVertices(e,t,i){this._storageFor(e).vtxFreeList.free(t,i)}_freeIndices(e,t,i){this._storageFor(e).idxFreeList.free(t,i)}_allocateIndices(e,t){const i=this._storageFor(e),s=i.idxFreeList.allocate(t);return-1===s||i.idxFreeList.fragmentation>.5?-1:s}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var k=i(78951),V=(i(18567),i(6174),i(91907),i(88338),i(17346),i(43487),i(29620));class P{constructor(e){this.geometryMap=(0,G.Mk)((()=>({indexBuffer:k.Z.createIndex(e,35044),vao:null})),((t,i)=>({vertexBuffer:k.Z.createVertex(e,G.mR[i])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,i,s,r,n){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new V.Z(e,s,i,r,t.data.indexBuffer)}const o=t.data.vao;e.bindVAO(o),e.drawElements(4,n,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,i)=>{this._upload(t,i,e)}))}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const r=s[e];r.allDirty?this._uploadVertices(i,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(i,t,e,r.from,r.count)}}}_uploadVertices(e,t,i,s,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[i];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[i]&&l.byteLength>0&&(null!=s&&null!=r?n.buffers[i].data.vertexBuffer.setSubData(l,s*a,s*a,(s+r)*a):n.buffers[i].data.vertexBuffer.setData(l))}_uploadIndices(e,t,i,s){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=i&&null!=s?r.data.indexBuffer.setSubData(n,4*i,4*i,4*(i+s)):r.data.indexBuffer.setData(n))}}var j=i(780);class Z extends j.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new M}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,i=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new M,this._dispRecStore=U.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||i.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new P(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=U.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],s=(e.remove||[]).slice();for(const e of i)null!=e.insertAfter&&s.push(e.id);for(const e of s){const t=this._data.tileDisplayData.displayObjectRegistry.get(e);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(e);const i=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(i,1)}}for(const s of i){let i,r=this._data.tileDisplayData.displayObjectRegistry.get(s.id);if(r){const e=r.displayRecords;r.set(s),r.displayRecords=e;const t=r.displayRecords.length;for(let e=0;e<t;++e){const t=r.displayRecords[e],i=s.displayRecords[e];(e>=s.displayRecords.length||t.geometryType!==i.geometryType||t.symbolLevel!==i.symbolLevel||t.zOrder!==i.zOrder||t.materialKey!==i.materialKey)&&(this._dispRecStore.delete(r.displayRecords[e]),e<s.displayRecords.length&&(r.displayRecords[e]=void 0))}r.displayRecords.length=s.displayRecords.length}else{let e;r=s.copy(),r.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(s.id,r);const t=this._data.tileDisplayData.displayObjects;if(null!=r.insertAfter)if(i={},r.insertAfter>=0){const i=this._data.tileDisplayData.displayObjectRegistry.get(r.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,r):(t.push(r),e=t.length)):(t.push(r),e=t.length)}else t.unshift(r),e=0;else t.push(r),e=t.length;if(i){const r=s.displayRecords.length>0?1:0;let n=0;for(let s=e-1;s>=0&&n<r;--s)for(let e=t[s].displayRecords.length-1;e>=0&&n<r;--e){const r=t[s].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();i[o]||(i[o]=r,++n)}}}const n=s.displayRecords.length;for(let o=0;o<n;++o){const n=s.displayRecords[o];let a=r.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,r.displayRecords[o]=a);const l=n.geometryType,h=this._data.tileDisplayData.displayList.getDPInfoType(),d=e.addOrUpdate.tileBufferData.geometries[l],c=d.vertexBuffer,u=d.indexBuffer;let f;i&&(f=i[h]?this._data.tileDisplayData.displayList.splitAfter(i[h]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,i&&null!=a.indexFrom&&null!=a.indexFrom&&(i[h]=a)}}return t}}class K{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i}}class E{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new E;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],s=e.geometries[t];s.indexBuffer=i.indexBuffer.slice(),s.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:r}=i.vertexBuffer[e];s.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new E;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const s in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[s]={data:(0,G.e2)(e.geometries[i].vertexBuffer[s].data,e.geometries[i].vertexBuffer[s].stride),stride:e.geometries[i].vertexBuffer[s].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}}var H=i(38716);function q(e,t,i,...s){t<e.length?e.splice(t,i,...s):e.push(...s)}const W=new Map;W.set(H.jx.MAP,[H.LW.FILL,H.LW.LINE,H.LW.MARKER,H.LW.TEXT]),W.set(H.jx.LABEL,[H.LW.LABEL]),W.set(H.jx.LABEL_ALPHA,[H.LW.LABEL]);class N{constructor(){this.symbolLevels=[]}replay(e,t,i){for(const s of this.symbolLevels)for(const r of s.zLevels){const s=r.geometryDPInfo.unified;if(s)for(const r of s){const s=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),o={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,i)=>{n.draw(e,t,i,r.indexFrom,r.indexCount)}};s.prepareState(e,t),s.drawGeometry(e,t,o,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new N;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,s=e.indexFrom+e.indexCount;for(let r=0;r<i;++r){const i=t[r];if(i.geometryType===e.geometryType&&s>i.indexFrom&&s<=i.indexFrom+i.indexCount){if(s<i.indexFrom+i.indexCount){const e=new X;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=s,e.indexCount=i.indexFrom+i.indexCount-s,t.splice(r+1,0,e),i.indexCount=s-i.indexFrom}return r}}}_addToList(e,t){const i=e.symbolLevel,s=e.zOrder,r=this._getDisplayList(i,s),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new X;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,q(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,i=e.zOrder,s=this._getDisplayList(t,i),r=s.length;let n;for(let t=0;t<r;++t){const i=s[t];if(e.indexFrom+e.indexCount>i.indexFrom&&e.indexFrom<i.indexFrom+i.indexCount&&i.geometryType===e.geometryType){n=t;break}}if(void 0!==n){const t=s[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&q(s,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(q(s,n,1),n-1):n;{const i=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new X;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=i+r+o,l.indexCount=a,q(s,n+1,0,l),n}}return null}_getDisplayList(e,t){let i;const s=this.symbolLevels.length;for(let t=0;t<s;t++)if(this.symbolLevels[t].symbolLevel===e){i=this.symbolLevels[t];break}let r;i||(i=new Q,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let e=0;e<n;e++)if(i.zLevels[e].zLevel===t){r=i.zLevels[e];break}return r||(r=new J,r.geometryDPInfo=new Y,r.zLevel=t,i.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class X{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new X;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Y{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Y;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class J{constructor(){this.geometryDPInfo=new Y}clone(){const e=new J;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Q{constructor(){this.zLevels=[]}clone(){const e=new Q;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class ${constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=i}}class ee{constructor(e,t,i,s=0,r=0){this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=s,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new ee(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const s=new $;for(const i in t){const r=t[i].stride,n=t[i].data,o=[],a=(0,G.Y8)(r);for(let t=0;t<r*e.vertexCount/a;++t)o[t]=n[t+r*e.vertexFrom/a];s.vertexData.set(i,o)}s.indexData.length=0;for(let t=0;t<e.indexCount;++t)s.indexData[t]=i[t+e.indexFrom]-e.vertexFrom;s.vertexCount=e.vertexCount,this.meshData=s}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new $;for(const t in e){const i=e[t].stride,s=e[t].data,r=[],n=(0,G.Y8)(i);for(let e=0;e<i*this.vertexCount/n;++e)r[e]=s[e+i*this.vertexFrom/n];this.meshData.vertexData.set(t,r)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,s){for(const i in t){const s=t[i].stride,r=this.meshData.vertexData.get(i),n=t[i].data,o=(0,G.Y8)(s);for(let t=0;t<s*this.meshData.vertexCount/o;++t)n[t+s*e/o]=r[t]}for(let t=0;t<this.meshData.indexData.length;++t)s[t+i]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,i){let s=0,r=0;for(const n of e)n.writeMeshDataToBuffers(s,t,r,i),s+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),s=e.readInt32(),r=new ee(t.id,i,s);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function te(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}class ie{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new ie(this.id);return e.set(this),e}clone(){const e=new ie(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),te(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new ie(t),s={id:t};return i.displayRecords=function(e,t,i){const s=e.readInt32(),r=new Array(s);for(let s=0;s<r.length;s++)r[s]=t.deserialize(e,i);return r}(e,ee,s),i}}class se{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new N;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new se;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return te(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),s=new Map;for(let t=0;t<i.length;++t){const r=ie.deserialize(e);i[t]=r,s.set(r.id,r)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=s}static deserialize(e){const t=new se;return t._deserializeObjects(e),t}}var re=i(18018);class ne{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,G.e2)(e.data,e.stride),i=e.stride;return new ne(t,i)}static fromVertexVector(e){const t=(0,G.e2)(e.data.buffer(),e.stride),i=e.stride;return new ne(t,i)}}class oe{constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}static decode(e){const t=e.geometryType,i=e.indexBuffer,s={};for(const t in e.namedBuffers)s[t]=ne.decode(e.namedBuffers[t]);return new oe(t,i,s)}static fromVertexData(e,t){const i=e.indices,s=(0,G.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new ne(s,r)};return new oe(t,i,n)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),s={};for(const t in e.namedVectors)s[t]=ne.fromVertexVector(e.namedVectors[t]);return new oe(t,i,s)}}var ae=i(93954);class le{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}}class he{constructor(e,t,i=!1){this.geometryType=e,this.indexVector=new ae.Z(Uint32Array,6*t),this.namedVectors={};const s=(0,G.$_)(e,i);for(const e in s){const i=s[e];let r;switch(i%4){case 0:case 2:r=new ae.Z(Uint32Array,i*t);break;case 1:case 3:r=new ae.Z(Uint8Array,i*t)}this.namedVectors[e]=new le(r,i)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),s={};t.push(i);for(const e in this.namedVectors){const i=this.namedVectors[e];s[e]={},i.transfer(s[e],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=s,this.destroy()}intoBuffers(){const e=oe.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const de=new K,ce=new K;function ue(e,t){const i={};for(const s in e){const r={data:(0,G.C$)(t,e[s]),stride:e[s]};i[s]=r}return i}class fe{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){de.reset();const e=function(e){const t=[[],[],[],[],[]],i=e;for(const e of i)for(const i of e.displayRecords)t[i.geometryType].push(i);return t}(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&de.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,i=new E;for(let e=0;e<t;++e){i.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*de.indicesFor(e)));const t=[];for(const i in this.tileBufferData.geometries[e].vertexBuffer)t.push(this.tileBufferData.geometries[e].vertexBuffer[i].stride);const s=fe._computeVertexAlignment(t),r=Math.round(1.5*de.verticesFor(e)),n=fe._align(r,s);for(const t in this.tileBufferData.geometries[e].vertexBuffer){const s=this.tileBufferData.geometries[e].vertexBuffer[t].stride;i.geometries[e].vertexBuffer[t]={stride:s,data:(0,G.C$)(n,s)}}}ce.reset(),this.tileDisplayData.displayList.clear();for(let s=0;s<t;++s){const t=e[s];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(ce.verticesFor(s),i.geometries[s].vertexBuffer,ce.indicesFor(s),i.geometries[s].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[s].vertexBuffer,r=this.tileBufferData.geometries[s].indexBuffer,n=i.geometries[s].vertexBuffer,o=i.geometries[s].indexBuffer,a=ce.verticesFor(s),l=ce.indicesFor(s);(0,G.wO)(a,l,n,o,e,t,r),e.vertexFrom=a,e.indexFrom=l}ce.needMore(s,e.vertexCount,e.indexCount)}}for(const e of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(e.displayRecords);this.tileBufferData=i}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const i=this.tileBufferData.geometries[t];e[t]={};for(const s in i.vertexBuffer)e[t][s]=i.vertexBuffer[s].stride}return e}clone(){const e=new fe;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let i=0;for(let s=0;s<t;s++)i=Math.max(i,e[s].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new ae.Z(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e,t){const i={},s=new Map;for(const e of t)s.set(e.id,e);return(0,G.Z_)((t=>{const r=e.data[t];if((0,o.pC)(r)){const e=re.$.from(r.records).getCursor();for(;e.next();){const i=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,h=s.get(i),d=new ee(i,t,r);d.indexFrom=n,d.indexCount=o,d.vertexFrom=a,d.vertexCount=l,h.displayRecords.push(d)}i[t]=oe.fromVertexData(r,t)}else i[t]=new he(t,0).intoBuffers()})),fe.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new fe,i=new se,s=new E;i.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const i=e.vertexBuffersMap[t];s.geometries[t].indexBuffer=i.indexBuffer,s.geometries[t].vertexBuffer=i.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=s,t}static bind(e,t){const i=new fe;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new fe;i.tileDisplayData=new se,i.tileDisplayData.displayObjects=e;const s=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),s[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new E,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(r[e]),i=ue(a[e],s[e]);ee.writeAllMeshDataToBuffers(n[e],i,t),o.geometries[e]={indexBuffer:t,vertexBuffer:i}}return i.tileBufferData=o,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(i=!0);return i?4:t?2:1}}var pe=i(88710),me=i(13191),ye=i(12044),ge=i(83823),xe=i(41808),_e=i(23031),ve=i(10289),be=i(3383),De=i(12065),we=i(98416),Ce=i(4094);class Be extends Ce.i{constructor(e,t){super(e,t,null)}static from(e){const t=we.s.createInstance(),i=[],s=e.filter((e=>!!e.geometry));for(const e of s){const t=(0,m.Ji)(e.geometry);(0,De.E7)(i,[e],t,!1,!1,"uid")}return new Be(t,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Be(this.instance,this._features);return this.copyInto(e),e}}var Fe=i(17321),Te=i(39947),Ie=i(27127),Le=i(50842),Re=i(56247),Se=i(60789),Me=i(18449),ze=i(7505),Ae=i(15540),Ge=i(62611);const Oe=new Ae.Z,Ue=new Ae.Z,ke="esriGeometryPolyline";function Ve(e){e.coords.length=0,e.lengths.length=0}class Pe{constructor(){this.bounds=(0,f.Ue)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,i,s,r,n){let o;return 0===Pe._pool.length?o=new Pe:(o=Pe._pool.pop(),this._set.delete(o)),o.acquire(e,t,i,s,r,n),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,m.oU)(e.geometry)){const i=e.symbol;if((0,o.Wi)(i))return null;if((0,Ge.yA)(i.type)||(0,Ge.ab)(i.type)){const i=(0,Me.tO)(e.geometry);return(0,ze.RF)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,i,s,r,n){e&&this.set(e,t,i,s,r,n)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,s,r,n){this.graphic=e,this.geometry=i,this.symbolResource=t,this.resolution=s,this.updateBounds(s,r,n)}updateBounds(e,t,i){(0,Ge.zX)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,i)}getGeometryQuantized(e,t,i){const s=this.geometry;if((0,m.oU)(s)){const t=s.rings;if(1===t.length&&2===t[0].length)return(0,ze.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,m.l9)(s))return Ve(Oe),Ve(Ue),(0,De.u0)(Oe,s),(0,De.zj)(Ue,Oe,s.hasZ,s.hasM,ke,e.scale[0]),(0,De.Nh)(Oe,Ue,s.hasZ,s.hasM,ke,e),(0,De.J6)(Oe,s.hasZ,s.hasM);if((0,m.aW)(s)){const r=this.resolution*this.size[0],[n,o]=(0,x.uS)(i),a=o-n,l=s.points.filter((e=>{if(e[0]+r>o||e[0]-r<n){const i=[...e];return e[0]+r>o?i[0]-=a:i[0]+=a,(0,f.Zm)(t,e,r)||(0,f.Zm)(t,i,r)}return(0,f.Zm)(t,e,r)}));return 0===l.length?{points:l}:(0,ze.ym)(e,{points:l})}}return(0,ze.ym)(e,this.geometry)}}Pe._pool=[],Pe._set=new Set;const je={minX:0,minY:0,maxX:0,maxY:0},Ze=(0,f.Ue)(),Ke=1e-5;function Ee(e,t,i,s,r){return je.minX=t,je.minY=i,je.maxX=s,je.maxY=r,e.search(je)}function He(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class qe{constructor(e,t,i,s,r,n){this._graphics=s,this._onAdd=r,this._onRemove=n,this._index=(0,Te.r)(9,He),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=i;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level));const a=e.spatialReference;this._metersPerUnit=(0,_.JY)(a)?(0,Fe.Z7)(e.spatialReference):1}hitTest(e,t,i,s,r){e=(0,Re.or)(e,this._tileInfoView.spatialReference);const n=.5*s*i;Ze[0]=e-n,Ze[1]=t-n,Ze[2]=e+n,Ze[3]=t+n;const o=.5*s*(i+Ge.y1),a=Ee(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const h={x:e,y:t},d=[];let c;for(const i of a)if(i.graphic.visible)switch((0,m.Ji)(i.geometry)){case"esriGeometryPoint":{const e=i.symbol;if(!e)continue;const t=i.geometry,{x:n,y:o}=t,a=s*this._metersPerUnit;let l;switch(e.type){case"esriTS":l=(0,Ge.Zw)(n,o,e,i.size,s,r);break;case"expanded-cim":l=(0,Ge.oD)(n,o,e,s,a,r);break;case"esriSMS":case"esriPMS":l=(0,Ge.Il)(n,o,e,s,a,r)}(0,Ie.CI)(l,h)&&d.push(i)}break;case"esriGeometryPolyline":{const r=i.symbol;let n=0;if("expanded-cim"===r.type){const e=r.layers;if(!e||0===e.length)continue;const t=e.findIndex((e=>"line"===e.type));if(-1===t)continue;const i=e[t];n=(0,Se.hf)(i.width,null,null)}else{const e=r.layers;if(!e||0===e.length)continue;n=e[0].width}c=1.5*s*window.devicePixelRatio*(0,l.F2)(n),(0,Ge.nl)(i.geometry,e,t,c)&&d.push(i)}break;case"esriGeometryEnvelope":{const e=i.geometry,t=(0,f.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,f.kK)(t,Ze)&&d.push(i);break}case"esriGeometryPolygon":{if((0,Ie.CI)(i.geometry,h)){d.push(i);break}const e=(0,Le._w)(i.geometry);if(Math.abs(e.ymax-e.ymin)<5*s||Math.abs(e.xmax-e.xmin)<5*s){const t=(0,f.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,f.kK)(t,Ze)&&d.push(i)}break}case"esriGeometryMultipoint":{const e=i.symbol;if(!e)continue;const t=i.geometry.points;let n;for(let o=0;o<t.length;o++)if(n="esriTS"===e.type?(0,Ge.Zw)(t[o][0],t[o][1],e,i.size,s,r):(0,Ge.Il)(t[o][0],t[o][1],e,s,s*this._metersPerUnit,r),(0,Ie.CI)(n,h)){d.push(i);break}break}}return d.sort(((e,t)=>{const i=(0,Ge.eT)(e.graphic),s=(0,Ge.eT)(t.graphic);return i===s?t.zorder-e.zorder:i-s})),d.map((e=>e.graphic))}getGraphicsData(e,t,i){const s=this._searchForItems(t);if(0===s.length||0===i.length)return[];s.sort(((e,t)=>e.zorder-t.zorder)),s[0].insertAfter=-1;for(let e=1;e<s.length;e++)s[e].insertAfter=s[e-1].graphic.uid;s.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const h of i){for(o=-2;n<s.length;)if(r=s[n],n++,h.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const i=r.getGeometryQuantized(l,t.bounds,this._tileInfoView.spatialReference),d={...r.graphic.attributes};d[this._uidFieldName]=h.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),a.push({centroid:Pe.getCentroidQuantized(r,l),geometry:i,attributes:d,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return a.sort(((e,t)=>e.zorder-t.zorder)),a}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:s}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[s,s],translate:[i[0],i[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const s=Pe.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,s),i&&this._index.insert(s),s.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let s=0;s<e.length;s++)i=e[s],t=this._itemByGraphic.get(i),t&&(t.zorder=s)}update(e,t,i){const s=this._itemByGraphic.get(e);s.groupId=null;const r=(0,f.d9)(s.bounds);return s.size[0]=s.size[1]=0,this._index.remove(s),s.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(s),{oldBounds:r,newBounds:s.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView,i=t.getTileResolution(e);this._resolution=i,this._index.clear();const s=this._itemByGraphic,r=[];for(const[e,i]of s)i.updateBounds(this._resolution,this._resolution*this._metersPerUnit,t.spatialReference),i.geometry&&r.push(i);this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,s,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a}=r;let l,h,d,c;i.sort(((e,t)=>e.zorder-t.zorder));for(let r=0;r<i.length;r++){d=i[r],l=d.graphic,h=d.getGeometryQuantized(s,a,o),c=0===r?-1:i[r-1].graphic.uid;const u={...d.graphic.attributes};u[n]=l.uid,null==d.groupId&&(d.groupId=t.createTemplateGroup(d.symbol,null)),e.push({centroid:Pe.getCentroidQuantized(d,s),geometry:h,attributes:u,symbol:d.symbol,groupId:d.groupId,insertAfter:c,zorder:d.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[s,r]=(0,x.uS)(t),n=Math.abs(i[2]-r)<Ke,o=Math.abs(i[0]-s)<Ke;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,f.Ue)(n?[s,i[1],s+t*Ge.y1,i[3]]:[r-t*Ge.y1,i[1],r,i[3]]);const a=Ee(this._index,i[0],i[1],i[2],i[3]),l=Ee(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return Ee(this._index,i[0],i[1],i[2],i[3])}}var We=i(86618);const Ne=e=>{let t=class extends((0,We.I)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,s._)([(0,h.Cb)()],t.prototype,"graphics",void 0),(0,s._)([(0,h.Cb)()],t.prototype,"renderer",void 0),(0,s._)([(0,h.Cb)()],t.prototype,"updating",void 0),(0,s._)([(0,h.Cb)()],t.prototype,"view",void 0),t=(0,s._)([(0,d.j)("esri.views.layers.GraphicsView")],t),t};var Xe=i(35119);function Ye(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let Je=class extends(Ne((0,n.p)(r.Z))){constructor(e){super(e),this._storage=new be.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const i=(0,_e.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,xe.fL)(i,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new ve.ZP({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Xe.Z)()),this.container.hasHighlight=()=>!!this._highlightIds.size,this._graphicStore=new qe(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new ye.W(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,e),this._meshFactory=new me.j(null,this.uid,e),this._templateStore=e,this.handles.add([this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics"),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const i=this.view.toMap((0,l.vW)(e,t));return this.searchFeatures(i).then((e=>e&&e.length?e[0]:null))}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){(0,a.k_)(this._controller.signal);const t=e.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:s}=e;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,s),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,f.bf)(t)||0===(0,f.Cb)(t))return[];const i=(0,Ge.Zu)(t,this.view.spatialReference);return(0,o.pC)(i)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,a.k_)(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),s=await this._processGraphics(t,i);return(0,a.k_)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0,clear:!1,sort:!1}),s}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,Ye(r,e,s).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=i.length;for(let t=0;t<e.length;t++){const i=e[t];o[a+t]=i,this._graphicsSet.add(i),n.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t)r=i.id,Ye(r,i,s).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,Ye(r,e,s).addedOrModified.push(l)}this._graphicStore.updateZ();const h=[];for(const[e,t]of s)h.push(this._updateTile(t));await Promise.all(h)}catch(e){(0,a.D_)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,{});t&&this._hashToExpandedSymbol.delete(t.hash())}catch(e){(0,a.D_)(e)}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,o.Wi)(e.geometry)?null:{geometryType:(0,m.Ji)(e.geometry),spatialReference:u.Z.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return(0,a.k_)(this._controller.signal),(0,o.pC)(e.symbol)?e.symbol:(0,o.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if((0,a.k_)(this._controller.signal),!this.container.stage)return null;const i=await this._getSymbolForGraphic(e,t),s=i.hash();let r=this._hashToExpandedSymbol.get(s);if(!r){let n=this._hashTpExpandedSymbolPromise.get(s);if(n)r=await n,(0,a.k_)(this._controller.signal);else{const o=this._getArcadeInfo(e),l=(0,_e.PY)(i);n=(0,I.B)(l,o,t),this._hashTpExpandedSymbolPromise.set(s,n);try{r=await n,this._hashTpExpandedSymbolPromise.delete(s),this._hashToExpandedSymbol.set(s,r)}catch(e){this._hashTpExpandedSymbolPromise.delete(s),(0,a.k_)(e)}}}if("esriTS"===r.type){const e=[],[t]=(0,ge.E)(r.text);for(let i=0;i<t.length;i++)e.push(t.charCodeAt(i));const i={symbol:r,id:0,glyphIds:e},[{mosaicItem:s}]=await this.container.getMaterialItems([i]);return{symbol:r,mosaicItem:s}}return{symbol:r,mosaicItem:null}}async _projectAndNormalizeGeometry(e,t){if((0,a.k_)(this._controller.signal),(0,o.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let i=e.geometry;if((0,m.oU)(i)){const e=i.rings;i.rings=e}else if((0,m.l9)(i)){const e=i.paths;i.paths=e}else if((0,m.YX)(i)){const s=await this._getSymbolForGraphic(e,t);(0,a.k_)(this._controller.signal),i=(0,Ge.yA)(s.type)||(0,Ge.ab)(s.type)?i.center:c.Z.fromExtent(i)}await(0,T._W)(i.spatialReference,this.view.spatialReference);const s=function(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const i=e.spatialReference,s=(0,_.C5)(i);if(!s)return e.toJSON();const r=i.isWebMercator?102100:4326,n=x.UZ[r].maxX,o=x.UZ[r].minX,a=x.UZ[r].plus180Line,l=x.UZ[r].minus180Line;let h;const d=e.toJSON();if((0,m.wp)(d))h=b(d,n,o);else if((0,m.aW)(d))d.points=d.points.map((e=>b(e,n,o))),h=d;else if((0,m.YX)(d))h=v(d,s);else if((0,m.oU)(d)||(0,m.l9)(d)){const e=F;(0,y.$P)(e,d);const i={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},s=(0,x.XZ)(i.xmin,o)*(2*n),r=0===s?d:function(e,t){const i=(0,x.x3)(e);for(const e of i)for(const i of e)i[0]+=t;return e}(d,s);i.xmin+=s,i.xmax+=s,(0,g.jQ)(i,a)&&i.xmax!==n||(0,g.jQ)(i,l)&&i.xmin!==o?t=r:h=r}else h=e.toJSON();return null!==t?(new B).cut(t,n):h}(i),r=(0,T.iV)(s,i.spatialReference,this.view.spatialReference);return(0,p.pW)(r),r}_onTileUpdate(e){const t=(0,_.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,a.k_)(this._controller.signal);const t=(0,a.yi)();this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{await this._addOrUpdateGraphic(e,i),(0,a.k_)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,a.D_)(t))throw t}}async _updateGraphic(e,t){(0,a.k_)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t),[r,n]=await Promise.all([i,s]);(0,a.k_)(this._controller.signal),this._graphicStore.addOrModify(e,n,r)}async _addOrUpdateGraphic(e,t){(0,a.k_)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);try{const[t,r]=await Promise.all([i,s]);(0,a.k_)(this._controller.signal),this._addProjectedGraphic(e,r,t)}catch(e){if(!(0,a.D_)(e))throw e}}_addProjectedGraphic(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,f.Ue)(),e),i=new Z(e,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(0===s.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&((0,m.wp)(e.geometry)||(0,m.aW)(e.geometry))&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,s),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(e){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,a.D_)(e))throw e}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?R.Zd:0))}_getGraphicsData(e,t,i){const s=(0,_.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&((0,m.wp)(t.geometry)||(0,m.aW)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const i=e.geometry;(0,m.aW)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,s=[];let r=0,n=0;for(const[e,o]of i){if(s.push([e+r,o]),r=0,t===Ge.I_){const i=5*Ge.y1;e+n<i?(s.push([t,0]),r=-t):e+n>Ge.I_-i&&(s.push([-t,0]),r=t)}else e+n<-Ge.y1?(s.push([t,0]),r=-t):e+n>Ge.I_+Ge.y1&&(s.push([-t,0]),r=t);n+=e}e.points=s}_wrapPoint(e,t){const i=e.geometry;if(t===Ge.I_){const s=5*Ge.y1;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Ge.I_-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-Ge.y1?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Ge.I_+Ge.y1&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}async _processGraphics(e,t,i){if(!t||!t.length||!this._meshFactory)return null;const s=Be.from(t),r=this._meshFactory,n=await this._matcher;return await r.analyzeGraphics(s,n,null,null,i),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,s)}_processAnalyzedGraphics(e,t){const i=this._meshFactory,s=t.getSize(),r=t.getCursor(),n={features:s,records:s,metrics:0},o=new pe._(e.key.id,n,!1,!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const s=new ie(t.displayId);s.insertAfter=t.insertAfter,a.push(s),i.writeGraphic(o,r,e.level)}const l=e.tileInfoView.tileInfo.isWrappable,h=o.serialize(l);if(1!==h.length)return new fe;const d=h[0].message;return fe.fromVertexData(d,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,m.l9)(t)?L.mW:(0,m.oU)(t)||(0,m.YX)(t)?L.kD:L.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,s._)([(0,h.Cb)({constructOnly:!0})],Je.prototype,"requestUpdateCallback",void 0),(0,s._)([(0,h.Cb)()],Je.prototype,"container",void 0),(0,s._)([(0,h.Cb)({constructOnly:!0})],Je.prototype,"graphics",void 0),(0,s._)([(0,h.Cb)()],Je.prototype,"updating",null),(0,s._)([(0,h.Cb)()],Je.prototype,"view",void 0),(0,s._)([(0,h.Cb)()],Je.prototype,"updateRequested",void 0),Je=(0,s._)([(0,d.j)("esri.views.2d.layers.support.GraphicsView2D")],Je);var Qe=Je}}]);