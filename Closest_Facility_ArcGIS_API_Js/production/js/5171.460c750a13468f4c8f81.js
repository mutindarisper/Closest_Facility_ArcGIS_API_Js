"use strict";(self.webpackChunkarcgis_rm=self.webpackChunkarcgis_rm||[]).push([[5171],{45171:(e,t,i)=>{i.r(t),i.d(t,{default:()=>A});var r=i(36663),a=i(66341),l=i(70375),s=i(13802),n=i(61681),o=i(15842),h=i(78668),c=i(3466),p=i(81977),d=(i(39994),i(7283),i(34248)),u=i(12571),m=i(64307),v=i(76136),y=i(89993),f=i(87232),_=i(43330),b=i(18241),g=i(51599),w=i(7753),S=i(23148),C=i(47109);const T=s.Z.getLogger("esri.core.workers.WorkerHandle");class L extends class{constructor(e,t,i,r={}){this._mainMethod=t,this._listeners=[],this._promise=(0,C.bA)(e,{...r,schedule:i}).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,r.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>T.error(`Failed to initialize ${e} worker: ${t}`)))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),(0,S.kB)((()=>{i.removed=!0,(0,w.Od)(this._listeners,i),this._thread&&(0,n.pC)(i.threadHandle)&&i.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const r=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:r,signal:i})}return this._promise?this._promise.then((()=>((0,h.k_)(i),this.invokeMethod(e,t,i)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}{constructor(e=null){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}getTransferList(e){return[e.buffer]}release(){--this.ref<=0&&(D.forEach(((e,t)=>{e===this&&D.delete(t)})),this.destroy())}}const D=new Map,x=s.Z.getLogger("esri.layers.ElevationLayer");let O=class extends((0,y.Z)((0,f.Y)((0,_.q)((0,b.I)((0,o.R)(v.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e=null){let t=D.get((0,n.Wg)(e));return t||((0,n.pC)(e)?(t=new L((t=>e.schedule(t))),D.set(e,t)):(t=new L,D.set(null,t))),++t.ref,t}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,n.RY)(this._lercDecoder)}set minScale(e){this.constructed&&x.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&x.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=(0,n.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new l.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(h.r9).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,r){const l=(0,n.pC)((r=r||{signal:null}).signal)?r.signal:r.signal=(0,h.yi)().signal,s={responseType:"array-buffer",signal:l},o={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,r))).then((()=>(0,a.default)(this.getTileUrl(e,t,i),s))).then((e=>this._lercDecoder.decode(e.data,o,l))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,i){const r=!this.tilemapCache&&this.supportsBlankTile,a=(0,c.B7)({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${a?"?"+a:""}`}async queryElevation(e,t){const{ElevationQuery:r}=await i.e(6646).then(i.bind(i,86646));return(0,h.k_)(t),(new r).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:r}=await i.e(6646).then(i.bind(i,86646));return(0,h.k_)(t),(new r).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,r):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await(0,a.default)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,r._)([(0,p.Cb)({json:{read:{source:"copyrightText"}}})],O.prototype,"copyright",void 0),(0,r._)([(0,p.Cb)({readOnly:!0,type:m.Z})],O.prototype,"heightModelInfo",void 0),(0,r._)([(0,p.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],O.prototype,"path",void 0),(0,r._)([(0,p.Cb)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,r._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],O.prototype,"minScale",null),(0,r._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],O.prototype,"maxScale",null),(0,r._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],O.prototype,"opacity",void 0),(0,r._)([(0,p.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],O.prototype,"operationalLayerType",void 0),(0,r._)([(0,p.Cb)()],O.prototype,"sourceJSON",void 0),(0,r._)([(0,p.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],O.prototype,"type",void 0),(0,r._)([(0,p.Cb)(g.HQ)],O.prototype,"url",void 0),(0,r._)([(0,p.Cb)()],O.prototype,"version",void 0),(0,r._)([(0,d.r)("version",["currentVersion"])],O.prototype,"readVersion",null),O=(0,r._)([(0,u.j)("esri.layers.ElevationLayer")],O),O.prototype.fetchTile.__isDefault__=!0;var A=O},89993:(e,t,i)=>{i.d(t,{Z:()=>c});var r=i(36663),a=(i(91957),i(81977)),l=(i(39994),i(7283),i(13802),i(34248)),s=i(12571),n=i(58269),o=i(52953),h=i(14685);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new o.y({layer:this}):null}};return(0,r._)([(0,a.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,a.Cb)()],t.prototype,"minScale",void 0),(0,r._)([(0,l.r)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,a.Cb)()],t.prototype,"maxScale",void 0),(0,r._)([(0,l.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,a.Cb)({type:h.Z})],t.prototype,"spatialReference",void 0),(0,r._)([(0,a.Cb)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,r._)([(0,a.Cb)(n.h)],t.prototype,"tileInfo",void 0),(0,r._)([(0,a.Cb)()],t.prototype,"tilemapCache",void 0),(0,r._)([(0,l.r)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,r._)([(0,a.Cb)()],t.prototype,"version",void 0),t=(0,r._)([(0,s.j)("esri.layers.mixins.ArcGISCachedService")],t),t}},52953:(e,t,i)=>{i.d(t,{y:()=>T});var r,a=i(36663),l=i(66341),s=i(23657),n=i(70375),o=i(44584),h=i(13802),c=i(55854),p=i(17135),d=i(78668),u=i(63625),m=i(3466),v=i(15071),y=i(81977),f=(i(39994),i(69236)),_=i(12571),b=i(7753),g=i(67134);class w{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,a=i>>3,l=this._tileAvailabilityBitSet;return a<0||a>l.length?"unknown":l[a]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,a=!0;const l=Math.ceil(t*i/8),s=new Uint8Array(l);let n=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(a=!1,s[n]|=1<<i):r=!1,7===i&&++n}a?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||l.default,{row:r,col:a,width:s,height:o}=e,h={query:{f:"json"}};return t=t?{...h,...t}:h,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:a,width:s,height:o},valid:!0,data:(0,b.a9)(s*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==r||e.location.left!==a||e.location.width!==s||e.location.height!==o))throw new n.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:a,width:s,height:o}});return w.fromJSON(e)}))}static fromJSON(e){w.validateJSON(e);const t=new w;return t.location=Object.freeze((0,g.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new n.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new n.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new n.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new n.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new n.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const C=h.Z.getLogger("esri.layers.support.TilemapCache");let T=r=class extends s.Z{constructor(e){super(e),this._handles=new o.Z,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=l.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new c.Z(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(()=>this._initializeTilemapDefinition())),(0,v.S1)(this,"layer.tileInfo.lods",(e=>this._initializeAvailableLevels(e)),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(C.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new n.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,l=this._tilemapFromCache(e,t,i,a);if(l)return Promise.resolve(l);const s=r&&r.signal;return r={...r,signal:null},new Promise(((e,t)=>{(0,d.fu)(s,(()=>t((0,d.zE)())));const i=S(a);let l=this._pendingTilemapRequests[i];if(!l){l=w.fromDefinition(a,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=l,l.then(e,e)}l.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,r){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;for(a.updateTileInfo(r);;){const e=this.getAvailability(r.level,r.row,r.col);if("unavailable"!==e)return e;if(!a.upsampleTile(r))return"unavailable"}}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof w){const a=r.getAvailability(t,i);return"unavailable"===a?Promise.reject(new n.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):a}if((0,d.D_)(r))throw r;return"unknown"})):Promise.reject(new n.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;l.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,a).catch((e=>{if((0,d.D_)(e))throw e;if(l.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,l,s){if(!this._prefetchingEnabled)return;const n=`prefetch-${e}`;if(this._handles.has(n))return;const o=(0,d.yi)();s.then((()=>o.abort()),(()=>o.abort()));let h=!1;const c={remove(){h||(h=!0,o.abort())}};if(this._handles.add(c,n),await(0,u.MU)(10,o.signal).catch((()=>{})),h||(h=!0,this._handles.remove(n)),(0,d.Hc)(o))return;const p={id:e,level:t,row:i,col:a},m={...l,signal:o.signal},v=this.layer.tileInfo;for(let e=0;r._prefetches.length<r._maxPrefetch&&v.upsampleTile(p);++e){const e=this.fetchAvailability(p.level,p.row,p.col,m);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?(0,m.B7)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const a=S(r);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};T._maxPrefetch=4,T._prefetches=new p.Z({initialSize:r._maxPrefetch}),(0,a._)([(0,y.Cb)({constructOnly:!0,type:Number})],T.prototype,"levels",void 0),(0,a._)([(0,f.p)("levels")],T.prototype,"castLevels",null),(0,a._)([(0,y.Cb)({readOnly:!0,type:Number})],T.prototype,"size",null),(0,a._)([(0,y.Cb)({constructOnly:!0,type:Number})],T.prototype,"cacheByteSize",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],T.prototype,"layer",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],T.prototype,"request",void 0),T=r=(0,a._)([(0,_.j)("esri.layers.support.TilemapCache")],T)},58269:(e,t,i)=>{i.d(t,{d:()=>l,h:()=>a});var r=i(81590);const a={type:r.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:l}}}}};function l(e,t,i,a){if(!e)return null;const{minScale:l,maxScale:s,minLOD:n,maxLOD:o}=t;if(null!=n&&null!=o)return a&&a.ignoreMinMaxLOD?r.Z.fromJSON(e):r.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=n&&e<=o))});if(0!==l&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=l?t(l):1/0,a=s?t(s):-1/0;return r.Z.fromJSON({...e,lods:e.lods.filter((e=>{const r=t(e.scale);return r<=i&&r>=a}))})}return r.Z.fromJSON(e)}}}]);