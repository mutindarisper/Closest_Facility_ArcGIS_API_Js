"use strict";(self.webpackChunkarcgis_rm=self.webpackChunkarcgis_rm||[]).push([[6889],{75369:(e,t,i)=>{i.r(t),i.d(t,{default:()=>U});var r=i(36663),l=(i(91957),i(66341)),a=i(70375),s=i(53280),n=i(61681),o=i(15842),h=i(78668),c=i(3466),p=i(81977),u=(i(39994),i(69236)),d=(i(13802),i(34248)),f=i(12571),v=i(39835),y=i(76136),m=i(91223),_=i(89993),b=i(81432),g=i(87232),w=i(48547),S=i(63989),T=i(43330),C=i(18241),O=i(12478),A=i(95874),L=i(80002),D=i(20692),$=i(51599),Z=i(23875),I=i(14685);const N=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let x=class extends((0,w.h)((0,L.x)((0,A.M)((0,T.q)((0,C.I)((0,_.Z)((0,b.O)((0,g.Y)((0,o.R)((0,s.p)((0,O.Q)((0,m.V)((0,S.N)(y.Z)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,n.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(h.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}get attributionDataUrl(){var e;const t=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return t&&this._getDefaultAttribution(this._getMapName(t))}readSpatialReference(e,t){return(e=e||t.tileInfo&&t.tileInfo.spatialReference)&&I.Z.fromJSON(e)}writeSublayers(e,t,i,r){if(!this.loaded||!e)return;const l=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),a=[],s={writeSublayerStructure:!1,...r};l.forEach((e=>{const t=e.write({},s);a.push(t)})),a.some((e=>Object.keys(e).length>1))&&(t.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,c.mN)(e).path)):null}fetchTile(e,t,i,r={}){const{signal:a}=r,s=this.getTileUrl(e,t,i),n={responseType:"image",signal:a,query:{...this.refreshParameters}};return(0,l.default)(s,n).then((e=>e.data))}getTileUrl(e,t,i){const r=!this.tilemapCache&&this.supportsBlankTile,l=(0,c.B7)({...this.parsedUrl.query,blankTile:!r&&null,...this.customParameters,token:this.apiKey}),a=this.tileServers;return`${a&&a.length?a[t%a.length]:this.parsedUrl.path}/tile/${e}/${t}/${i}${l?"?"+l:""}`}_fetchService(e){return new Promise(((t,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new a.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new a.Z("tile-layer:undefined-url","layer's url is not defined");const r=(0,D.Qc)(this.parsedUrl.path);if((0,n.pC)(r)&&"ImageServer"===r.serverType)throw new a.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,l.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t,i)})).then((t=>{if(t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,D.M8)(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,t){if(!(0,D.B5)(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,l.default)(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new a.Z("tile-layer:version-not-available")}))}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t&&t[2]}_getDefaultAttribution(e){if(!e)return;let t;e=e.toLowerCase();for(let i=0,r=N.length;i<r;i++)if(t=N[i],t.toLowerCase().indexOf(e)>-1)return(0,c.hF)("//static.arcgis.com/attribution/"+t)}_getDefaultTileServers(e){const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||i?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,r._)([(0,p.Cb)({readOnly:!0})],x.prototype,"attributionDataUrl",null),(0,r._)([(0,p.Cb)({type:["show","hide","hide-children"]})],x.prototype,"listMode",void 0),(0,r._)([(0,p.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],x.prototype,"isReference",void 0),(0,r._)([(0,p.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],x.prototype,"operationalLayerType",void 0),(0,r._)([(0,p.Cb)({type:Boolean})],x.prototype,"resampling",void 0),(0,r._)([(0,p.Cb)()],x.prototype,"sourceJSON",void 0),(0,r._)([(0,p.Cb)({type:I.Z})],x.prototype,"spatialReference",void 0),(0,r._)([(0,d.r)("spatialReference",["spatialReference","tileInfo"])],x.prototype,"readSpatialReference",null),(0,r._)([(0,p.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],x.prototype,"path",void 0),(0,r._)([(0,p.Cb)({readOnly:!0})],x.prototype,"sublayers",void 0),(0,r._)([(0,v.c)("sublayers",{layers:{type:[Z.Z]}})],x.prototype,"writeSublayers",null),(0,r._)([(0,p.Cb)({json:{read:!1,write:!1}})],x.prototype,"popupEnabled",void 0),(0,r._)([(0,p.Cb)()],x.prototype,"tileServers",null),(0,r._)([(0,u.p)("tileServers")],x.prototype,"castTileServers",null),(0,r._)([(0,p.Cb)({readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),(0,r._)([(0,p.Cb)($.HQ)],x.prototype,"url",void 0),x=(0,r._)([(0,f.j)("esri.layers.TileLayer")],x),x.prototype.fetchTile.__isDefault__=!0;var U=x},89993:(e,t,i)=>{i.d(t,{Z:()=>c});var r=i(36663),l=(i(91957),i(81977)),a=(i(39994),i(7283),i(13802),i(34248)),s=i(12571),n=i(58269),o=i(52953),h=i(14685);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new o.y({layer:this}):null}};return(0,r._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,l.Cb)()],t.prototype,"minScale",void 0),(0,r._)([(0,a.r)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,l.Cb)()],t.prototype,"maxScale",void 0),(0,r._)([(0,a.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,l.Cb)({type:h.Z})],t.prototype,"spatialReference",void 0),(0,r._)([(0,l.Cb)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,r._)([(0,l.Cb)(n.h)],t.prototype,"tileInfo",void 0),(0,r._)([(0,l.Cb)()],t.prototype,"tilemapCache",void 0),(0,r._)([(0,a.r)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,r._)([(0,l.Cb)()],t.prototype,"version",void 0),t=(0,r._)([(0,s.j)("esri.layers.mixins.ArcGISCachedService")],t),t}},52953:(e,t,i)=>{i.d(t,{y:()=>C});var r,l=i(36663),a=i(66341),s=i(23657),n=i(70375),o=i(44584),h=i(13802),c=i(55854),p=i(17135),u=i(78668),d=i(63625),f=i(3466),v=i(15071),y=i(81977),m=(i(39994),i(69236)),_=i(12571),b=i(7753),g=i(67134);class w{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,l=i>>3,a=this._tileAvailabilityBitSet;return l<0||l>a.length?"unknown":a[l]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,l=!0;const a=Math.ceil(t*i/8),s=new Uint8Array(a);let n=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(l=!1,s[n]|=1<<i):r=!1,7===i&&++n}l?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||a.default,{row:r,col:l,width:s,height:o}=e,h={query:{f:"json"}};return t=t?{...h,...t}:h,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:l,width:s,height:o},valid:!0,data:(0,b.a9)(s*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==r||e.location.left!==l||e.location.width!==s||e.location.height!==o))throw new n.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:l,width:s,height:o}});return w.fromJSON(e)}))}static fromJSON(e){w.validateJSON(e);const t=new w;return t.location=Object.freeze((0,g.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new n.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new n.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new n.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new n.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new n.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function S(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const T=h.Z.getLogger("esri.layers.support.TilemapCache");let C=r=class extends s.Z{constructor(e){super(e),this._handles=new o.Z,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=a.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new c.Z(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],(()=>this._initializeTilemapDefinition())),(0,v.S1)(this,"layer.tileInfo.lods",(e=>this._initializeAvailableLevels(e)),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(T.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new n.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,l);if(a)return Promise.resolve(a);const s=r&&r.signal;return r={...r,signal:null},new Promise(((e,t)=>{(0,u.fu)(s,(()=>t((0,u.zE)())));const i=S(l);let a=this._pendingTilemapRequests[i];if(!a){a=w.fromDefinition(l,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=a,a.then(e,e)}a.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,r){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;for(l.updateTileInfo(r);;){const e=this.getAvailability(r.level,r.row,r.col);if("unavailable"!==e)return e;if(!l.upsampleTile(r))return"unavailable"}}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof w){const l=r.getAvailability(t,i);return"unavailable"===l?Promise.reject(new n.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):l}if((0,u.D_)(r))throw r;return"unknown"})):Promise.reject(new n.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,l){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;a.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,l).catch((e=>{if((0,u.D_)(e))throw e;if(a.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,l,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,a,s){if(!this._prefetchingEnabled)return;const n=`prefetch-${e}`;if(this._handles.has(n))return;const o=(0,u.yi)();s.then((()=>o.abort()),(()=>o.abort()));let h=!1;const c={remove(){h||(h=!0,o.abort())}};if(this._handles.add(c,n),await(0,d.MU)(10,o.signal).catch((()=>{})),h||(h=!0,this._handles.remove(n)),(0,u.Hc)(o))return;const p={id:e,level:t,row:i,col:l},f={...a,signal:o.signal},v=this.layer.tileInfo;for(let e=0;r._prefetches.length<r._maxPrefetch&&v.upsampleTile(p);++e){const e=this.fetchAvailability(p.level,p.row,p.col,f);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?(0,f.B7)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const l=S(r);return this._tilemapCache.get(l)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};C._maxPrefetch=4,C._prefetches=new p.Z({initialSize:r._maxPrefetch}),(0,l._)([(0,y.Cb)({constructOnly:!0,type:Number})],C.prototype,"levels",void 0),(0,l._)([(0,m.p)("levels")],C.prototype,"castLevels",null),(0,l._)([(0,y.Cb)({readOnly:!0,type:Number})],C.prototype,"size",null),(0,l._)([(0,y.Cb)({constructOnly:!0,type:Number})],C.prototype,"cacheByteSize",void 0),(0,l._)([(0,y.Cb)({constructOnly:!0})],C.prototype,"layer",void 0),(0,l._)([(0,y.Cb)({constructOnly:!0})],C.prototype,"request",void 0),C=r=(0,l._)([(0,_.j)("esri.layers.support.TilemapCache")],C)},58269:(e,t,i)=>{i.d(t,{d:()=>a,h:()=>l});var r=i(81590);const l={type:r.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:a}}}}};function a(e,t,i,l){if(!e)return null;const{minScale:a,maxScale:s,minLOD:n,maxLOD:o}=t;if(null!=n&&null!=o)return l&&l.ignoreMinMaxLOD?r.Z.fromJSON(e):r.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=n&&e<=o))});if(0!==a&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=a?t(a):1/0,l=s?t(s):-1/0;return r.Z.fromJSON({...e,lods:e.lods.filter((e=>{const r=t(e.scale);return r<=i&&r>=l}))})}return r.Z.fromJSON(e)}},89280:(e,t,i)=>{function r(e){var t;const i=e.layer;return"floorInfo"in i&&null!=(t=i.floorInfo)&&t.floorField&&"floors"in e.view?s(e.view.floors,i.floorInfo.floorField):null}function l(e,t){var i;return"floorInfo"in t&&null!=(i=t.floorInfo)&&i.floorField?s(e,t.floorInfo.floorField):null}function a(e,t){const{definitionExpression:i}=t;return e?i?`(${i}) AND (${e})`:e:i}function s(e,t){if(null==e||!e.length)return null;const i=e.filter((e=>""!==e)).map((e=>`'${e}'`));return i.push("''"),`${t} IN (${i.join(",")}) OR ${t} IS NULL`}i.d(t,{Hp:()=>a,cx:()=>r,ff:()=>l})}}]);