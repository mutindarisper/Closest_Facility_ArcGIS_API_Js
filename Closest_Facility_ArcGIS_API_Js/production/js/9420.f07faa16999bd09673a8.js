"use strict";(self.webpackChunkarcgis_rm=self.webpackChunkarcgis_rm||[]).push([[9420],{68577:(e,t,r)=>{r.d(t,{yZ:()=>i});var s=r(17321);function i(e,t){const r=t||e.extent,i=e.width,a=(0,s.c9)(r&&r.spatialReference);return r&&i?r.width/i*a*s.hd*96:0}},69420:(e,t,r)=>{r.r(t),r.d(t,{default:()=>T});var s=r(36663),i=r(66341),a=r(37956),o=r(70375),l=r(53280),n=r(63592),y=r(61681),p=r(15842),h=r(78668),u=r(81977),c=(r(39994),r(7283)),m=(r(13802),r(34248)),d=r(12571),b=r(39835),g=r(65943),f=r(91772),v=r(68577),S=r(76136),x=r(91223),_=r(81432),C=r(87232),O=r(48547),w=r(63989),L=r(43330),E=r(18241),I=r(12478),P=r(95874),N=r(80002),D=r(2030),M=r(51599),J=r(24065),j=r(23875),F=r(93698);let R=class extends((0,O.h)((0,D.n)((0,P.M)((0,N.x)((0,_.O)((0,C.Y)((0,L.q)((0,E.I)((0,p.R)((0,I.Q)((0,x.V)((0,w.N)((0,l.p)(S.Z)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,y.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(h.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,g.M9)(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=(0,F.QV)(i,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=(0,F.QV)(i,e.sublayers,(0,g.M9)(e.origin))}}const o=[],l={writeSublayerStructure:a,...s};let n=a;i.forEach((e=>{const t=e.write({},l);o.push(t),n=n||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),n&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new J.R({layer:this,floors:null==s?void 0:s.floors,scale:(0,v.yZ)({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const l=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},n=e&&e.spatialReference,y=n.wkid||JSON.stringify(n.toJSON());o.dpi*=i;const p={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:t+","+r,...o,...l,...p}}async fetchImage(e,t,r,s){var a;const l={responseType:"image",signal:null!=(a=null==s?void 0:s.signal)?a:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},n=this.parsedUrl.path+"/export";return null==l.query.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(0,i.default)(n,l).then((e=>e.data)).catch((e=>{if((0,h.D_)(e))throw e;throw new o.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${n}`,{error:e})})):Promise.reject(new o.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:r}=await(0,i.default)(this.url,t),{extent:s,fullExtent:o,timeExtent:l}=r,n=s||o;return{fullExtent:n&&f.Z.fromJSON(n),timeExtent:l&&a.Z.fromJSON({start:l[0],end:l[1]})}}loadAll(){return(0,n.GZ)(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,i.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};(0,s._)([(0,u.Cb)({type:Boolean})],R.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,u.Cb)()],R.prototype,"dpi",void 0),(0,s._)([(0,u.Cb)()],R.prototype,"gdbVersion",void 0),(0,s._)([(0,u.Cb)()],R.prototype,"imageFormat",void 0),(0,s._)([(0,m.r)("imageFormat",["supportedImageFormatTypes"])],R.prototype,"readImageFormat",null),(0,s._)([(0,u.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],R.prototype,"imageMaxHeight",void 0),(0,s._)([(0,u.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],R.prototype,"imageMaxWidth",void 0),(0,s._)([(0,u.Cb)()],R.prototype,"imageTransparency",void 0),(0,s._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],R.prototype,"isReference",void 0),(0,s._)([(0,u.Cb)({json:{read:!1,write:!1}})],R.prototype,"labelsVisible",void 0),(0,s._)([(0,u.Cb)({type:["ArcGISMapServiceLayer"]})],R.prototype,"operationalLayerType",void 0),(0,s._)([(0,u.Cb)({json:{read:!1,write:!1}})],R.prototype,"popupEnabled",void 0),(0,s._)([(0,u.Cb)()],R.prototype,"sourceJSON",void 0),(0,s._)([(0,u.Cb)({json:{write:{ignoreOrigin:!0}}})],R.prototype,"sublayers",void 0),(0,s._)([(0,b.c)("sublayers",{layers:{type:[j.Z]},visibleLayers:{type:[c.z8]}})],R.prototype,"writeSublayers",null),(0,s._)([(0,u.Cb)({type:["show","hide","hide-children"]})],R.prototype,"listMode",void 0),(0,s._)([(0,u.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],R.prototype,"type",void 0),(0,s._)([(0,u.Cb)(M.HQ)],R.prototype,"url",void 0),R=(0,s._)([(0,d.j)("esri.layers.MapImageLayer")],R);var T=R},24065:(e,t,r)=>{r.d(t,{R:()=>c});var s=r(36663),i=r(23657),a=r(53280),o=r(61681),l=r(81977),n=(r(39994),r(7283),r(13802),r(12571)),y=r(51599),p=r(93698),h=r(89280);const u={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let c=class extends((0,a.p)(i.Z)){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>{const t=(0,h.ff)(this.floors,e);return e.toExportImageJSON(t)}));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,p.FN)(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(u[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){var e;const t=!(null==(e=this.floors)||!e.length),r=this.visibleSublayers.filter((e=>null!=e.definitionExpression||t&&null!=e.floorInfo));return r.length?JSON.stringify(r.reduce(((e,t)=>{const r=(0,h.ff)(this.floors,t),s=(0,o.pC)(r)?(0,h.Hp)(r,t):t.definitionExpression;return e[t.id]=s,e}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const t=this.layer.sublayers,r=t=>{const s=this.scale,i=0===s,a=0===t.minScale||s<=t.minScale,o=0===t.maxScale||s>=t.maxScale;t.visible&&(i||a&&o)&&(t.sublayers?t.sublayers.forEach(r):e.unshift(t))};t&&t.forEach(r);const s=this._get("visibleSublayers");return!s||s.length!==e.length||s.some(((t,r)=>e[r]!==t))?e:s}toJSON(){const e=this.layer;let t={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?t.dynamicLayers=this.dynamicLayers:t={...t,layers:this.layers,layerDefs:this.layerDefs},t}};(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"dynamicLayers",null),(0,s._)([(0,l.Cb)()],c.prototype,"floors",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"hasDynamicLayers",null),(0,s._)([(0,l.Cb)()],c.prototype,"layer",null),(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"layers",null),(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"layerDefs",null),(0,s._)([(0,l.Cb)({type:Number})],c.prototype,"scale",void 0),(0,s._)([(0,l.Cb)(y.qG)],c.prototype,"timeExtent",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"version",null),(0,s._)([(0,l.Cb)({readOnly:!0})],c.prototype,"visibleSublayers",null),c=(0,s._)([(0,n.j)("esri.layers.mixins.ExportImageParameters")],c)}}]);